{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport Geo, { geo2DDimensions } from './Geo.js';\nimport * as layout from '../../util/layout.js';\nimport * as numberUtil from '../../util/number.js';\nimport geoSourceManager from './geoSourceManager.js';\nimport * as vector from 'zrender/lib/core/vector.js';\nimport { injectCoordSysByOption } from '../../core/CoordinateSystem.js';\nimport { SINGLE_REFERRING } from '../../util/model.js';\n/**\n * Resize method bound to the geo\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n  if (boundingCoords != null) {\n    var leftTop_1 = boundingCoords[0];\n    var rightBottom_1 = boundingCoords[1];\n    if (!(isFinite(leftTop_1[0]) && isFinite(leftTop_1[1]) && isFinite(rightBottom_1[0]) && isFinite(rightBottom_1[1]))) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Invalid boundingCoords');\n      }\n    } else {\n      // Sample around the lng/lat rect and use projection to calculate actual bounding rect.\n      var projection_1 = this.projection;\n      if (projection_1) {\n        var xMin = leftTop_1[0];\n        var yMin = leftTop_1[1];\n        var xMax = rightBottom_1[0];\n        var yMax = rightBottom_1[1];\n        leftTop_1 = [Infinity, Infinity];\n        rightBottom_1 = [-Infinity, -Infinity];\n        // TODO better way?\n        var sampleLine = function (x0, y0, x1, y1) {\n          var dx = x1 - x0;\n          var dy = y1 - y0;\n          for (var i = 0; i <= 100; i++) {\n            var p = i / 100;\n            var pt = projection_1.project([x0 + dx * p, y0 + dy * p]);\n            vector.min(leftTop_1, leftTop_1, pt);\n            vector.max(rightBottom_1, rightBottom_1, pt);\n          }\n        };\n        // Top\n        sampleLine(xMin, yMin, xMax, yMin);\n        // Right\n        sampleLine(xMax, yMin, xMax, yMax);\n        // Bottom\n        sampleLine(xMax, yMax, xMin, yMax);\n        // Left\n        sampleLine(xMin, yMax, xMax, yMin);\n      }\n      this.setBoundingRect(leftTop_1[0], leftTop_1[1], rightBottom_1[0] - leftTop_1[0], rightBottom_1[1] - leftTop_1[1]);\n    }\n  }\n  var rect = this.getBoundingRect();\n  var centerOption = geoModel.get('layoutCenter');\n  var sizeOption = geoModel.get('layoutSize');\n  // Laying out geo on `dataCoordSys`, such as cartesian, works theoretically but not supported yet.\n  // Therefore here we only handle cases that laying out on `boxCoordSys`, such as matrix/calendar.\n  var refContainer = layout.createBoxLayoutReference(geoModel, api).refContainer;\n  var aspect = rect.width / rect.height * this.aspectScale;\n  var useCenterAndSize = false;\n  var center;\n  var size;\n  if (centerOption && sizeOption) {\n    center = [numberUtil.parsePercent(centerOption[0], refContainer.width) + refContainer.x, numberUtil.parsePercent(centerOption[1], refContainer.height) + refContainer.y];\n    size = numberUtil.parsePercent(sizeOption, Math.min(refContainer.width, refContainer.height));\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Given layoutCenter or layoutSize data are invalid. Use left/top/width/height instead.');\n      }\n    }\n  }\n  var viewRect;\n  if (useCenterAndSize) {\n    viewRect = {};\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    var boxLayoutOption = geoModel.getBoxLayoutParams();\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, refContainer);\n    viewRect = layout.applyPreserveAspect(geoModel, viewRect, aspect);\n  }\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n// Back compat for ECharts2, where the coord map is set on map series:\n// {type: 'map', geoCoord: {'cityA': [116.46,39.92], 'cityA': [119.12,24.61]}},\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\nvar GeoCreator = /** @class */function () {\n  function GeoCreator() {\n    // For deciding which dimensions to use when creating list data\n    this.dimensions = geo2DDimensions;\n  }\n  GeoCreator.prototype.create = function (ecModel, api) {\n    var geoList = [];\n    function getCommonGeoProperties(model) {\n      return {\n        nameProperty: model.get('nameProperty'),\n        aspectScale: model.get('aspectScale'),\n        projection: model.get('projection')\n      };\n    }\n    // FIXME Create each time may be slow\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var mapName = geoModel.get('map');\n      var geo = new Geo(mapName + idx, mapName, zrUtil.extend({\n        nameMap: geoModel.get('nameMap'),\n        api: api,\n        ecModel: ecModel\n      }, getCommonGeoProperties(geoModel)));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      // setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel;\n      // Inject resize method\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      injectCoordSysByOption({\n        targetModel: seriesModel,\n        coordSysType: 'geo',\n        coordSysProvider: function () {\n          var geoModel = seriesModel.subType === 'map' ? seriesModel.getHostGeoModel() : seriesModel.getReferringComponents('geo', SINGLE_REFERRING).models[0];\n          return geoModel && geoModel.coordinateSystem;\n        },\n        allowNotFound: true\n      });\n    });\n    // If has map series\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, zrUtil.extend({\n        nameMap: zrUtil.mergeAll(nameMapList),\n        api: api,\n        ecModel: ecModel\n      }, getCommonGeoProperties(mapSeries[0])));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo);\n      // Inject resize method\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  };\n  /**\n   * Fill given regions array\n   */\n  GeoCreator.prototype.getFilledRegions = function (originRegionArr, mapName, nameMap, nameProperty) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    var dataNameMap = zrUtil.createHashMap();\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n    var source = geoSourceManager.load(mapName, nameMap, nameProperty);\n    zrUtil.each(source.regions, function (region) {\n      var name = region.name;\n      var regionOption = dataNameMap.get(name);\n      // apply specified echarts style in GeoJSON data\n      var specifiedGeoJSONRegionStyle = region.properties && region.properties.echartsStyle;\n      if (!regionOption) {\n        regionOption = {\n          name: name\n        };\n        regionsArr.push(regionOption);\n      }\n      specifiedGeoJSONRegionStyle && zrUtil.merge(regionOption, specifiedGeoJSONRegionStyle);\n    });\n    return regionsArr;\n  };\n  return GeoCreator;\n}();\nvar geoCreator = new GeoCreator();\nexport default geoCreator;","map":{"version":3,"names":["zrUtil","Geo","geo2DDimensions","layout","numberUtil","geoSourceManager","vector","injectCoordSysByOption","SINGLE_REFERRING","resizeGeo","geoModel","api","boundingCoords","get","leftTop_1","rightBottom_1","isFinite","process","env","NODE_ENV","console","error","projection_1","projection","xMin","yMin","xMax","yMax","Infinity","sampleLine","x0","y0","x1","y1","dx","dy","i","p","pt","project","min","max","setBoundingRect","rect","getBoundingRect","centerOption","sizeOption","refContainer","createBoxLayoutReference","aspect","width","height","aspectScale","useCenterAndSize","center","size","parsePercent","x","y","Math","isNaN","warn","viewRect","boxLayoutOption","getBoxLayoutParams","getLayoutRect","applyPreserveAspect","setViewRect","setCenter","setZoom","setGeoCoords","geo","model","each","geoCoord","name","addGeoCoord","GeoCreator","dimensions","prototype","create","ecModel","geoList","getCommonGeoProperties","nameProperty","eachComponent","idx","mapName","extend","nameMap","zoomLimit","push","coordinateSystem","resize","eachSeries","seriesModel","targetModel","coordSysType","coordSysProvider","subType","getHostGeoModel","getReferringComponents","models","allowNotFound","mapModelGroupBySeries","eachSeriesByType","mapType","getMapType","mapSeries","nameMapList","map","singleMapSeries","mergeAll","retrieve","apply","getFilledRegions","originRegionArr","regionsArr","slice","dataNameMap","createHashMap","length","set","source","load","regions","region","regionOption","specifiedGeoJSONRegionStyle","properties","echartsStyle","merge","geoCreator"],"sources":["D:/Program Files/JetBrains/IDEAProject/springboot-vue-wms_test/vuedemo2/node_modules/echarts/lib/coord/geo/geoCreator.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport Geo, { geo2DDimensions } from './Geo.js';\nimport * as layout from '../../util/layout.js';\nimport * as numberUtil from '../../util/number.js';\nimport geoSourceManager from './geoSourceManager.js';\nimport * as vector from 'zrender/lib/core/vector.js';\nimport { injectCoordSysByOption } from '../../core/CoordinateSystem.js';\nimport { SINGLE_REFERRING } from '../../util/model.js';\n/**\n * Resize method bound to the geo\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n  if (boundingCoords != null) {\n    var leftTop_1 = boundingCoords[0];\n    var rightBottom_1 = boundingCoords[1];\n    if (!(isFinite(leftTop_1[0]) && isFinite(leftTop_1[1]) && isFinite(rightBottom_1[0]) && isFinite(rightBottom_1[1]))) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Invalid boundingCoords');\n      }\n    } else {\n      // Sample around the lng/lat rect and use projection to calculate actual bounding rect.\n      var projection_1 = this.projection;\n      if (projection_1) {\n        var xMin = leftTop_1[0];\n        var yMin = leftTop_1[1];\n        var xMax = rightBottom_1[0];\n        var yMax = rightBottom_1[1];\n        leftTop_1 = [Infinity, Infinity];\n        rightBottom_1 = [-Infinity, -Infinity];\n        // TODO better way?\n        var sampleLine = function (x0, y0, x1, y1) {\n          var dx = x1 - x0;\n          var dy = y1 - y0;\n          for (var i = 0; i <= 100; i++) {\n            var p = i / 100;\n            var pt = projection_1.project([x0 + dx * p, y0 + dy * p]);\n            vector.min(leftTop_1, leftTop_1, pt);\n            vector.max(rightBottom_1, rightBottom_1, pt);\n          }\n        };\n        // Top\n        sampleLine(xMin, yMin, xMax, yMin);\n        // Right\n        sampleLine(xMax, yMin, xMax, yMax);\n        // Bottom\n        sampleLine(xMax, yMax, xMin, yMax);\n        // Left\n        sampleLine(xMin, yMax, xMax, yMin);\n      }\n      this.setBoundingRect(leftTop_1[0], leftTop_1[1], rightBottom_1[0] - leftTop_1[0], rightBottom_1[1] - leftTop_1[1]);\n    }\n  }\n  var rect = this.getBoundingRect();\n  var centerOption = geoModel.get('layoutCenter');\n  var sizeOption = geoModel.get('layoutSize');\n  // Laying out geo on `dataCoordSys`, such as cartesian, works theoretically but not supported yet.\n  // Therefore here we only handle cases that laying out on `boxCoordSys`, such as matrix/calendar.\n  var refContainer = layout.createBoxLayoutReference(geoModel, api).refContainer;\n  var aspect = rect.width / rect.height * this.aspectScale;\n  var useCenterAndSize = false;\n  var center;\n  var size;\n  if (centerOption && sizeOption) {\n    center = [numberUtil.parsePercent(centerOption[0], refContainer.width) + refContainer.x, numberUtil.parsePercent(centerOption[1], refContainer.height) + refContainer.y];\n    size = numberUtil.parsePercent(sizeOption, Math.min(refContainer.width, refContainer.height));\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Given layoutCenter or layoutSize data are invalid. Use left/top/width/height instead.');\n      }\n    }\n  }\n  var viewRect;\n  if (useCenterAndSize) {\n    viewRect = {};\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    var boxLayoutOption = geoModel.getBoxLayoutParams();\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, refContainer);\n    viewRect = layout.applyPreserveAspect(geoModel, viewRect, aspect);\n  }\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n// Back compat for ECharts2, where the coord map is set on map series:\n// {type: 'map', geoCoord: {'cityA': [116.46,39.92], 'cityA': [119.12,24.61]}},\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\nvar GeoCreator = /** @class */function () {\n  function GeoCreator() {\n    // For deciding which dimensions to use when creating list data\n    this.dimensions = geo2DDimensions;\n  }\n  GeoCreator.prototype.create = function (ecModel, api) {\n    var geoList = [];\n    function getCommonGeoProperties(model) {\n      return {\n        nameProperty: model.get('nameProperty'),\n        aspectScale: model.get('aspectScale'),\n        projection: model.get('projection')\n      };\n    }\n    // FIXME Create each time may be slow\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var mapName = geoModel.get('map');\n      var geo = new Geo(mapName + idx, mapName, zrUtil.extend({\n        nameMap: geoModel.get('nameMap'),\n        api: api,\n        ecModel: ecModel\n      }, getCommonGeoProperties(geoModel)));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      // setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel;\n      // Inject resize method\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      injectCoordSysByOption({\n        targetModel: seriesModel,\n        coordSysType: 'geo',\n        coordSysProvider: function () {\n          var geoModel = seriesModel.subType === 'map' ? seriesModel.getHostGeoModel() : seriesModel.getReferringComponents('geo', SINGLE_REFERRING).models[0];\n          return geoModel && geoModel.coordinateSystem;\n        },\n        allowNotFound: true\n      });\n    });\n    // If has map series\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, zrUtil.extend({\n        nameMap: zrUtil.mergeAll(nameMapList),\n        api: api,\n        ecModel: ecModel\n      }, getCommonGeoProperties(mapSeries[0])));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo);\n      // Inject resize method\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  };\n  /**\n   * Fill given regions array\n   */\n  GeoCreator.prototype.getFilledRegions = function (originRegionArr, mapName, nameMap, nameProperty) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    var dataNameMap = zrUtil.createHashMap();\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n    var source = geoSourceManager.load(mapName, nameMap, nameProperty);\n    zrUtil.each(source.regions, function (region) {\n      var name = region.name;\n      var regionOption = dataNameMap.get(name);\n      // apply specified echarts style in GeoJSON data\n      var specifiedGeoJSONRegionStyle = region.properties && region.properties.echartsStyle;\n      if (!regionOption) {\n        regionOption = {\n          name: name\n        };\n        regionsArr.push(regionOption);\n      }\n      specifiedGeoJSONRegionStyle && zrUtil.merge(regionOption, specifiedGeoJSONRegionStyle);\n    });\n    return regionsArr;\n  };\n  return GeoCreator;\n}();\nvar geoCreator = new GeoCreator();\nexport default geoCreator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}