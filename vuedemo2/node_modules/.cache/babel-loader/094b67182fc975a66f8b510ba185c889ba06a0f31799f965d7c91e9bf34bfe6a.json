{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrender from 'zrender/lib/zrender.js';\nimport { assert, each, isFunction, isObject, indexOf, bind, clone, setAsPrimitive, extend, createHashMap, map, defaults, isDom, isArray, noop, isString, retrieve2 } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport timsort from 'zrender/lib/core/timsort.js';\nimport Eventful from 'zrender/lib/core/Eventful.js';\nimport GlobalModel from '../model/Global.js';\nimport ExtensionAPI from './ExtensionAPI.js';\nimport CoordinateSystemManager from './CoordinateSystem.js';\nimport OptionManager from '../model/OptionManager.js';\nimport backwardCompat from '../preprocessor/backwardCompat.js';\nimport dataStack from '../processor/dataStack.js';\nimport SeriesModel from '../model/Series.js';\nimport ComponentView from '../view/Component.js';\nimport ChartView from '../view/Chart.js';\nimport * as graphic from '../util/graphic.js';\nimport { getECData } from '../util/innerStore.js';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlobalMouseOutForHighDown, SELECT_CHANGED_EVENT_TYPE } from '../util/states.js';\nimport * as modelUtil from '../util/model.js';\nimport { throttle } from '../util/throttle.js';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style.js';\nimport loadingDefault from '../loading/default.js';\nimport Scheduler from './Scheduler.js';\nimport darkTheme from '../theme/dark.js';\nimport { parseClassType } from '../util/clazz.js';\nimport { ECEventProcessor } from '../util/ECEventProcessor.js';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol.js';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper.js';\nimport { deprecateLog, deprecateReplaceLog, error, warn } from '../util/log.js';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction.js';\nimport { registerExternalTransform } from '../data/helper/transform.js';\nimport { createLocaleObject, SYSTEM_LANG } from './locale.js';\nimport { findEventDispatcher } from '../util/event.js';\nimport decal from '../visual/decal.js';\nimport lifecycle from './lifecycle.js';\nimport { platformApi, setPlatformAPI } from 'zrender/lib/core/platform.js';\nimport { getImpl } from './impl.js';\nimport { registerCustomSeries as registerCustom } from '../chart/custom/customSeriesRegister.js';\nexport var version = '6.0.0';\nexport var dependencies = {\n  zrender: '6.0.0'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800;\n// Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\nvar PRIORITY_PROCESSOR_DATASTACK = 900;\n// \"Data filter\" will block the stream, so it should be\n// put at the beginning of data processing.\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000;\n// Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500;\n// Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n};\n// Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\n// Useful for detecting outdated rendering results in scenarios that these issues are involved:\n//  - Use shortcut (such as, updateTransform, or no update) to start a main process.\n//  - Asynchronously update rendered view (e.g., graph force layout).\n//  - Multiple ChartView/ComponentView render to one group cooperatively.\nvar MAIN_PROCESS_VERSION_KEY = '__mainProcessVersion';\nvar PENDING_UPDATE = '__pendingUpdate';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\nvar MessageCenter = /** @class */function (_super) {\n  __extends(MessageCenter, _super);\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return MessageCenter;\n}(Eventful);\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off');\n// ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar createExtensionAPI;\nvar enableConnect;\nvar markStatusToUpdate;\nvar applyChangedStates;\nvar updateMainProcessVersion;\nvar ECharts = /** @class */function (_super) {\n  __extends(ECharts, _super);\n  function ECharts(dom,\n  // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {};\n    // Can't dispatch action during rendering procedure\n    _this._pendingActions = [];\n    opts = opts || {};\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultCoarsePointer = 'auto';\n    var defaultUseDirtyRect = false;\n    _this[MAIN_PROCESS_VERSION_KEY] = 1;\n    if (process.env.NODE_ENV !== 'production') {\n      var root = /* eslint-disable-next-line */\n      env.hasGlobalWindow ? window : global;\n      if (root) {\n        defaultRenderer = retrieve2(root.__ECHARTS__DEFAULT__RENDERER__, defaultRenderer);\n        defaultCoarsePointer = retrieve2(root.__ECHARTS__DEFAULT__COARSE_POINTER, defaultCoarsePointer);\n        defaultUseDirtyRect = retrieve2(root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__, defaultUseDirtyRect);\n      }\n    }\n    if (opts.ssr) {\n      zrender.registerSSRDataGetter(function (el) {\n        var ecData = getECData(el);\n        var dataIndex = ecData.dataIndex;\n        if (dataIndex == null) {\n          return;\n        }\n        var hashMap = createHashMap();\n        hashMap.set('series_index', ecData.seriesIndex);\n        hashMap.set('data_index', dataIndex);\n        ecData.ssrType && hashMap.set('ssr_type', ecData.ssrType);\n        return hashMap;\n      });\n    }\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      ssr: opts.ssr,\n      useDirtyRect: retrieve2(opts.useDirtyRect, defaultUseDirtyRect),\n      useCoarsePointer: retrieve2(opts.useCoarsePointer, defaultCoarsePointer),\n      pointerSize: opts.pointerSize\n    });\n    _this._ssr = opts.ssr;\n    // Expect 60 fps.\n    _this._throttledZrFlush = throttle(bind(zr.flush, zr), 17);\n    _this._updateTheme(theme);\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this);\n    // Sort on demand\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter();\n    // Init mouse events\n    _this._initEvents();\n    // In case some people write `window.onresize = chart.resize`\n    _this.resize = bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this);\n    // ECharts instance can be used as value.\n    setAsPrimitive(_this);\n    return _this;\n  }\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n    applyChangedStates(this);\n    var scheduler = this._scheduler;\n    // Lazy update\n    if (this[PENDING_UPDATE]) {\n      var silent = this[PENDING_UPDATE].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n      updateMainProcessVersion(this);\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, this[PENDING_UPDATE].updateParams);\n      } catch (e) {\n        this[IN_MAIN_PROCESS_KEY] = false;\n        this[PENDING_UPDATE] = null;\n        throw e;\n      }\n      // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n      this._zr.flush();\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[PENDING_UPDATE] = null;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n    // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel);\n        // Currently dataProcessorFuncs do not check threshold.\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel);\n        // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determined in the first frame (the\n        // frame is executed immediately after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain', {});\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished);\n      // Call flush explicitly for trigger finished event.\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      }\n      // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n    }\n  };\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n  ECharts.prototype.isSSR = function () {\n    return this._ssr;\n  };\n  /* eslint-disable-next-line */\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`setOption` should not be called during main process.');\n      }\n      return;\n    }\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n    this[IN_MAIN_PROCESS_KEY] = true;\n    updateMainProcessVersion(this);\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.ssr = this._ssr;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n    var updateParams = {\n      seriesTransition: transitionOpt,\n      optionChanged: true\n    };\n    if (lazyUpdate) {\n      this[PENDING_UPDATE] = {\n        silent: silent,\n        updateParams: updateParams\n      };\n      this[IN_MAIN_PROCESS_KEY] = false;\n      // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n      this.getZr().wakeUp();\n    } else {\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, updateParams);\n      } catch (e) {\n        this[PENDING_UPDATE] = null;\n        this[IN_MAIN_PROCESS_KEY] = false;\n        throw e;\n      }\n      // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n      if (!this._ssr) {\n        // not use flush when using ssr mode.\n        this._zr.flush();\n      }\n      this[PENDING_UPDATE] = null;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * Update theme with name or theme option and repaint the chart.\n   * @param theme Theme name or theme option.\n   * @param opts Optional settings\n   */\n  ECharts.prototype.setTheme = function (theme, opts) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`setTheme` should not be called during main process.');\n      }\n      return;\n    }\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var ecModel = this._model;\n    if (!ecModel) {\n      return;\n    }\n    var silent = opts && opts.silent;\n    var updateParams = null;\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n      updateParams = this[PENDING_UPDATE].updateParams;\n      this[PENDING_UPDATE] = null;\n    }\n    this[IN_MAIN_PROCESS_KEY] = true;\n    updateMainProcessVersion(this);\n    try {\n      this._updateTheme(theme);\n      ecModel.setTheme(this._theme);\n      prepare(this);\n      updateMethods.update.call(this, {\n        type: 'setTheme'\n      }, updateParams);\n    } catch (e) {\n      this[IN_MAIN_PROCESS_KEY] = false;\n      throw e;\n    }\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n  ECharts.prototype._updateTheme = function (theme) {\n    if (isString(theme)) {\n      theme = themeStorage[theme];\n    }\n    if (theme) {\n      theme = clone(theme);\n      theme && backwardCompat(theme, true);\n      this._theme = theme;\n    }\n  };\n  // We don't want developers to use getModel directly.\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */ || env.hasGlobalWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   * @deprecated Use renderToCanvas instead.\n   */\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      deprecateReplaceLog('getRenderedCanvas', 'renderToCanvas');\n    }\n    return this.renderToCanvas(opts);\n  };\n  ECharts.prototype.renderToCanvas = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'canvas') {\n        throw new Error('renderToCanvas can only be used in the canvas renderer.');\n      }\n    }\n    return painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n  ECharts.prototype.renderToSVGString = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'svg') {\n        throw new Error('renderToSVGString can only be used in the svg renderer.');\n      }\n    }\n    return painter.renderToString({\n      useViewBox: opts.useViewBox\n    });\n  };\n  /**\n   * Get svg data url\n   */\n  ECharts.prototype.getSvgDataURL = function () {\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList();\n    // Stop animations\n    each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.renderToCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.renderToCanvas(clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = platformApi.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n  ECharts.prototype.convertToPixel = function (finder, value, opt) {\n    return doConvertPixel(this, 'convertToPixel', finder, value, opt);\n  };\n  /**\n   * Convert from logical coordinate system to pixel coordinate system.\n   * See CoordinateSystem#convertToPixel.\n   *\n   * @see CoordinateSystem['dataToLayout'] for parameters and return.\n   * @see CoordinateSystemDataCoord\n   */\n  ECharts.prototype.convertToLayout = function (finder, value, opt) {\n    return doConvertPixel(this, 'convertToLayout', finder, value, opt);\n  };\n  // The above are signatures from before v6, thus they should be preserved for backward compat.\n  ECharts.prototype.convertFromPixel = function (finder, value, opt) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value, opt);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        warn('There is no specified series model');\n      }\n    }\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout';\n        // no e.target when 'globalout'.\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType, el) || {};\n              return true;\n            }\n            // If element has custom eventData of components\n            else if (ecData.eventData) {\n              params = extend({}, ecData.eventData);\n              return true;\n            }\n          }, true);\n        }\n        // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex;\n          // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              warn('model or view can not be found by params');\n            }\n          }\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n          _this.trigger(eveName, params);\n        }\n      };\n      // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n      handler.zrEventfulCallAtLast = true;\n      _this._zr.on(eveName, handler, _this);\n    });\n    var messageCenter = this._messageCenter;\n    each(publicEventTypeMap, function (_, eventType) {\n      messageCenter.on(eventType, function (event) {\n        _this.trigger(eventType, event);\n      });\n    });\n    handleLegacySelectEvents(messageCenter, this, this._api);\n  };\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this.setOption({\n      series: []\n    }, true);\n  };\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this._disposed = true;\n    var dom = this.getDom();\n    if (dom) {\n      modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    }\n    var chart = this;\n    var api = chart._api;\n    var ecModel = chart._model;\n    each(chart._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(chart._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    });\n    // Dispose after all views disposed\n    chart._zr.dispose();\n    // Set properties to null.\n    // To reduce the memory cost in case the top code still holds this instance unexpectedly.\n    chart._dom = chart._model = chart._chartsMap = chart._componentsMap = chart._chartsViews = chart._componentsViews = chart._scheduler = chart._api = chart._zr = chart._throttledZrFlush = chart._theme = chart._coordSysMgr = chart._messageCenter = null;\n    delete instances[chart.id];\n  };\n  /**\n   * Resize the chart\n   */\n  ECharts.prototype.resize = function (opts) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`resize` should not be called during main process.');\n      }\n      return;\n    }\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this._zr.resize(opts);\n    var ecModel = this._model;\n    // Resize loading effect\n    this._loadingFX && this._loadingFX.resize();\n    if (!ecModel) {\n      return;\n    }\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent;\n    // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n      needPrepare = true;\n      this[PENDING_UPDATE] = null;\n    }\n    this[IN_MAIN_PROCESS_KEY] = true;\n    updateMainProcessVersion(this);\n    try {\n      needPrepare && prepare(this);\n      updateMethods.update.call(this, {\n        type: 'resize',\n        animation: extend({\n          // Disable animation\n          duration: 0\n        }, opts && opts.animation)\n      });\n    } catch (e) {\n      this[IN_MAIN_PROCESS_KEY] = false;\n      throw e;\n    }\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n    name = name || 'default';\n    this.hideLoading();\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('Loading effects ' + name + ' not exists.');\n      }\n      return;\n    }\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = extend({}, eventObj);\n    payload.type = connectionEventRevertMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n    if (!actions[payload.type]) {\n      return;\n    }\n    // Avoid dispatch action before setOption. Especially in `connect`.\n    if (!this._model) {\n      return;\n    }\n    // May dispatchAction in rendering procedure\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n      return;\n    }\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embedded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh until user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n  ECharts.prototype.updateLabelLayout = function () {\n    lifecycle.trigger('series:layoutlabels', this._model, this._api, {\n      // Not adding series labels.\n      // TODO\n      updatedSeries: []\n    });\n  };\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n    seriesModel.appendData(params);\n    // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  };\n  // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n      function doPrepare(model) {\n        // By default view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView;\n        // This command should not work twice.\n        model.__requireNewView = false;\n        // Consider: id same and type changed.\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) :\n          // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload);\n      // broadcast\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      }\n      // If dispatchAction before setOption, do nothing.\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) != null;\n        if (isExcluded) {\n          return;\n        }\n        ;\n        if (isHighDownPayload(payload)) {\n          if (model instanceof SeriesModel) {\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur && !model.get(['emphasis', 'disabled'])) {\n              blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n            }\n          } else {\n            var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n              focusSelf = _a.focusSelf,\n              dispatchers = _a.dispatchers;\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n              blurComponent(model.mainType, model.componentIndex, ecIns._api);\n            }\n            // PENDING:\n            // Whether to put this \"enter emphasis\" code in `ComponentView`,\n            // which will be the same as `ChartView` but might be not necessary\n            // and will be far from this logic.\n            if (dispatchers) {\n              each(dispatchers, function (dispatcher) {\n                payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n              });\n            }\n          }\n        } else if (isSelectChangePayload(payload)) {\n          // TODO geo\n          if (model instanceof SeriesModel) {\n            toggleSelectionFromPayload(model, payload, ecIns._api);\n            updateSeriesElementSelection(model);\n            markStatusToUpdate(ecIns);\n          }\n        }\n      }, ecIns);\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) != null;\n        if (isExcluded) {\n          return;\n        }\n        ;\n        callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n      }, ecIns);\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload, payload && {\n          // Needs to mark option changed if newOption is given.\n          // It's from MagicType.\n          // TODO If use a separate flag optionChanged in payload?\n          optionChanged: payload.newOption != null\n        });\n      },\n      update: function (payload, updateParams) {\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler;\n        // update before setOption\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel);\n        // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the original point.\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload);\n        // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // determine whether to use progressive rendering.\n        updateStreamModes(this, ecModel);\n        // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not required in stream mode updater currently.\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        // Set background and dark mode before rendering, because they affect auto-color-determination\n        // in zrender Text, and consequently affect the bounding rect if stroke is added.\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        zr.setBackgroundColor(backgroundColor);\n        // Force set dark mode.\n        var darkMode = ecModel.get('darkMode');\n        if (darkMode != null && darkMode !== 'auto') {\n          zr.setDarkMode(darkMode);\n        }\n        render(this, ecModel, api, payload, updateParams);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n        var ecModel = this._model;\n        var api = this._api;\n        // update before setOption\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload);\n        // ChartView.markUpdateMethod(payload, 'updateTransform');\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n          var componentView = _this.getViewOfComponentModel(componentModel);\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel);\n        // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        });\n        // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n        renderSeries(this, ecModel, api, payload, {}, seriesDirtyMap);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model;\n        // update before setOption\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel);\n        // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n        render(this, ecModel, this._api, payload, {});\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n        var ecModel = this._model;\n        // update before setOption\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload);\n        // clear all visual\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        });\n        // Perform visual\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel);\n        // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n    function doConvertPixelImpl(ecIns, methodName, finder, value, opt) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n      var ecModel = ecIns._model;\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value, opt)) != null) {\n          return result;\n        }\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    }\n    ;\n    doConvertPixel = doConvertPixelImpl;\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionInfo = actions[payloadType];\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      updateMainProcessVersion(this);\n      var payloads = [payload];\n      var batched = false;\n      // Batch action\n      if (payload.batch) {\n        batched = true;\n        payloads = map(payload.batch, function (item) {\n          item = defaults(extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n      var eventObjBatch = [];\n      var eventObj;\n      var actionResultBatch = [];\n      var nonRefinedEventType = actionInfo.nonRefinedEventType;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload);\n      // Only leave blur once if there are multiple batches.\n      if (isHighDown) {\n        allLeaveBlur(this._api);\n      }\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        var actionResult = actionInfo.action(batchItem, ecModel, _this._api);\n        if (actionInfo.refineEvent) {\n          actionResultBatch.push(actionResult);\n        } else {\n          eventObj = actionResult;\n        }\n        eventObj = eventObj || extend({}, batchItem);\n        eventObj.type = nonRefinedEventType;\n        eventObjBatch.push(eventObj);\n        // light update does not perform data process, layout and visual.\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n            queryOptionMap = _a.queryOptionMap,\n            mainTypeSpecified = _a.mainTypeSpecified;\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        try {\n          // Still dirty\n          if (this[PENDING_UPDATE]) {\n            prepare(this);\n            updateMethods.update.call(this, payload);\n            this[PENDING_UPDATE] = null;\n          } else {\n            updateMethods[updateMethod].call(this, payload);\n          }\n        } catch (e) {\n          this[IN_MAIN_PROCESS_KEY] = false;\n          throw e;\n        }\n      }\n      // Follow the rule of action batch\n      if (batched) {\n        eventObj = {\n          type: nonRefinedEventType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n      this[IN_MAIN_PROCESS_KEY] = false;\n      if (!silent) {\n        var refinedEvent = void 0;\n        if (actionInfo.refineEvent) {\n          var eventContent = actionInfo.refineEvent(actionResultBatch, payload, ecModel, this._api).eventContent;\n          assert(isObject(eventContent));\n          refinedEvent = defaults({\n            type: actionInfo.refinedEventType\n          }, eventContent);\n          refinedEvent.fromAction = payload.type;\n          refinedEvent.fromActionPayload = payload;\n          refinedEvent.escapeConnect = true;\n        }\n        var messageCenter = this._messageCenter;\n        // - If `refineEvent` created a `refinedEvent`, `eventObj` (replicated from the original payload)\n        //  is still needed to be triggered for the feature `connect`. But it will not be triggered to\n        //  users in this case.\n        // - If no `refineEvent` used, `eventObj` will be triggered for both `connect` and users.\n        messageCenter.trigger(eventObj.type, eventObj);\n        if (refinedEvent) {\n          messageCenter.trigger(refinedEvent.type, refinedEvent);\n        }\n      }\n    };\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params);\n        // The `finished` event should not be triggered repeatedly,\n        // so it should only be triggered when rendering indeed happens\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n        if (\n        // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[PENDING_UPDATE] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n        if (dispatcher) {\n          handleGlobalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n    function clearColorPalette(ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    }\n    ;\n    // Allocate zlevels for series and components\n    function allocateZlevels(ecModel) {\n      ;\n      var componentZLevels = [];\n      var seriesZLevels = [];\n      var hasSeparateZLevel = false;\n      ecModel.eachComponent(function (componentType, componentModel) {\n        var zlevel = componentModel.get('zlevel') || 0;\n        var z = componentModel.get('z') || 0;\n        var zlevelKey = componentModel.getZLevelKey();\n        hasSeparateZLevel = hasSeparateZLevel || !!zlevelKey;\n        (componentType === 'series' ? seriesZLevels : componentZLevels).push({\n          zlevel: zlevel,\n          z: z,\n          idx: componentModel.componentIndex,\n          type: componentType,\n          key: zlevelKey\n        });\n      });\n      if (hasSeparateZLevel) {\n        // Series after component\n        var zLevels = componentZLevels.concat(seriesZLevels);\n        var lastSeriesZLevel_1;\n        var lastSeriesKey_1;\n        timsort(zLevels, function (a, b) {\n          if (a.zlevel === b.zlevel) {\n            return a.z - b.z;\n          }\n          return a.zlevel - b.zlevel;\n        });\n        each(zLevels, function (item) {\n          var componentModel = ecModel.getComponent(item.type, item.idx);\n          var zlevel = item.zlevel;\n          var key = item.key;\n          if (lastSeriesZLevel_1 != null) {\n            zlevel = Math.max(lastSeriesZLevel_1, zlevel);\n          }\n          if (key) {\n            if (zlevel === lastSeriesZLevel_1 && key !== lastSeriesKey_1) {\n              zlevel++;\n            }\n            lastSeriesKey_1 = key;\n          } else if (lastSeriesKey_1) {\n            if (zlevel === lastSeriesZLevel_1) {\n              zlevel++;\n            }\n            lastSeriesKey_1 = '';\n          }\n          lastSeriesZLevel_1 = zlevel;\n          componentModel.setZLevel(zlevel);\n        });\n      }\n    }\n    render = function (ecIns, ecModel, api, payload, updateParams) {\n      allocateZlevels(ecModel);\n      renderComponents(ecIns, ecModel, api, payload, updateParams);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload, updateParams);\n      // Remove groups of unrendered charts\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n    renderComponents = function (ecIns, ecModel, api, payload, updateParams, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n    renderSeries = function (ecIns, ecModel, api, payload, updateParams, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      updateParams = extend(updateParams || {}, {\n        updatedSeries: ecModel.getSeries()\n      });\n      // TODO progressive?\n      lifecycle.trigger('series:beforeupdate', ecModel, api, updateParams);\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload);\n        // TODO states on marker.\n        clearStates(seriesModel, chartView);\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n        chartView.group.silent = !!seriesModel.get('silent');\n        // Should not call markRedraw on group, because it will disable zrender\n        // incremental render (always render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      lifecycle.trigger('series:layoutlabels', ecModel, api, updateParams);\n      // transition after label is layouted.\n      lifecycle.trigger('series:transition', ecModel, api, updateParams);\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        // Update Z after labels updated. Before applying states.\n        updateZ(seriesModel, chartView);\n        // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n        updateStates(seriesModel, chartView);\n      });\n      // If use hover layer\n      updateHoverLayerStatus(ecIns, ecModel);\n      lifecycle.trigger('series:afterupdate', ecModel, api, updateParams);\n    };\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true;\n      // Wake up zrender if it's sleep. Let it update states in the next frame.\n      ecIns.getZr().wakeUp();\n    };\n    updateMainProcessVersion = function (ecIns) {\n      ecIns[MAIN_PROCESS_VERSION_KEY] = (ecIns[MAIN_PROCESS_VERSION_KEY] + 1) % 1000;\n    };\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates;\n      // Keep other states.\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      }\n      // Only use states when it's exists.\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n      el.useStates(newStates);\n    }\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n          if (chartView.__alive) {\n            chartView.eachRendered(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n    ;\n    /**\n     * Update chart and blend.\n     */\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n      chartView.eachRendered(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DON'T mark the element dirty. In case element is incremental and don't want to rerender.\n          el.style.blend = blendMode;\n        }\n      });\n    }\n    ;\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      }\n      var zInfo = graphic.retrieveZInfo(model);\n      // Set z and zlevel\n      view.eachRendered(function (el) {\n        graphic.traverseUpdateZ(el, zInfo.z, zInfo.zlevel);\n        // Don't traverse the children because it has been traversed in _updateZ.\n        return true;\n      });\n    }\n    ;\n    // Clear states without animation.\n    // TODO States on component.\n    function clearStates(model, view) {\n      view.eachRendered(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        }\n        // TODO If el is incremental.\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing')\n        // additive: stateAnimationModel.get('additive')\n      } : null;\n      view.eachRendered(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          }\n          // Only updated on changed element. In case element is incremental and don't want to rerender.\n          // TODO, a more proper way?\n          if (el.__dirty) {\n            var prevStates = el.prevStates;\n            // Restore states without animation\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          }\n          // Update state transition and enable animation again.\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine();\n            // TODO Is it necessary to animate label?\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          }\n          // Use highlighted and selected flag to toggle states.\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n    ;\n    createExtensionAPI = function (ecIns) {\n      return new (/** @class */function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n            el = el.parent;\n          }\n        };\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n        class_1.prototype.getMainProcessVersion = function () {\n          return ecIns[MAIN_PROCESS_VERSION_KEY];\n        };\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n      each(connectionEventRevertMap, function (_, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n  }();\n  return ECharts;\n}(Eventful);\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n  function wrapped() {\n    var args2 = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n    cb && cb.apply && cb.apply(this, args2);\n    // @ts-ignore\n    self.off(eventName, wrapped);\n  }\n  ;\n  // @ts-ignore\n  this.on.call(this, eventName, wrapped, ctx);\n};\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn('Instance ' + id + ' has been disposed');\n  }\n}\nvar actions = {};\n/**\n * Map event type to action type for reproducing action from event for `connect`.\n */\nvar connectionEventRevertMap = {};\n/**\n * To remove duplication.\n */\nvar publicEventTypeMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.locale Specify the locale.\n * @param opts.useDirtyRect Enable dirty rectangle rendering or not.\n */\nexport function init(dom, theme, opts) {\n  var isClient = !(opts && opts.ssr);\n  if (isClient) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!dom) {\n        throw new Error('Initialize failed: invalid dom.');\n      }\n    }\n    var existInstance = getInstanceByDom(dom);\n    if (existInstance) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('There is a chart instance already initialized on the dom.');\n      }\n      return existInstance;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n        warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n      }\n    }\n  }\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  isClient && modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  lifecycle.trigger('afterinit', chart);\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\nexport function connect(groupId) {\n  // Is array of charts\n  if (isArray(groupId)) {\n    var charts = groupId;\n    groupId = null;\n    // If any chart has group\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n  connectedGroups[groupId] = true;\n  return groupId;\n}\nexport function disconnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backward compatibility\n * @deprecated\n */\nexport var disConnect = disconnect;\n/**\n * Dispose a chart instance\n */\nexport function dispose(chart) {\n  if (isString(chart)) {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\nexport function registerPostInit(postInitFunc) {\n  registerUpdateLifecycle('afterinit', postInitFunc);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\nexport function registerPostUpdate(postUpdateFunc) {\n  registerUpdateLifecycle('afterupdate', postUpdateFunc);\n}\nexport function registerUpdateLifecycle(name, cb) {\n  lifecycle.on(name, cb);\n}\nexport function registerAction(arg0, arg1, action) {\n  var actionType;\n  var publicEventType;\n  var refineEvent;\n  var update;\n  var publishNonRefinedEvent;\n  if (isFunction(arg1)) {\n    action = arg1;\n    arg1 = '';\n  }\n  if (isObject(arg0)) {\n    actionType = arg0.type;\n    publicEventType = arg0.event;\n    update = arg0.update;\n    publishNonRefinedEvent = arg0.publishNonRefinedEvent;\n    if (!action) {\n      action = arg0.action;\n    }\n    refineEvent = arg0.refineEvent;\n  } else {\n    actionType = arg0;\n    publicEventType = arg1;\n  }\n  function createEventType(actionOrEventType) {\n    // Event type should be all lowercase\n    return actionOrEventType.toLowerCase();\n  }\n  publicEventType = createEventType(publicEventType || actionType);\n  // See comments on {ActionInfo} for the reason.\n  var nonRefinedEventType = refineEvent ? createEventType(actionType) : publicEventType;\n  // Support calling `registerAction` multiple times with the same action\n  // type; subsequent calls have no effect.\n  if (actions[actionType]) {\n    return;\n  }\n  // Validate action type and event name.\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(publicEventType));\n  if (refineEvent) {\n    // An event replicated from the action will be triggered internally for `connect` in this case.\n    assert(publicEventType !== actionType);\n  }\n  actions[actionType] = {\n    actionType: actionType,\n    refinedEventType: publicEventType,\n    nonRefinedEventType: nonRefinedEventType,\n    update: update,\n    action: action,\n    refineEvent: refineEvent\n  };\n  publicEventTypeMap[publicEventType] = 1;\n  if (refineEvent && publishNonRefinedEvent) {\n    publicEventTypeMap[nonRefinedEventType] = 1;\n  }\n  if (process.env.NODE_ENV !== 'production' && connectionEventRevertMap[nonRefinedEventType]) {\n    error(nonRefinedEventType + \" must not be shared; use \\\"refineEvent\\\" if you intend to share an event name.\");\n  }\n  connectionEventRevertMap[nonRefinedEventType] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport function registerCustomSeries(seriesType, renderItem) {\n  registerCustom(seriesType, renderItem);\n}\nexport { registerLocale } from './locale.js';\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    }\n    // Check duplicate\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  }\n  // Already registered\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n *\n * @deprecated use setPlatformAPI({ createCanvas }) instead.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\nexport function setCanvasCreator(creator) {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateLog('setCanvasCreator is deprecated. Use setPlatformAPI({ createCanvas }) instead.');\n  }\n  setPlatformAPI({\n    createCanvas: creator\n  });\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\nexport function registerMap(mapName, geoJson, specialAreas) {\n  var registerMap = getImpl('registerMap');\n  registerMap && registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  var getMap = getImpl('getMap');\n  return getMap && getMap(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Builtin global visual\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault);\n// Default actions\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_CHANGED_EVENT_TYPE,\n  update: SELECT_ACTION_TYPE,\n  action: noop,\n  refineEvent: makeSelectChangedEvent,\n  publishNonRefinedEvent: true\n});\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: SELECT_CHANGED_EVENT_TYPE,\n  update: UNSELECT_ACTION_TYPE,\n  action: noop,\n  refineEvent: makeSelectChangedEvent,\n  publishNonRefinedEvent: true\n});\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: SELECT_CHANGED_EVENT_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE,\n  action: noop,\n  refineEvent: makeSelectChangedEvent,\n  publishNonRefinedEvent: true\n});\nfunction makeSelectChangedEvent(actionResultBatch, payload, ecModel, api) {\n  return {\n    eventContent: {\n      selected: getAllSelectedIndices(ecModel),\n      isFromClick: payload.isFromClick || false\n    }\n  };\n}\n// Default theme, so that we can use `chart.setTheme('default')` to revert to\n// the default theme after changing to other themes.\nregisterTheme('default', {});\nregisterTheme('dark', darkTheme);\n// For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\nexport var dataTool = {};","map":{"version":3,"names":["__extends","zrender","assert","each","isFunction","isObject","indexOf","bind","clone","setAsPrimitive","extend","createHashMap","map","defaults","isDom","isArray","noop","isString","retrieve2","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","SeriesModel","ComponentView","ChartView","graphic","getECData","isHighDownDispatcher","HOVER_STATE_EMPHASIS","HOVER_STATE_BLUR","blurSeriesFromHighlightPayload","toggleSelectionFromPayload","updateSeriesElementSelection","getAllSelectedIndices","isSelectChangePayload","isHighDownPayload","HIGHLIGHT_ACTION_TYPE","DOWNPLAY_ACTION_TYPE","SELECT_ACTION_TYPE","UNSELECT_ACTION_TYPE","TOGGLE_SELECT_ACTION_TYPE","savePathStates","enterEmphasis","leaveEmphasis","leaveBlur","enterSelect","leaveSelect","enterBlur","allLeaveBlur","findComponentHighDownDispatchers","blurComponent","handleGlobalMouseOverForHighDown","handleGlobalMouseOutForHighDown","SELECT_CHANGED_EVENT_TYPE","modelUtil","throttle","seriesStyleTask","dataStyleTask","dataColorPaletteTask","loadingDefault","Scheduler","darkTheme","parseClassType","ECEventProcessor","seriesSymbolTask","dataSymbolTask","getVisualFromData","getItemVisualFromData","deprecateLog","deprecateReplaceLog","error","warn","handleLegacySelectEvents","registerExternalTransform","createLocaleObject","SYSTEM_LANG","findEventDispatcher","decal","lifecycle","platformApi","setPlatformAPI","getImpl","registerCustomSeries","registerCustom","version","dependencies","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_SERIES_FILTER","PRIORITY_PROCESSOR_DATASTACK","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_DEFAULT","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_PROGRESSIVE_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_CHART_DATA_CUSTOM","PRIORITY_VISUAL_POST_CHART_LAYOUT","PRIORITY_VISUAL_BRUSH","PRIORITY_VISUAL_ARIA","PRIORITY_VISUAL_DECAL","PRIORITY","PROCESSOR","FILTER","SERIES_FILTER","STATISTIC","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","POST_CHART_LAYOUT","COMPONENT","BRUSH","CHART_ITEM","ARIA","DECAL","IN_MAIN_PROCESS_KEY","MAIN_PROCESS_VERSION_KEY","PENDING_UPDATE","STATUS_NEEDS_UPDATE_KEY","ACTION_REG","CONNECT_STATUS_KEY","CONNECT_STATUS_PENDING","CONNECT_STATUS_UPDATING","CONNECT_STATUS_UPDATED","createRegisterEventWithLowercaseECharts","method","args","_i","arguments","length","isDisposed","disposedWarning","id","toLowercaseNameAndCallEventful","createRegisterEventWithLowercaseMessageCenter","host","toLowerCase","prototype","apply","MessageCenter","_super","messageCenterProto","on","off","prepare","prepareView","updateDirectly","updateMethods","doConvertPixel","updateStreamModes","doDispatchAction","flushPendingActions","triggerUpdatedEvent","bindRenderedEvent","bindMouseEvent","render","renderComponents","renderSeries","createExtensionAPI","enableConnect","markStatusToUpdate","applyChangedStates","updateMainProcessVersion","ECharts","dom","theme","opts","_this","call","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_pendingActions","_dom","defaultRenderer","defaultCoarsePointer","defaultUseDirtyRect","process","NODE_ENV","root","hasGlobalWindow","window","global","__ECHARTS__DEFAULT__RENDERER__","__ECHARTS__DEFAULT__COARSE_POINTER","__ECHARTS__DEFAULT__USE_DIRTY_RECT__","ssr","registerSSRDataGetter","el","ecData","dataIndex","hashMap","set","seriesIndex","ssrType","zr","_zr","init","renderer","devicePixelRatio","width","height","useDirtyRect","useCoarsePointer","pointerSize","_ssr","_throttledZrFlush","flush","_updateTheme","_locale","locale","_coordSysMgr","api","_api","prioritySortFunc","a","b","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","resize","animation","_onframe","_disposed","scheduler","silent","update","updateParams","e","unfinished","remainTime","ecModel","_model","startTime","Date","performSeriesTasks","performDataProcessorTasks","performVisualTasks","getDom","getId","getZr","isSSR","setOption","option","notMerge","lazyUpdate","replaceMerge","transitionOpt","transition","optionManager","_theme","optionPreprocessorFuncs","seriesTransition","optionChanged","wakeUp","setTheme","type","themeStorage","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","renderToCanvas","Error","backgroundColor","get","pixelRatio","renderToSVGString","renderToString","useViewBox","getSvgDataURL","list","storage","getDisplayList","stopAnimation","toDataURL","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","mainType","component","view","__viewId","group","ignore","push","url","getType","getConnectedDataURL","isSvg","groupId","mathMin","Math","min","mathMax","max","MAX_NUMBER","Infinity","connectedGroups","left_1","top_1","right_1","bottom_1","canvasList_1","dpr_1","instances","chart","canvas","getSvgDom","innerHTML","boundingRect","getBoundingClientRect","left","top","right","bottom","targetCanvas","createCanvas","zr_1","content_1","item","x","y","getSvgRoot","connectedBackgroundColor","setBackgroundColor","refreshImmediately","add","Rect","shape","style","fill","img","Image","image","convertToPixel","finder","value","opt","convertToLayout","convertFromPixel","containPixel","result","findResult","parseFinder","models","key","model","coordSys","coordinateSystem","containPoint","getVisual","visualType","parsedFinder","defaultMainType","seriesModel","data","getData","dataIndexInside","hasOwnProperty","indexOfRawIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","MOUSE_EVENT_NAMES","eveName","handler","target","params","isGlobalOut","parent","dataModel","getSeriesByIndex","getDataParams","dataType","eventData","componentIndex","getComponent","event","_$eventProcessor","eventInfo","targetEl","packedEvent","trigger","zrEventfulCallAtLast","messageCenter","publicEventTypeMap","_","eventType","clear","series","dispose","setAttribute","DOM_ATTRIBUTE_KEY","_loadingFX","needPrepare","resetOption","duration","showLoading","name","cfg","hideLoading","loadingEffects","remove","makeActionFromEvent","eventObj","payload","connectionEventRevertMap","dispatchAction","actions","browser","weChat","updateLabelLayout","updatedSeries","appendData","internalField","ecIns","restorePipelines","prepareStageTasks","plan","isComponent","viewList","viewMap","i","__alive","doPrepare","eachSeries","requireNewView","__requireNewView","viewId","classType","Clazz","getClass","main","sub","__id","__model","__ecComponentInfo","index","renderTask","splice","subType","setUpdatePayload","concat","callView","query","condition","excludeSeriesId","excludeSeriesIdMap","normalizeToArray","modelId","convertOptionIdName","isExcluded","notBlur","_a","focusSelf","dispatchers","dispatcher","prepareAndUpdate","newOption","coordSysMgr","restoreData","create","clearColorPalette","darkMode","setDarkMode","updateTransform","componentDirtyList","componentView","seriesDirtyMap","chartView","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","clearAllVisual","updateLayout","doConvertPixelImpl","methodName","coordSysList","getCoordinateSystems","chartsMap","payloadType","escapeConnect","actionInfo","cptTypeTmp","split","updateMethod","pop","cptType","payloads","batched","batch","eventObjBatch","actionResultBatch","nonRefinedEventType","isSelectChange","isHighDown","batchItem","actionResult","action","refineEvent","preParseFinder","queryOptionMap","mainTypeSpecified","componentMainType","keys","refinedEvent","eventContent","refinedEventType","fromAction","fromActionPayload","pendingActions","shift","isFinished","actionType","selected","isFromClick","allocateZlevels","componentZLevels","seriesZLevels","hasSeparateZLevel","zlevel","z","zlevelKey","getZLevelKey","idx","zLevels","lastSeriesZLevel_1","lastSeriesKey_1","setZLevel","dirtyList","clearStates","updateZ","updateStates","getSeries","updatePayload","dirty","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","traverse","isElementRemoved","applyElementStates","newStates","oldStates","currentStates","stateName","states","select","hoverState","emphasis","blur","useStates","elCount","isGroup","node","worker","preventUsingHoverLayer","eachRendered","hoverLayer","blendMode","blend","preventAutoZ","zInfo","retrieveZInfo","traverseUpdateZ","textContent","getTextContent","textGuide","getTextGuideLine","stateTransition","hasState","prevStates","stateAnimationModel","enableAnimation","isAnimationEnabled","delay","easing","Path","__dirty","class_1","getComponentByElement","modelInfo","highlightDigit","getMainProcessVersion","updateConnectedChartsStatus","charts","status","otherChart","action_1","otherCharts_1","echartsProto","one","eventName","cb","ctx","wrapped","args2","idBase","groupIdBase","isClient","existInstance","getInstanceByDom","nodeName","toUpperCase","clientWidth","clientHeight","connect","disconnect","disConnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostInit","postInitFunc","registerUpdateLifecycle","registerPostUpdate","postUpdateFunc","registerAction","arg0","arg1","publicEventType","publishNonRefinedEvent","createEventType","actionOrEventType","test","registerCoordinateSystem","coordSysCreator","register","getCoordinateSystemDimensions","getDimensionsInfo","dimensions","slice","seriesType","renderItem","registerLocale","registerLayout","layoutTask","registerVisual","visualTask","registeredTasks","targetList","fn","defaultPriority","isNaN","wrap","__raw","stageHandler","wrapStageHandler","registerLoading","loadingFx","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","getMap","registerTransform","makeSelectChangedEvent","dataTool"],"sources":["D:/Program Files/JetBrains/IDEAProject/springboot-vue-wms_test/vuedemo2/node_modules/echarts/lib/core/echarts.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrender from 'zrender/lib/zrender.js';\nimport { assert, each, isFunction, isObject, indexOf, bind, clone, setAsPrimitive, extend, createHashMap, map, defaults, isDom, isArray, noop, isString, retrieve2 } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport timsort from 'zrender/lib/core/timsort.js';\nimport Eventful from 'zrender/lib/core/Eventful.js';\nimport GlobalModel from '../model/Global.js';\nimport ExtensionAPI from './ExtensionAPI.js';\nimport CoordinateSystemManager from './CoordinateSystem.js';\nimport OptionManager from '../model/OptionManager.js';\nimport backwardCompat from '../preprocessor/backwardCompat.js';\nimport dataStack from '../processor/dataStack.js';\nimport SeriesModel from '../model/Series.js';\nimport ComponentView from '../view/Component.js';\nimport ChartView from '../view/Chart.js';\nimport * as graphic from '../util/graphic.js';\nimport { getECData } from '../util/innerStore.js';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlobalMouseOutForHighDown, SELECT_CHANGED_EVENT_TYPE } from '../util/states.js';\nimport * as modelUtil from '../util/model.js';\nimport { throttle } from '../util/throttle.js';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style.js';\nimport loadingDefault from '../loading/default.js';\nimport Scheduler from './Scheduler.js';\nimport darkTheme from '../theme/dark.js';\nimport { parseClassType } from '../util/clazz.js';\nimport { ECEventProcessor } from '../util/ECEventProcessor.js';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol.js';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper.js';\nimport { deprecateLog, deprecateReplaceLog, error, warn } from '../util/log.js';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction.js';\nimport { registerExternalTransform } from '../data/helper/transform.js';\nimport { createLocaleObject, SYSTEM_LANG } from './locale.js';\nimport { findEventDispatcher } from '../util/event.js';\nimport decal from '../visual/decal.js';\nimport lifecycle from './lifecycle.js';\nimport { platformApi, setPlatformAPI } from 'zrender/lib/core/platform.js';\nimport { getImpl } from './impl.js';\nimport { registerCustomSeries as registerCustom } from '../chart/custom/customSeriesRegister.js';\nexport var version = '6.0.0';\nexport var dependencies = {\n  zrender: '6.0.0'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800;\n// Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\nvar PRIORITY_PROCESSOR_DATASTACK = 900;\n// \"Data filter\" will block the stream, so it should be\n// put at the beginning of data processing.\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000;\n// Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500;\n// Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n};\n// Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\n// Useful for detecting outdated rendering results in scenarios that these issues are involved:\n//  - Use shortcut (such as, updateTransform, or no update) to start a main process.\n//  - Asynchronously update rendered view (e.g., graph force layout).\n//  - Multiple ChartView/ComponentView render to one group cooperatively.\nvar MAIN_PROCESS_VERSION_KEY = '__mainProcessVersion';\nvar PENDING_UPDATE = '__pendingUpdate';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\nvar MessageCenter = /** @class */function (_super) {\n  __extends(MessageCenter, _super);\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return MessageCenter;\n}(Eventful);\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off');\n// ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar createExtensionAPI;\nvar enableConnect;\nvar markStatusToUpdate;\nvar applyChangedStates;\nvar updateMainProcessVersion;\nvar ECharts = /** @class */function (_super) {\n  __extends(ECharts, _super);\n  function ECharts(dom,\n  // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {};\n    // Can't dispatch action during rendering procedure\n    _this._pendingActions = [];\n    opts = opts || {};\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultCoarsePointer = 'auto';\n    var defaultUseDirtyRect = false;\n    _this[MAIN_PROCESS_VERSION_KEY] = 1;\n    if (process.env.NODE_ENV !== 'production') {\n      var root = /* eslint-disable-next-line */\n      env.hasGlobalWindow ? window : global;\n      if (root) {\n        defaultRenderer = retrieve2(root.__ECHARTS__DEFAULT__RENDERER__, defaultRenderer);\n        defaultCoarsePointer = retrieve2(root.__ECHARTS__DEFAULT__COARSE_POINTER, defaultCoarsePointer);\n        defaultUseDirtyRect = retrieve2(root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__, defaultUseDirtyRect);\n      }\n    }\n    if (opts.ssr) {\n      zrender.registerSSRDataGetter(function (el) {\n        var ecData = getECData(el);\n        var dataIndex = ecData.dataIndex;\n        if (dataIndex == null) {\n          return;\n        }\n        var hashMap = createHashMap();\n        hashMap.set('series_index', ecData.seriesIndex);\n        hashMap.set('data_index', dataIndex);\n        ecData.ssrType && hashMap.set('ssr_type', ecData.ssrType);\n        return hashMap;\n      });\n    }\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      ssr: opts.ssr,\n      useDirtyRect: retrieve2(opts.useDirtyRect, defaultUseDirtyRect),\n      useCoarsePointer: retrieve2(opts.useCoarsePointer, defaultCoarsePointer),\n      pointerSize: opts.pointerSize\n    });\n    _this._ssr = opts.ssr;\n    // Expect 60 fps.\n    _this._throttledZrFlush = throttle(bind(zr.flush, zr), 17);\n    _this._updateTheme(theme);\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this);\n    // Sort on demand\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter();\n    // Init mouse events\n    _this._initEvents();\n    // In case some people write `window.onresize = chart.resize`\n    _this.resize = bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this);\n    // ECharts instance can be used as value.\n    setAsPrimitive(_this);\n    return _this;\n  }\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n    applyChangedStates(this);\n    var scheduler = this._scheduler;\n    // Lazy update\n    if (this[PENDING_UPDATE]) {\n      var silent = this[PENDING_UPDATE].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n      updateMainProcessVersion(this);\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, this[PENDING_UPDATE].updateParams);\n      } catch (e) {\n        this[IN_MAIN_PROCESS_KEY] = false;\n        this[PENDING_UPDATE] = null;\n        throw e;\n      }\n      // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n      this._zr.flush();\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[PENDING_UPDATE] = null;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n    // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel);\n        // Currently dataProcessorFuncs do not check threshold.\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel);\n        // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determined in the first frame (the\n        // frame is executed immediately after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain', {});\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished);\n      // Call flush explicitly for trigger finished event.\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      }\n      // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n    }\n  };\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n  ECharts.prototype.isSSR = function () {\n    return this._ssr;\n  };\n  /* eslint-disable-next-line */\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`setOption` should not be called during main process.');\n      }\n      return;\n    }\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n    this[IN_MAIN_PROCESS_KEY] = true;\n    updateMainProcessVersion(this);\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.ssr = this._ssr;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n    var updateParams = {\n      seriesTransition: transitionOpt,\n      optionChanged: true\n    };\n    if (lazyUpdate) {\n      this[PENDING_UPDATE] = {\n        silent: silent,\n        updateParams: updateParams\n      };\n      this[IN_MAIN_PROCESS_KEY] = false;\n      // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n      this.getZr().wakeUp();\n    } else {\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, updateParams);\n      } catch (e) {\n        this[PENDING_UPDATE] = null;\n        this[IN_MAIN_PROCESS_KEY] = false;\n        throw e;\n      }\n      // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n      if (!this._ssr) {\n        // not use flush when using ssr mode.\n        this._zr.flush();\n      }\n      this[PENDING_UPDATE] = null;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * Update theme with name or theme option and repaint the chart.\n   * @param theme Theme name or theme option.\n   * @param opts Optional settings\n   */\n  ECharts.prototype.setTheme = function (theme, opts) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`setTheme` should not be called during main process.');\n      }\n      return;\n    }\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var ecModel = this._model;\n    if (!ecModel) {\n      return;\n    }\n    var silent = opts && opts.silent;\n    var updateParams = null;\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n      updateParams = this[PENDING_UPDATE].updateParams;\n      this[PENDING_UPDATE] = null;\n    }\n    this[IN_MAIN_PROCESS_KEY] = true;\n    updateMainProcessVersion(this);\n    try {\n      this._updateTheme(theme);\n      ecModel.setTheme(this._theme);\n      prepare(this);\n      updateMethods.update.call(this, {\n        type: 'setTheme'\n      }, updateParams);\n    } catch (e) {\n      this[IN_MAIN_PROCESS_KEY] = false;\n      throw e;\n    }\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n  ECharts.prototype._updateTheme = function (theme) {\n    if (isString(theme)) {\n      theme = themeStorage[theme];\n    }\n    if (theme) {\n      theme = clone(theme);\n      theme && backwardCompat(theme, true);\n      this._theme = theme;\n    }\n  };\n  // We don't want developers to use getModel directly.\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */ || env.hasGlobalWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   * @deprecated Use renderToCanvas instead.\n   */\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      deprecateReplaceLog('getRenderedCanvas', 'renderToCanvas');\n    }\n    return this.renderToCanvas(opts);\n  };\n  ECharts.prototype.renderToCanvas = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'canvas') {\n        throw new Error('renderToCanvas can only be used in the canvas renderer.');\n      }\n    }\n    return painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n  ECharts.prototype.renderToSVGString = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'svg') {\n        throw new Error('renderToSVGString can only be used in the svg renderer.');\n      }\n    }\n    return painter.renderToString({\n      useViewBox: opts.useViewBox\n    });\n  };\n  /**\n   * Get svg data url\n   */\n  ECharts.prototype.getSvgDataURL = function () {\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList();\n    // Stop animations\n    each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.renderToCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.renderToCanvas(clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = platformApi.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n  ECharts.prototype.convertToPixel = function (finder, value, opt) {\n    return doConvertPixel(this, 'convertToPixel', finder, value, opt);\n  };\n  /**\n   * Convert from logical coordinate system to pixel coordinate system.\n   * See CoordinateSystem#convertToPixel.\n   *\n   * @see CoordinateSystem['dataToLayout'] for parameters and return.\n   * @see CoordinateSystemDataCoord\n   */\n  ECharts.prototype.convertToLayout = function (finder, value, opt) {\n    return doConvertPixel(this, 'convertToLayout', finder, value, opt);\n  };\n  // The above are signatures from before v6, thus they should be preserved for backward compat.\n  ECharts.prototype.convertFromPixel = function (finder, value, opt) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value, opt);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        warn('There is no specified series model');\n      }\n    }\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout';\n        // no e.target when 'globalout'.\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType, el) || {};\n              return true;\n            }\n            // If element has custom eventData of components\n            else if (ecData.eventData) {\n              params = extend({}, ecData.eventData);\n              return true;\n            }\n          }, true);\n        }\n        // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex;\n          // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              warn('model or view can not be found by params');\n            }\n          }\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n          _this.trigger(eveName, params);\n        }\n      };\n      // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n      handler.zrEventfulCallAtLast = true;\n      _this._zr.on(eveName, handler, _this);\n    });\n    var messageCenter = this._messageCenter;\n    each(publicEventTypeMap, function (_, eventType) {\n      messageCenter.on(eventType, function (event) {\n        _this.trigger(eventType, event);\n      });\n    });\n    handleLegacySelectEvents(messageCenter, this, this._api);\n  };\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this.setOption({\n      series: []\n    }, true);\n  };\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this._disposed = true;\n    var dom = this.getDom();\n    if (dom) {\n      modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    }\n    var chart = this;\n    var api = chart._api;\n    var ecModel = chart._model;\n    each(chart._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(chart._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    });\n    // Dispose after all views disposed\n    chart._zr.dispose();\n    // Set properties to null.\n    // To reduce the memory cost in case the top code still holds this instance unexpectedly.\n    chart._dom = chart._model = chart._chartsMap = chart._componentsMap = chart._chartsViews = chart._componentsViews = chart._scheduler = chart._api = chart._zr = chart._throttledZrFlush = chart._theme = chart._coordSysMgr = chart._messageCenter = null;\n    delete instances[chart.id];\n  };\n  /**\n   * Resize the chart\n   */\n  ECharts.prototype.resize = function (opts) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`resize` should not be called during main process.');\n      }\n      return;\n    }\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this._zr.resize(opts);\n    var ecModel = this._model;\n    // Resize loading effect\n    this._loadingFX && this._loadingFX.resize();\n    if (!ecModel) {\n      return;\n    }\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent;\n    // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n      needPrepare = true;\n      this[PENDING_UPDATE] = null;\n    }\n    this[IN_MAIN_PROCESS_KEY] = true;\n    updateMainProcessVersion(this);\n    try {\n      needPrepare && prepare(this);\n      updateMethods.update.call(this, {\n        type: 'resize',\n        animation: extend({\n          // Disable animation\n          duration: 0\n        }, opts && opts.animation)\n      });\n    } catch (e) {\n      this[IN_MAIN_PROCESS_KEY] = false;\n      throw e;\n    }\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n    name = name || 'default';\n    this.hideLoading();\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('Loading effects ' + name + ' not exists.');\n      }\n      return;\n    }\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = extend({}, eventObj);\n    payload.type = connectionEventRevertMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n    if (!actions[payload.type]) {\n      return;\n    }\n    // Avoid dispatch action before setOption. Especially in `connect`.\n    if (!this._model) {\n      return;\n    }\n    // May dispatchAction in rendering procedure\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n      return;\n    }\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embedded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh until user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n  ECharts.prototype.updateLabelLayout = function () {\n    lifecycle.trigger('series:layoutlabels', this._model, this._api, {\n      // Not adding series labels.\n      // TODO\n      updatedSeries: []\n    });\n  };\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n    seriesModel.appendData(params);\n    // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  };\n  // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n      function doPrepare(model) {\n        // By default view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView;\n        // This command should not work twice.\n        model.__requireNewView = false;\n        // Consider: id same and type changed.\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) :\n          // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload);\n      // broadcast\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      }\n      // If dispatchAction before setOption, do nothing.\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) != null;\n        if (isExcluded) {\n          return;\n        }\n        ;\n        if (isHighDownPayload(payload)) {\n          if (model instanceof SeriesModel) {\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur && !model.get(['emphasis', 'disabled'])) {\n              blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n            }\n          } else {\n            var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n              focusSelf = _a.focusSelf,\n              dispatchers = _a.dispatchers;\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n              blurComponent(model.mainType, model.componentIndex, ecIns._api);\n            }\n            // PENDING:\n            // Whether to put this \"enter emphasis\" code in `ComponentView`,\n            // which will be the same as `ChartView` but might be not necessary\n            // and will be far from this logic.\n            if (dispatchers) {\n              each(dispatchers, function (dispatcher) {\n                payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n              });\n            }\n          }\n        } else if (isSelectChangePayload(payload)) {\n          // TODO geo\n          if (model instanceof SeriesModel) {\n            toggleSelectionFromPayload(model, payload, ecIns._api);\n            updateSeriesElementSelection(model);\n            markStatusToUpdate(ecIns);\n          }\n        }\n      }, ecIns);\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) != null;\n        if (isExcluded) {\n          return;\n        }\n        ;\n        callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n      }, ecIns);\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload, payload && {\n          // Needs to mark option changed if newOption is given.\n          // It's from MagicType.\n          // TODO If use a separate flag optionChanged in payload?\n          optionChanged: payload.newOption != null\n        });\n      },\n      update: function (payload, updateParams) {\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler;\n        // update before setOption\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel);\n        // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the original point.\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload);\n        // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // determine whether to use progressive rendering.\n        updateStreamModes(this, ecModel);\n        // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not required in stream mode updater currently.\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        // Set background and dark mode before rendering, because they affect auto-color-determination\n        // in zrender Text, and consequently affect the bounding rect if stroke is added.\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        zr.setBackgroundColor(backgroundColor);\n        // Force set dark mode.\n        var darkMode = ecModel.get('darkMode');\n        if (darkMode != null && darkMode !== 'auto') {\n          zr.setDarkMode(darkMode);\n        }\n        render(this, ecModel, api, payload, updateParams);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n        var ecModel = this._model;\n        var api = this._api;\n        // update before setOption\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload);\n        // ChartView.markUpdateMethod(payload, 'updateTransform');\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n          var componentView = _this.getViewOfComponentModel(componentModel);\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel);\n        // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        });\n        // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n        renderSeries(this, ecModel, api, payload, {}, seriesDirtyMap);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model;\n        // update before setOption\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel);\n        // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n        render(this, ecModel, this._api, payload, {});\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n        var ecModel = this._model;\n        // update before setOption\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload);\n        // clear all visual\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        });\n        // Perform visual\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel);\n        // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n    function doConvertPixelImpl(ecIns, methodName, finder, value, opt) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n      var ecModel = ecIns._model;\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value, opt)) != null) {\n          return result;\n        }\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    }\n    ;\n    doConvertPixel = doConvertPixelImpl;\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionInfo = actions[payloadType];\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      updateMainProcessVersion(this);\n      var payloads = [payload];\n      var batched = false;\n      // Batch action\n      if (payload.batch) {\n        batched = true;\n        payloads = map(payload.batch, function (item) {\n          item = defaults(extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n      var eventObjBatch = [];\n      var eventObj;\n      var actionResultBatch = [];\n      var nonRefinedEventType = actionInfo.nonRefinedEventType;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload);\n      // Only leave blur once if there are multiple batches.\n      if (isHighDown) {\n        allLeaveBlur(this._api);\n      }\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        var actionResult = actionInfo.action(batchItem, ecModel, _this._api);\n        if (actionInfo.refineEvent) {\n          actionResultBatch.push(actionResult);\n        } else {\n          eventObj = actionResult;\n        }\n        eventObj = eventObj || extend({}, batchItem);\n        eventObj.type = nonRefinedEventType;\n        eventObjBatch.push(eventObj);\n        // light update does not perform data process, layout and visual.\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n            queryOptionMap = _a.queryOptionMap,\n            mainTypeSpecified = _a.mainTypeSpecified;\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        try {\n          // Still dirty\n          if (this[PENDING_UPDATE]) {\n            prepare(this);\n            updateMethods.update.call(this, payload);\n            this[PENDING_UPDATE] = null;\n          } else {\n            updateMethods[updateMethod].call(this, payload);\n          }\n        } catch (e) {\n          this[IN_MAIN_PROCESS_KEY] = false;\n          throw e;\n        }\n      }\n      // Follow the rule of action batch\n      if (batched) {\n        eventObj = {\n          type: nonRefinedEventType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n      this[IN_MAIN_PROCESS_KEY] = false;\n      if (!silent) {\n        var refinedEvent = void 0;\n        if (actionInfo.refineEvent) {\n          var eventContent = actionInfo.refineEvent(actionResultBatch, payload, ecModel, this._api).eventContent;\n          assert(isObject(eventContent));\n          refinedEvent = defaults({\n            type: actionInfo.refinedEventType\n          }, eventContent);\n          refinedEvent.fromAction = payload.type;\n          refinedEvent.fromActionPayload = payload;\n          refinedEvent.escapeConnect = true;\n        }\n        var messageCenter = this._messageCenter;\n        // - If `refineEvent` created a `refinedEvent`, `eventObj` (replicated from the original payload)\n        //  is still needed to be triggered for the feature `connect`. But it will not be triggered to\n        //  users in this case.\n        // - If no `refineEvent` used, `eventObj` will be triggered for both `connect` and users.\n        messageCenter.trigger(eventObj.type, eventObj);\n        if (refinedEvent) {\n          messageCenter.trigger(refinedEvent.type, refinedEvent);\n        }\n      }\n    };\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params);\n        // The `finished` event should not be triggered repeatedly,\n        // so it should only be triggered when rendering indeed happens\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n        if (\n        // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[PENDING_UPDATE] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n        if (dispatcher) {\n          handleGlobalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n    function clearColorPalette(ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    }\n    ;\n    // Allocate zlevels for series and components\n    function allocateZlevels(ecModel) {\n      ;\n      var componentZLevels = [];\n      var seriesZLevels = [];\n      var hasSeparateZLevel = false;\n      ecModel.eachComponent(function (componentType, componentModel) {\n        var zlevel = componentModel.get('zlevel') || 0;\n        var z = componentModel.get('z') || 0;\n        var zlevelKey = componentModel.getZLevelKey();\n        hasSeparateZLevel = hasSeparateZLevel || !!zlevelKey;\n        (componentType === 'series' ? seriesZLevels : componentZLevels).push({\n          zlevel: zlevel,\n          z: z,\n          idx: componentModel.componentIndex,\n          type: componentType,\n          key: zlevelKey\n        });\n      });\n      if (hasSeparateZLevel) {\n        // Series after component\n        var zLevels = componentZLevels.concat(seriesZLevels);\n        var lastSeriesZLevel_1;\n        var lastSeriesKey_1;\n        timsort(zLevels, function (a, b) {\n          if (a.zlevel === b.zlevel) {\n            return a.z - b.z;\n          }\n          return a.zlevel - b.zlevel;\n        });\n        each(zLevels, function (item) {\n          var componentModel = ecModel.getComponent(item.type, item.idx);\n          var zlevel = item.zlevel;\n          var key = item.key;\n          if (lastSeriesZLevel_1 != null) {\n            zlevel = Math.max(lastSeriesZLevel_1, zlevel);\n          }\n          if (key) {\n            if (zlevel === lastSeriesZLevel_1 && key !== lastSeriesKey_1) {\n              zlevel++;\n            }\n            lastSeriesKey_1 = key;\n          } else if (lastSeriesKey_1) {\n            if (zlevel === lastSeriesZLevel_1) {\n              zlevel++;\n            }\n            lastSeriesKey_1 = '';\n          }\n          lastSeriesZLevel_1 = zlevel;\n          componentModel.setZLevel(zlevel);\n        });\n      }\n    }\n    render = function (ecIns, ecModel, api, payload, updateParams) {\n      allocateZlevels(ecModel);\n      renderComponents(ecIns, ecModel, api, payload, updateParams);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload, updateParams);\n      // Remove groups of unrendered charts\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n    renderComponents = function (ecIns, ecModel, api, payload, updateParams, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n    renderSeries = function (ecIns, ecModel, api, payload, updateParams, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      updateParams = extend(updateParams || {}, {\n        updatedSeries: ecModel.getSeries()\n      });\n      // TODO progressive?\n      lifecycle.trigger('series:beforeupdate', ecModel, api, updateParams);\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload);\n        // TODO states on marker.\n        clearStates(seriesModel, chartView);\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n        chartView.group.silent = !!seriesModel.get('silent');\n        // Should not call markRedraw on group, because it will disable zrender\n        // incremental render (always render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      lifecycle.trigger('series:layoutlabels', ecModel, api, updateParams);\n      // transition after label is layouted.\n      lifecycle.trigger('series:transition', ecModel, api, updateParams);\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        // Update Z after labels updated. Before applying states.\n        updateZ(seriesModel, chartView);\n        // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n        updateStates(seriesModel, chartView);\n      });\n      // If use hover layer\n      updateHoverLayerStatus(ecIns, ecModel);\n      lifecycle.trigger('series:afterupdate', ecModel, api, updateParams);\n    };\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true;\n      // Wake up zrender if it's sleep. Let it update states in the next frame.\n      ecIns.getZr().wakeUp();\n    };\n    updateMainProcessVersion = function (ecIns) {\n      ecIns[MAIN_PROCESS_VERSION_KEY] = (ecIns[MAIN_PROCESS_VERSION_KEY] + 1) % 1000;\n    };\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates;\n      // Keep other states.\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      }\n      // Only use states when it's exists.\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n      el.useStates(newStates);\n    }\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n          if (chartView.__alive) {\n            chartView.eachRendered(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n    ;\n    /**\n     * Update chart and blend.\n     */\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n      chartView.eachRendered(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DON'T mark the element dirty. In case element is incremental and don't want to rerender.\n          el.style.blend = blendMode;\n        }\n      });\n    }\n    ;\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      }\n      var zInfo = graphic.retrieveZInfo(model);\n      // Set z and zlevel\n      view.eachRendered(function (el) {\n        graphic.traverseUpdateZ(el, zInfo.z, zInfo.zlevel);\n        // Don't traverse the children because it has been traversed in _updateZ.\n        return true;\n      });\n    }\n    ;\n    // Clear states without animation.\n    // TODO States on component.\n    function clearStates(model, view) {\n      view.eachRendered(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        }\n        // TODO If el is incremental.\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing')\n        // additive: stateAnimationModel.get('additive')\n      } : null;\n      view.eachRendered(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          }\n          // Only updated on changed element. In case element is incremental and don't want to rerender.\n          // TODO, a more proper way?\n          if (el.__dirty) {\n            var prevStates = el.prevStates;\n            // Restore states without animation\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          }\n          // Update state transition and enable animation again.\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine();\n            // TODO Is it necessary to animate label?\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          }\n          // Use highlighted and selected flag to toggle states.\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n    ;\n    createExtensionAPI = function (ecIns) {\n      return new (/** @class */function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n            el = el.parent;\n          }\n        };\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n        class_1.prototype.getMainProcessVersion = function () {\n          return ecIns[MAIN_PROCESS_VERSION_KEY];\n        };\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n      each(connectionEventRevertMap, function (_, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n  }();\n  return ECharts;\n}(Eventful);\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n  function wrapped() {\n    var args2 = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n    cb && cb.apply && cb.apply(this, args2);\n    // @ts-ignore\n    self.off(eventName, wrapped);\n  }\n  ;\n  // @ts-ignore\n  this.on.call(this, eventName, wrapped, ctx);\n};\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn('Instance ' + id + ' has been disposed');\n  }\n}\nvar actions = {};\n/**\n * Map event type to action type for reproducing action from event for `connect`.\n */\nvar connectionEventRevertMap = {};\n/**\n * To remove duplication.\n */\nvar publicEventTypeMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.locale Specify the locale.\n * @param opts.useDirtyRect Enable dirty rectangle rendering or not.\n */\nexport function init(dom, theme, opts) {\n  var isClient = !(opts && opts.ssr);\n  if (isClient) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!dom) {\n        throw new Error('Initialize failed: invalid dom.');\n      }\n    }\n    var existInstance = getInstanceByDom(dom);\n    if (existInstance) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('There is a chart instance already initialized on the dom.');\n      }\n      return existInstance;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n        warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n      }\n    }\n  }\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  isClient && modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  lifecycle.trigger('afterinit', chart);\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\nexport function connect(groupId) {\n  // Is array of charts\n  if (isArray(groupId)) {\n    var charts = groupId;\n    groupId = null;\n    // If any chart has group\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n  connectedGroups[groupId] = true;\n  return groupId;\n}\nexport function disconnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backward compatibility\n * @deprecated\n */\nexport var disConnect = disconnect;\n/**\n * Dispose a chart instance\n */\nexport function dispose(chart) {\n  if (isString(chart)) {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\nexport function registerPostInit(postInitFunc) {\n  registerUpdateLifecycle('afterinit', postInitFunc);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\nexport function registerPostUpdate(postUpdateFunc) {\n  registerUpdateLifecycle('afterupdate', postUpdateFunc);\n}\nexport function registerUpdateLifecycle(name, cb) {\n  lifecycle.on(name, cb);\n}\nexport function registerAction(arg0, arg1, action) {\n  var actionType;\n  var publicEventType;\n  var refineEvent;\n  var update;\n  var publishNonRefinedEvent;\n  if (isFunction(arg1)) {\n    action = arg1;\n    arg1 = '';\n  }\n  if (isObject(arg0)) {\n    actionType = arg0.type;\n    publicEventType = arg0.event;\n    update = arg0.update;\n    publishNonRefinedEvent = arg0.publishNonRefinedEvent;\n    if (!action) {\n      action = arg0.action;\n    }\n    refineEvent = arg0.refineEvent;\n  } else {\n    actionType = arg0;\n    publicEventType = arg1;\n  }\n  function createEventType(actionOrEventType) {\n    // Event type should be all lowercase\n    return actionOrEventType.toLowerCase();\n  }\n  publicEventType = createEventType(publicEventType || actionType);\n  // See comments on {ActionInfo} for the reason.\n  var nonRefinedEventType = refineEvent ? createEventType(actionType) : publicEventType;\n  // Support calling `registerAction` multiple times with the same action\n  // type; subsequent calls have no effect.\n  if (actions[actionType]) {\n    return;\n  }\n  // Validate action type and event name.\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(publicEventType));\n  if (refineEvent) {\n    // An event replicated from the action will be triggered internally for `connect` in this case.\n    assert(publicEventType !== actionType);\n  }\n  actions[actionType] = {\n    actionType: actionType,\n    refinedEventType: publicEventType,\n    nonRefinedEventType: nonRefinedEventType,\n    update: update,\n    action: action,\n    refineEvent: refineEvent\n  };\n  publicEventTypeMap[publicEventType] = 1;\n  if (refineEvent && publishNonRefinedEvent) {\n    publicEventTypeMap[nonRefinedEventType] = 1;\n  }\n  if (process.env.NODE_ENV !== 'production' && connectionEventRevertMap[nonRefinedEventType]) {\n    error(nonRefinedEventType + \" must not be shared; use \\\"refineEvent\\\" if you intend to share an event name.\");\n  }\n  connectionEventRevertMap[nonRefinedEventType] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport function registerCustomSeries(seriesType, renderItem) {\n  registerCustom(seriesType, renderItem);\n}\nexport { registerLocale } from './locale.js';\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    }\n    // Check duplicate\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  }\n  // Already registered\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n *\n * @deprecated use setPlatformAPI({ createCanvas }) instead.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\nexport function setCanvasCreator(creator) {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateLog('setCanvasCreator is deprecated. Use setPlatformAPI({ createCanvas }) instead.');\n  }\n  setPlatformAPI({\n    createCanvas: creator\n  });\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\nexport function registerMap(mapName, geoJson, specialAreas) {\n  var registerMap = getImpl('registerMap');\n  registerMap && registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  var getMap = getImpl('getMap');\n  return getMap && getMap(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Builtin global visual\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault);\n// Default actions\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_CHANGED_EVENT_TYPE,\n  update: SELECT_ACTION_TYPE,\n  action: noop,\n  refineEvent: makeSelectChangedEvent,\n  publishNonRefinedEvent: true\n});\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: SELECT_CHANGED_EVENT_TYPE,\n  update: UNSELECT_ACTION_TYPE,\n  action: noop,\n  refineEvent: makeSelectChangedEvent,\n  publishNonRefinedEvent: true\n});\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: SELECT_CHANGED_EVENT_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE,\n  action: noop,\n  refineEvent: makeSelectChangedEvent,\n  publishNonRefinedEvent: true\n});\nfunction makeSelectChangedEvent(actionResultBatch, payload, ecModel, api) {\n  return {\n    eventContent: {\n      selected: getAllSelectedIndices(ecModel),\n      isFromClick: payload.isFromClick || false\n    }\n  };\n}\n// Default theme, so that we can use `chart.setTheme('default')` to revert to\n// the default theme after changing to other themes.\nregisterTheme('default', {});\nregisterTheme('dark', darkTheme);\n// For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\nexport var dataTool = {};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}