{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentModel from '../../model/Component.js';\nimport { error } from '../../util/log.js';\nimport tokens from '../../visual/tokens.js';\nimport { injectThumbnailBridge } from '../helper/thumbnailBridge.js';\nimport { ThumbnailBridgeImpl } from './ThumbnailBridgeImpl.js';\nvar ThumbnailModel = /** @class */function (_super) {\n  __extends(ThumbnailModel, _super);\n  function ThumbnailModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = ThumbnailModel.type;\n    _this.preventAutoZ = true;\n    return _this;\n  }\n  ThumbnailModel.prototype.optionUpdated = function (newCptOption, isInit) {\n    this._updateBridge();\n  };\n  ThumbnailModel.prototype._updateBridge = function () {\n    var bridge = this._birdge = this._birdge || new ThumbnailBridgeImpl(this);\n    // Clear all, in case of option changed.\n    this._target = null;\n    this.ecModel.eachSeries(function (series) {\n      injectThumbnailBridge(series, null);\n    });\n    if (this.shouldShow()) {\n      var target = this.getTarget();\n      // If a component is targeted by more than one thumbnails, simply only the last one works.\n      injectThumbnailBridge(target.baseMapProvider, bridge);\n    }\n  };\n  ThumbnailModel.prototype.shouldShow = function () {\n    return this.getShallow('show', true);\n  };\n  ThumbnailModel.prototype.getBridge = function () {\n    return this._birdge;\n  };\n  ThumbnailModel.prototype.getTarget = function () {\n    if (this._target) {\n      return this._target;\n    }\n    // Find by `seriesId`/`seriesIndex`.\n    var series = this.getReferringComponents('series', {\n      useDefault: false,\n      enableAll: false,\n      enableNone: false\n    }).models[0];\n    if (series) {\n      if (series.subType !== 'graph') {\n        series = null;\n        if (process.env.NODE_ENV !== 'production') {\n          error(\"series.\" + series.subType + \" is not supported in thumbnail.\", true);\n        }\n      }\n    } else {\n      // If no xxxId and xxxIndex specified, find the first series.graph. If other components,\n      // such as geo, is supported in future, the default stretagy may be extended.\n      series = this.ecModel.queryComponents({\n        mainType: 'series',\n        subType: 'graph'\n      })[0];\n    }\n    this._target = {\n      baseMapProvider: series\n    };\n    return this._target;\n  };\n  ThumbnailModel.type = 'thumbnail';\n  ThumbnailModel.layoutMode = 'box';\n  // All the supported components should be added here.\n  ThumbnailModel.dependencies = ['series', 'geo'];\n  ThumbnailModel.defaultOption = {\n    show: true,\n    right: 1,\n    bottom: 1,\n    height: '25%',\n    width: '25%',\n    itemStyle: {\n      // Use echarts option.backgorundColor by default.\n      borderColor: tokens.color.border,\n      borderWidth: 2\n    },\n    windowStyle: {\n      borderWidth: 1,\n      color: tokens.color.neutral30,\n      borderColor: tokens.color.neutral40,\n      opacity: 0.3\n    },\n    z: 10\n  };\n  return ThumbnailModel;\n}(ComponentModel);\nexport { ThumbnailModel };","map":{"version":3,"names":["__extends","ComponentModel","error","tokens","injectThumbnailBridge","ThumbnailBridgeImpl","ThumbnailModel","_super","_this","apply","arguments","type","preventAutoZ","prototype","optionUpdated","newCptOption","isInit","_updateBridge","bridge","_birdge","_target","ecModel","eachSeries","series","shouldShow","target","getTarget","baseMapProvider","getShallow","getBridge","getReferringComponents","useDefault","enableAll","enableNone","models","subType","process","env","NODE_ENV","queryComponents","mainType","layoutMode","dependencies","defaultOption","show","right","bottom","height","width","itemStyle","borderColor","color","border","borderWidth","windowStyle","neutral30","neutral40","opacity","z"],"sources":["D:/Program Files/JetBrains/IDEAProject/springboot-vue-wms_test/vuedemo2/node_modules/echarts/lib/component/thumbnail/ThumbnailModel.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentModel from '../../model/Component.js';\nimport { error } from '../../util/log.js';\nimport tokens from '../../visual/tokens.js';\nimport { injectThumbnailBridge } from '../helper/thumbnailBridge.js';\nimport { ThumbnailBridgeImpl } from './ThumbnailBridgeImpl.js';\nvar ThumbnailModel = /** @class */function (_super) {\n  __extends(ThumbnailModel, _super);\n  function ThumbnailModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = ThumbnailModel.type;\n    _this.preventAutoZ = true;\n    return _this;\n  }\n  ThumbnailModel.prototype.optionUpdated = function (newCptOption, isInit) {\n    this._updateBridge();\n  };\n  ThumbnailModel.prototype._updateBridge = function () {\n    var bridge = this._birdge = this._birdge || new ThumbnailBridgeImpl(this);\n    // Clear all, in case of option changed.\n    this._target = null;\n    this.ecModel.eachSeries(function (series) {\n      injectThumbnailBridge(series, null);\n    });\n    if (this.shouldShow()) {\n      var target = this.getTarget();\n      // If a component is targeted by more than one thumbnails, simply only the last one works.\n      injectThumbnailBridge(target.baseMapProvider, bridge);\n    }\n  };\n  ThumbnailModel.prototype.shouldShow = function () {\n    return this.getShallow('show', true);\n  };\n  ThumbnailModel.prototype.getBridge = function () {\n    return this._birdge;\n  };\n  ThumbnailModel.prototype.getTarget = function () {\n    if (this._target) {\n      return this._target;\n    }\n    // Find by `seriesId`/`seriesIndex`.\n    var series = this.getReferringComponents('series', {\n      useDefault: false,\n      enableAll: false,\n      enableNone: false\n    }).models[0];\n    if (series) {\n      if (series.subType !== 'graph') {\n        series = null;\n        if (process.env.NODE_ENV !== 'production') {\n          error(\"series.\" + series.subType + \" is not supported in thumbnail.\", true);\n        }\n      }\n    } else {\n      // If no xxxId and xxxIndex specified, find the first series.graph. If other components,\n      // such as geo, is supported in future, the default stretagy may be extended.\n      series = this.ecModel.queryComponents({\n        mainType: 'series',\n        subType: 'graph'\n      })[0];\n    }\n    this._target = {\n      baseMapProvider: series\n    };\n    return this._target;\n  };\n  ThumbnailModel.type = 'thumbnail';\n  ThumbnailModel.layoutMode = 'box';\n  // All the supported components should be added here.\n  ThumbnailModel.dependencies = ['series', 'geo'];\n  ThumbnailModel.defaultOption = {\n    show: true,\n    right: 1,\n    bottom: 1,\n    height: '25%',\n    width: '25%',\n    itemStyle: {\n      // Use echarts option.backgorundColor by default.\n      borderColor: tokens.color.border,\n      borderWidth: 2\n    },\n    windowStyle: {\n      borderWidth: 1,\n      color: tokens.color.neutral30,\n      borderColor: tokens.color.neutral40,\n      opacity: 0.3\n    },\n    z: 10\n  };\n  return ThumbnailModel;\n}(ComponentModel);\nexport { ThumbnailModel };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}