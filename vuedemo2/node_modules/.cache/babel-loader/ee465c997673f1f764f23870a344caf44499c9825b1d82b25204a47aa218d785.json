{"ast":null,"code":"export default {\n  name: \"ProcessManage\",\n  data() {\n    let checkDuration = (rule, value, callback) => {\n      if (value <= 0) {\n        callback(new Error('时长必须大于0'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      tableData: [],\n      pageSize: 20,\n      pageNum: 1,\n      total: 0,\n      processName: '',\n      stage: '',\n      isShared: '',\n      saveLoading: false,\n      multipleSelection: [],\n      stages: [{\n        value: '1',\n        label: '第1阶段'\n      }, {\n        value: '2',\n        label: '第2阶段'\n      }, {\n        value: '3',\n        label: '第3阶段'\n      }, {\n        value: '4',\n        label: '第4阶段'\n      }, {\n        value: '5',\n        label: '第5阶段'\n      }],\n      sharedTypes: [{\n        value: 'false',\n        label: '专用'\n      }, {\n        value: 'true',\n        label: '共用'\n      }],\n      centerDialogVisible: false,\n      form: {\n        id: '',\n        processName: '',\n        duration: 30,\n        stage: 1,\n        teamId: 1,\n        isShared: false,\n        description: ''\n      },\n      rules: {\n        processName: [{\n          required: true,\n          message: '请输入工序名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 50,\n          message: '长度在 1 到 50 个字符',\n          trigger: 'blur'\n        }],\n        duration: [{\n          required: true,\n          message: '请输入时长',\n          trigger: 'blur'\n        }, {\n          validator: checkDuration,\n          trigger: 'blur'\n        }],\n        stage: [{\n          required: true,\n          message: '请输入阶段',\n          trigger: 'blur'\n        }],\n        teamId: [{\n          required: true,\n          message: '请输入团队ID',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    getStageType(stage) {\n      const types = ['', 'primary', 'success', 'info', 'warning', 'danger'];\n      return types[stage] || 'info';\n    },\n    formatTime(time) {\n      if (!time) return '--';\n      return new Date(time).toLocaleDateString();\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    add() {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetForm();\n        this.form = {\n          id: '',\n          processName: '',\n          duration: 30,\n          stage: 1,\n          teamId: 1,\n          isShared: false,\n          description: ''\n        };\n      });\n    },\n    del(id) {\n      this.$axios.get(this.$httpUrl + '/process/del?id=' + id).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          this.$message({\n            message: '删除成功!',\n            type: 'success'\n          });\n          this.loadPost();\n        } else {\n          this.$message({\n            message: '删除失败!',\n            type: 'error'\n          });\n        }\n      });\n    },\n    mod(row) {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.form.id = row.id;\n        this.form.processName = row.processName;\n        this.form.duration = row.duration;\n        this.form.stage = row.stage;\n        this.form.teamId = row.teamId;\n        this.form.isShared = row.isShared;\n        this.form.description = row.description || '';\n      });\n    },\n    doSave() {\n      this.saveLoading = true;\n      this.$axios.post(this.$httpUrl + '/process/save', this.form).then(res => res.data).then(res => {\n        this.saveLoading = false;\n        if (res.code == 200) {\n          this.$message({\n            message: '保存成功!',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n        } else {\n          this.$message({\n            message: '保存失败!',\n            type: 'error'\n          });\n        }\n      });\n    },\n    doMod() {\n      this.saveLoading = true;\n      this.$axios.post(this.$httpUrl + '/process/update', this.form).then(res => res.data).then(res => {\n        this.saveLoading = false;\n        if (res.code == 200) {\n          this.$message({\n            message: '修改成功!',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n        } else {\n          this.$message({\n            message: '修改失败!',\n            type: 'error'\n          });\n        }\n      });\n    },\n    save() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (this.form.id) {\n            this.doMod();\n          } else {\n            this.doSave();\n          }\n        } else {\n          this.$message.warning('请检查表单填写是否正确');\n          return false;\n        }\n      });\n    },\n    resetParam() {\n      this.processName = '';\n      this.stage = '';\n      this.isShared = '';\n      this.loadPost();\n    },\n    loadPost() {\n      this.$axios.post(this.$httpUrl + '/process/listPageC1', {\n        pageNum: this.pageNum,\n        pageSize: this.pageSize,\n        param: {\n          processName: this.processName,\n          stage: this.stage,\n          isShared: this.isShared\n        }\n      }).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          this.tableData = res.data;\n          this.total = res.total;\n        } else {\n          this.$message.error('获取数据失败');\n        }\n      });\n    },\n    handleSizeChange(val) {\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      this.pageNum = val;\n      this.loadPost();\n    }\n  },\n  beforeMount() {\n    this.loadPost();\n  }\n};","map":{"version":3,"names":["name","data","checkDuration","rule","value","callback","Error","tableData","pageSize","pageNum","total","processName","stage","isShared","saveLoading","multipleSelection","stages","label","sharedTypes","centerDialogVisible","form","id","duration","teamId","description","rules","required","message","trigger","min","max","validator","methods","handleSelectionChange","val","getStageType","types","formatTime","time","Date","toLocaleDateString","resetForm","$refs","resetFields","add","$nextTick","del","$axios","get","$httpUrl","then","res","code","$message","type","loadPost","mod","row","doSave","post","doMod","save","validate","valid","warning","resetParam","param","error","handleSizeChange","handleCurrentChange","beforeMount"],"sources":["src/components/process/ProcessManage.vue"],"sourcesContent":["  <template>\r\n    <div class=\"process-manage-container\">\r\n      <!-- 页面标题 -->\r\n      <div class=\"page-header\">\r\n        <div class=\"header-content\">\r\n          <div class=\"title-section\">\r\n            <h2 class=\"page-title\">\r\n              <i class=\"el-icon-s-order title-icon\"></i>\r\n              工序管理\r\n            </h2>\r\n            <p class=\"page-subtitle\">管理各工作点的生产工序信息，包括时长、阶段、团队分配等</p>\r\n          </div>\r\n          <div class=\"header-actions\">\r\n            <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"add\" class=\"add-btn\">\r\n              新增工序\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 工作点标签页 -->\r\n      <div class=\"workpoint-tabs-section\">\r\n        <el-card class=\"tabs-card\" shadow=\"never\">\r\n          <el-tabs v-model=\"activeWorkpoint\" type=\"card\" @tab-click=\"handleWorkpointChange\">\r\n            <el-tab-pane \r\n              v-for=\"wp in workpoints\" \r\n              :key=\"wp.id\" \r\n              :label=\"wp.name\" \r\n              :name=\"wp.id\">\r\n              <template #label>\r\n                <span class=\"tab-label\">\r\n                  <i class=\"el-icon-location\"></i>\r\n                  {{ wp.name }}\r\n                  <el-badge :value=\"wp.count\" class=\"tab-badge\" v-if=\"wp.count > 0\"></el-badge>\r\n                </span>\r\n              </template>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-card>\r\n      </div>\r\n  \r\n      <!-- 搜索过滤区域 -->\r\n      <div class=\"filter-section\">\r\n        <el-card class=\"filter-card\" shadow=\"never\">\r\n          <div class=\"filter-content\">\r\n            <div class=\"filter-left\">\r\n              <div class=\"filter-item\">\r\n                <label class=\"filter-label\">工序名称：</label>\r\n                <el-input \r\n                  v-model=\"processName\" \r\n                  placeholder=\"请输入工序名称搜索\" \r\n                  suffix-icon=\"el-icon-search\" \r\n                  class=\"filter-input\"\r\n                  @keyup.enter.native=\"loadPost\"\r\n                  clearable>\r\n                </el-input>\r\n              </div>\r\n              <div class=\"filter-item\">\r\n                <label class=\"filter-label\">阶段：</label>\r\n                <el-select v-model=\"stage\" placeholder=\"请选择阶段\" class=\"filter-select\" clearable>\r\n                  <el-option\r\n                    v-for=\"item in stages\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.value\">\r\n                  </el-option>\r\n                </el-select>\r\n              </div>\r\n              <div class=\"filter-item\">\r\n                <label class=\"filter-label\">人员类型：</label>\r\n                <el-select v-model=\"isShared\" placeholder=\"请选择人员类型\" class=\"filter-select\" clearable>\r\n                  <el-option\r\n                    v-for=\"item in sharedTypes\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.value\">\r\n                  </el-option>\r\n                </el-select>\r\n              </div>\r\n            </div>\r\n            <div class=\"filter-actions\">\r\n              <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"loadPost\">\r\n                查询\r\n              </el-button>\r\n              <el-button icon=\"el-icon-refresh\" @click=\"resetParam\">\r\n                重置\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n  \r\n      <!-- 数据表格区域 -->\r\n      <div class=\"table-section\">\r\n        <el-card class=\"table-card\" shadow=\"never\">\r\n          <div class=\"table-header\">\r\n            <div class=\"table-title\">\r\n              <span class=\"title-text\">工序列表</span>\r\n              <el-tag type=\"info\" class=\"count-tag\">共 {{ total }} 条记录</el-tag>\r\n            </div>\r\n            <div class=\"table-actions\">\r\n              <el-button size=\"small\" type=\"warning\" icon=\"el-icon-download\">\r\n                导出数据\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n          \r\n          <el-table \r\n            :data=\"tableData\"\r\n            class=\"process-table\"\r\n            stripe\r\n            @selection-change=\"handleSelectionChange\">\r\n            \r\n            <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n            \r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"80\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag size=\"mini\" type=\"info\"># {{ scope.row.id }}</el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column prop=\"processName\" label=\"工序名称\" min-width=\"160\" show-overflow-tooltip>\r\n              <template slot-scope=\"scope\">\r\n                <div class=\"process-name\">\r\n                  <div class=\"process-icon\">\r\n                    <i class=\"el-icon-s-operation\"></i>\r\n                  </div>\r\n                  <div class=\"process-info\">\r\n                    <div class=\"name-text\">{{ scope.row.processName }}</div>\r\n                    <div class=\"process-id\">ID: {{ scope.row.id }}</div>\r\n                  </div>\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n  \r\n            <el-table-column prop=\"duration\" label=\"时长\" width=\"120\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <div class=\"duration-info\">\r\n                  <i class=\"el-icon-time duration-icon\"></i>\r\n                  <span class=\"duration-text\">{{ scope.row.duration }}分钟</span>\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column prop=\"stage\" label=\"阶段\" width=\"100\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag \r\n                  :type=\"getStageType(scope.row.stage)\" \r\n                  size=\"small\" \r\n                  class=\"stage-tag\">\r\n                  <i class=\"el-icon-s-flag\"></i>\r\n                  第{{ scope.row.stage }}阶段\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column prop=\"teamId\" label=\"所属团队\" width=\"120\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <div class=\"team-info\">\r\n                  <i class=\"el-icon-s-custom team-icon\"></i>\r\n                  <span>团队{{ scope.row.teamId }}</span>\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n            \r\n            <el-table-column prop=\"isShared\" label=\"人员类型\" width=\"120\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag\r\n                  :type=\"scope.row.isShared ? 'success' : 'warning'\"\r\n                  size=\"small\"\r\n                  class=\"shared-tag\">\r\n                  <i :class=\"scope.row.isShared ? 'el-icon-s-cooperation' : 'el-icon-user-solid'\"></i>\r\n                  {{ scope.row.isShared ? '共用' : '专用' }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n  \r\n            <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <div class=\"time-info\">\r\n                  <i class=\"el-icon-calendar time-icon\"></i>\r\n                  <span>{{ formatTime(scope.row.createTime) }}</span>\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n  \r\n            <el-table-column label=\"操作\" width=\"160\" align=\"center\" fixed=\"right\">\r\n              <template slot-scope=\"scope\">\r\n                <div class=\"action-buttons\">\r\n                  <el-button \r\n                    size=\"mini\" \r\n                    type=\"primary\" \r\n                    icon=\"el-icon-edit\"\r\n                    @click=\"mod(scope.row)\"\r\n                    class=\"action-btn\">\r\n                    编辑\r\n                  </el-button>\r\n                  <el-popconfirm\r\n                    title=\"确定要删除这个工序吗？\"\r\n                    @confirm=\"del(scope.row.id)\"\r\n                    icon=\"el-icon-info\"\r\n                    icon-color=\"red\">\r\n                    <el-button \r\n                      slot=\"reference\"\r\n                      size=\"mini\" \r\n                      type=\"danger\" \r\n                      icon=\"el-icon-delete\"\r\n                      class=\"action-btn\">\r\n                      删除\r\n                    </el-button>\r\n                  </el-popconfirm>\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n  \r\n          <!-- 分页组件 -->\r\n          <div class=\"pagination-container\">\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"pageNum\"\r\n              :page-sizes=\"[5, 10, 20, 50]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\"\r\n              class=\"pagination\">\r\n            </el-pagination>\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n  \r\n      <!-- 工序表单对话框 -->\r\n      <el-dialog\r\n        :title=\"form.id ? '编辑工序' : '新增工序'\"\r\n        :visible.sync=\"centerDialogVisible\"\r\n        width=\"600px\"\r\n        :close-on-click-modal=\"true\"\r\n        :modal=\"true\"\r\n        :lock-scroll=\"false\"\r\n        append-to-body\r\n        class=\"process-dialog\">\r\n        \r\n        <el-form \r\n          ref=\"form\" \r\n          :rules=\"rules\" \r\n          :model=\"form\" \r\n          label-width=\"100px\"\r\n          class=\"process-form\">\r\n  \r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"24\">\r\n              <el-form-item prop=\"processName\" label=\"工序名称\">\r\n                <el-input \r\n                  v-model=\"form.processName\"\r\n                  placeholder=\"请输入工序名称\"\r\n                  prefix-icon=\"el-icon-s-operation\">\r\n                </el-input>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n  \r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"12\">\r\n              <el-form-item prop=\"duration\" label=\"时长(分钟)\">\r\n                <el-input-number\r\n                  v-model=\"form.duration\"\r\n                  :min=\"1\"\r\n                  :max=\"9999\"\r\n                  controls-position=\"right\"\r\n                  class=\"duration-input\">\r\n                </el-input-number>\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n              <el-form-item prop=\"stage\" label=\"阶段\">\r\n                <el-input-number\r\n                  v-model=\"form.stage\"\r\n                  :min=\"1\"\r\n                  :max=\"99\"\r\n                  controls-position=\"right\"\r\n                  class=\"stage-input\">\r\n                </el-input-number>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n  \r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"12\">\r\n              <el-form-item prop=\"teamId\" label=\"所属团队\">\r\n                <el-input-number\r\n                  v-model=\"form.teamId\"\r\n                  :min=\"1\"\r\n                  :max=\"99\"\r\n                  controls-position=\"right\"\r\n                  class=\"team-input\">\r\n                </el-input-number>\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n              <el-form-item label=\"人员类型\">\r\n                <el-radio-group v-model=\"form.isShared\" class=\"shared-radio\">\r\n                  <el-radio :label=\"false\" class=\"radio-item\">\r\n                    <i class=\"el-icon-user-solid\"></i> 专用\r\n                  </el-radio>\r\n                  <el-radio :label=\"true\" class=\"radio-item\">\r\n                    <i class=\"el-icon-s-cooperation\"></i> 共用\r\n                  </el-radio>\r\n                </el-radio-group>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n  \r\n          <!-- 工序描述 -->\r\n          <el-form-item label=\"工序描述\">\r\n            <el-input\r\n              v-model=\"form.description\"\r\n              type=\"textarea\"\r\n              :rows=\"3\"\r\n              placeholder=\"请输入工序描述（可选）\"\r\n              maxlength=\"200\"\r\n              show-word-limit>\r\n            </el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n  \r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"centerDialogVisible = false\" class=\"cancel-btn\">\r\n            取 消\r\n          </el-button>\r\n          <el-button type=\"primary\" @click=\"save\" :loading=\"saveLoading\" class=\"save-btn\">\r\n            {{ saveLoading ? '保存中...' : '确 定' }}\r\n          </el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"ProcessManage\",\r\n    data() {\r\n      let checkDuration = (rule, value, callback) => {\r\n        if (value <= 0) {\r\n          callback(new Error('时长必须大于0'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      \r\n      return {\r\n        tableData: [],\r\n        pageSize: 20,\r\n        pageNum: 1,\r\n        total: 0,\r\n        processName: '',\r\n        stage: '',\r\n        isShared: '',\r\n        saveLoading: false,\r\n        multipleSelection: [],\r\n        stages: [\r\n          {value: '1', label: '第1阶段'},\r\n          {value: '2', label: '第2阶段'},\r\n          {value: '3', label: '第3阶段'},\r\n          {value: '4', label: '第4阶段'},\r\n          {value: '5', label: '第5阶段'}\r\n        ],\r\n        sharedTypes: [\r\n          {value: 'false', label: '专用'},\r\n          {value: 'true', label: '共用'}\r\n        ],\r\n        centerDialogVisible: false,\r\n        form: {\r\n          id: '',\r\n          processName: '',\r\n          duration: 30,\r\n          stage: 1,\r\n          teamId: 1,\r\n          isShared: false,\r\n          description: ''\r\n        },\r\n        rules: {\r\n          processName: [\r\n            {required: true, message: '请输入工序名称', trigger: 'blur'},\r\n            {min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur'}\r\n          ],\r\n          duration: [\r\n            {required: true, message: '请输入时长', trigger: 'blur'},\r\n            {validator: checkDuration, trigger: 'blur'}\r\n          ],\r\n          stage: [\r\n            {required: true, message: '请输入阶段', trigger: 'blur'}\r\n          ],\r\n          teamId: [\r\n            {required: true, message: '请输入团队ID', trigger: 'blur'}\r\n          ],\r\n        },\r\n      };\r\n    },\r\n    methods: {\r\n      handleSelectionChange(val) {\r\n        this.multipleSelection = val;\r\n      },\r\n      getStageType(stage) {\r\n        const types = ['', 'primary', 'success', 'info', 'warning', 'danger'];\r\n        return types[stage] || 'info';\r\n      },\r\n      formatTime(time) {\r\n        if (!time) return '--';\r\n        return new Date(time).toLocaleDateString();\r\n      },\r\n      resetForm() {\r\n        this.$refs.form.resetFields();\r\n      },\r\n      add() {\r\n        this.centerDialogVisible = true;\r\n        this.$nextTick(() => {\r\n          this.resetForm();\r\n          this.form = {\r\n            id: '',\r\n            processName: '',\r\n            duration: 30,\r\n            stage: 1,\r\n            teamId: 1,\r\n            isShared: false,\r\n            description: ''\r\n          };\r\n        });\r\n      },\r\n      del(id){\r\n        this.$axios.get(this.$httpUrl + '/process/del?id='+id).then(res => res.data).then(res => {\r\n          if (res.code == 200) {\r\n            this.$message({\r\n              message: '删除成功!',\r\n              type: 'success'\r\n            });\r\n            this.loadPost();\r\n          } else {\r\n            this.$message({\r\n              message: '删除失败!',\r\n              type: 'error'\r\n            });\r\n          }\r\n        });\r\n      },\r\n      mod(row){\r\n        this.centerDialogVisible = true;\r\n        this.$nextTick(() => {\r\n          this.form.id = row.id;\r\n          this.form.processName = row.processName;\r\n          this.form.duration = row.duration;\r\n          this.form.stage = row.stage;\r\n          this.form.teamId = row.teamId;\r\n          this.form.isShared = row.isShared;\r\n          this.form.description = row.description || '';\r\n        });\r\n      },\r\n      doSave(){\r\n        this.saveLoading = true;\r\n        this.$axios.post(this.$httpUrl + '/process/save', this.form).then(res => res.data).then(res => {\r\n          this.saveLoading = false;\r\n          if (res.code == 200) {\r\n            this.$message({\r\n              message: '保存成功!',\r\n              type: 'success'\r\n            });\r\n            this.centerDialogVisible = false;\r\n            this.loadPost();\r\n          } else {\r\n            this.$message({\r\n              message: '保存失败!',\r\n              type: 'error'\r\n            });\r\n          }\r\n        });\r\n      },\r\n      doMod(){\r\n        this.saveLoading = true;\r\n        this.$axios.post(this.$httpUrl + '/process/update', this.form).then(res => res.data).then(res => {\r\n          this.saveLoading = false;\r\n          if (res.code == 200) {\r\n            this.$message({\r\n              message: '修改成功!',\r\n              type: 'success'\r\n            });\r\n            this.centerDialogVisible = false;\r\n            this.loadPost();\r\n          } else {\r\n            this.$message({\r\n              message: '修改失败!',\r\n              type: 'error'\r\n            });\r\n          }\r\n        });\r\n      },\r\n      save() {\r\n        this.$refs.form.validate((valid) => {\r\n          if (valid) {\r\n            if(this.form.id){\r\n              this.doMod();\r\n            }else{\r\n              this.doSave();\r\n            }\r\n          } else {\r\n            this.$message.warning('请检查表单填写是否正确');\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      resetParam() {\r\n        this.processName = '';\r\n        this.stage = '';\r\n        this.isShared = '';\r\n        this.loadPost();\r\n      },\r\n      loadPost() {\r\n        this.$axios.post(this.$httpUrl + '/process/listPageC1', {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          param: {\r\n            processName: this.processName,\r\n            stage: this.stage,\r\n            isShared: this.isShared\r\n          }\r\n        }).then(res => res.data).then(res => {\r\n          if (res.code == 200) {\r\n            this.tableData = res.data;\r\n            this.total = res.total;\r\n          } else {\r\n            this.$message.error('获取数据失败');\r\n          }\r\n        });\r\n      },\r\n      handleSizeChange(val) {\r\n        this.pageNum = 1;\r\n        this.pageSize = val;\r\n        this.loadPost();\r\n      },\r\n      handleCurrentChange(val) {\r\n        this.pageNum = val;\r\n        this.loadPost();\r\n      }\r\n    },\r\n    beforeMount() {\r\n      this.loadPost();\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .process-manage-container {\r\n    padding: 0;\r\n    background: transparent;\r\n  }\r\n  \r\n  /* 页面头部 */\r\n  .page-header {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .header-content {\r\n    background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\r\n    border-radius: 12px;\r\n    padding: 24px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: white;\r\n  }\r\n  \r\n  .title-section {\r\n    flex: 1;\r\n  }\r\n  \r\n  .page-title {\r\n    margin: 0 0 8px 0;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .title-icon {\r\n    color: #ffd700;\r\n    font-size: 32px;\r\n    animation: rotate 4s linear infinite;\r\n  }\r\n  \r\n  @keyframes rotate {\r\n    from { transform: rotate(0deg); }\r\n    to { transform: rotate(360deg); }\r\n  }\r\n  \r\n  .page-subtitle {\r\n    margin: 0;\r\n    opacity: 0.9;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .header-actions {\r\n    display: flex;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .add-btn {\r\n    background: rgba(255, 255, 255, 0.2);\r\n    border: 1px solid rgba(255, 255, 255, 0.3);\r\n    color: white;\r\n    backdrop-filter: blur(10px);\r\n  }\r\n  \r\n  .add-btn:hover {\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n  \r\n  /* 过滤区域 */\r\n  .filter-section {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .filter-card {\r\n    border: none;\r\n    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\r\n  }\r\n  \r\n  .filter-content {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    gap: 16px;\r\n  }\r\n  \r\n  .filter-left {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .filter-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n  }\r\n  \r\n  .filter-label {\r\n    font-weight: 500;\r\n    color: #606266;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .filter-input {\r\n    width: 200px;\r\n  }\r\n  \r\n  .filter-select {\r\n    width: 150px;\r\n  }\r\n  \r\n  .filter-actions {\r\n    display: flex;\r\n    gap: 12px;\r\n  }\r\n  \r\n  /* 表格区域 */\r\n  .table-section {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .table-card {\r\n    border: none;\r\n    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\r\n  }\r\n  \r\n  .table-header {\r\n    padding: 16px 0;\r\n    border-bottom: 1px solid #ebeef5;\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .table-title {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .title-text {\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #303133;\r\n  }\r\n  \r\n  .count-tag {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .table-actions {\r\n    display: flex;\r\n    gap: 12px;\r\n  }\r\n  \r\n  /* 表格样式 */\r\n  .process-table {\r\n    width: 100%;\r\n  }\r\n  \r\n  .process-table :deep(.el-table__header) {\r\n    background: #f8f9fa;\r\n  }\r\n  \r\n  .process-table :deep(.el-table th) {\r\n    background: #f8f9fa !important;\r\n    color: #606266;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .process-name {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .process-icon {\r\n    width: 36px;\r\n    height: 36px;\r\n    background: linear-gradient(135deg, #4facfe, #00f2fe);\r\n    border-radius: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .process-info {\r\n    flex: 1;\r\n  }\r\n  \r\n  .name-text {\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    color: #303133;\r\n  }\r\n  \r\n  .process-id {\r\n    font-size: 12px;\r\n    color: #909399;\r\n    margin-top: 2px;\r\n  }\r\n  \r\n  .duration-info, .team-info, .time-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 6px;\r\n  }\r\n  \r\n  .duration-icon {\r\n    color: #67c23a;\r\n  }\r\n  \r\n  .duration-text {\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .team-icon {\r\n    color: #e6a23c;\r\n  }\r\n  \r\n  .time-icon {\r\n    color: #909399;\r\n  }\r\n  \r\n  .stage-tag, .shared-tag {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 4px;\r\n  }\r\n  \r\n  .action-buttons {\r\n    display: flex;\r\n    gap: 8px;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .action-btn {\r\n    padding: 5px 12px;\r\n    border-radius: 6px;\r\n  }\r\n  \r\n  /* 分页 */\r\n  .pagination-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 20px 0;\r\n    border-top: 1px solid #ebeef5;\r\n    margin-top: 16px;\r\n  }\r\n  \r\n  /* 对话框样式 */\r\n  .process-dialog :deep(.el-dialog) {\r\n    border-radius: 12px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .process-dialog :deep(.el-dialog__header) {\r\n    background: linear-gradient(135deg, #4facfe, #00f2fe);\r\n    color: white;\r\n    padding: 20px 24px;\r\n  }\r\n  \r\n  .process-dialog :deep(.el-dialog__title) {\r\n    color: white;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .process-dialog :deep(.el-dialog__headerbtn .el-dialog__close) {\r\n    color: white;\r\n  }\r\n  \r\n  .process-form {\r\n    padding: 24px;\r\n  }\r\n  \r\n  .duration-input, .stage-input, .team-input {\r\n    width: 100%;\r\n  }\r\n  \r\n  .shared-radio {\r\n    display: flex;\r\n    gap: 20px;\r\n  }\r\n  \r\n  .radio-item {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .radio-item :deep(.el-radio__label) {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 4px;\r\n  }\r\n  \r\n  .dialog-footer {\r\n    padding: 16px 24px;\r\n    border-top: 1px solid #ebeef5;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .cancel-btn {\r\n    padding: 10px 20px;\r\n  }\r\n  \r\n  .save-btn {\r\n    padding: 10px 20px;\r\n    background: linear-gradient(135deg, #4facfe, #00f2fe);\r\n    border: none;\r\n  }\r\n  \r\n  .save-btn:hover {\r\n    background: linear-gradient(135deg, #3b8bfe, #00d4fe);\r\n  }\r\n  \r\n  .process-dialog :deep(.el-dialog__wrapper) {\r\n    z-index: 2000;\r\n  }\r\n\r\n  .process-dialog :deep(.el-overlay) {\r\n    z-index: 1999;\r\n  }\r\n\r\n  .process-dialog :deep(.el-dialog) {\r\n    position: relative;\r\n    z-index: 2001;\r\n  }\r\n\r\n  /* 响应式设计 */\r\n  @media (max-width: 768px) {\r\n    .header-content {\r\n      flex-direction: column;\r\n      gap: 16px;\r\n      text-align: center;\r\n    }\r\n    \r\n    .filter-content {\r\n      flex-direction: column;\r\n      align-items: stretch;\r\n    }\r\n    \r\n    .filter-left {\r\n      justify-content: center;\r\n    }\r\n    \r\n    .filter-actions {\r\n      justify-content: center;\r\n    }\r\n    \r\n    .table-header {\r\n      flex-direction: column;\r\n      gap: 12px;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .process-dialog {\r\n      width: 90% !important;\r\n    }\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}