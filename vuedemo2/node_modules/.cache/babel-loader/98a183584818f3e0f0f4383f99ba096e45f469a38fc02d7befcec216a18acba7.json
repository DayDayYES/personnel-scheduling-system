{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport ChartView from '../../view/Chart.js';\nimport ChordPiece from './ChordPiece.js';\nimport { ChordEdge } from './ChordEdge.js';\nimport { parsePercent } from '../../util/number.js';\nimport { getECData } from '../../util/innerStore.js';\nvar RADIAN = Math.PI / 180;\nvar ChordView = /** @class */function (_super) {\n  __extends(ChordView, _super);\n  function ChordView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = ChordView.type;\n    return _this;\n  }\n  ChordView.prototype.init = function (ecModel, api) {};\n  ChordView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    data.diff(oldData).add(function (newIdx) {\n      /* Consider the case when there are only two nodes A and B,\n       * and there is a link between A and B.\n       * At first, they are both disselected from legend. And then\n       * when A is selected, A will go into `add` method. But since\n       * there are no edges to be displayed, A should not be added.\n       * So we should only add A when layout is defined.\n       */\n      var layout = data.getItemLayout(newIdx);\n      if (layout) {\n        var el = new ChordPiece(data, newIdx, startAngle);\n        getECData(el).dataIndex = newIdx;\n        group.add(el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      var layout = data.getItemLayout(newIdx);\n      /* Consider the case when there are only two nodes A and B,\n       * and there is a link between A and B.\n       * and when A is disselected from legend, there should be\n       * nothing to display. But in the `data.diff` method, B will go\n       * into `update` method and having no layout.\n       * In this case, we need to remove B.\n       */\n      if (!layout) {\n        el && graphic.removeElementWithFadeOut(el, seriesModel, oldIdx);\n        return;\n      }\n      if (!el) {\n        el = new ChordPiece(data, newIdx, startAngle);\n      } else {\n        el.updateData(data, newIdx, startAngle);\n      }\n      group.add(el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && graphic.removeElementWithFadeOut(el, seriesModel, oldIdx);\n    }).execute();\n    if (!oldData) {\n      var center = seriesModel.get('center');\n      this.group.scaleX = 0.01;\n      this.group.scaleY = 0.01;\n      this.group.originX = parsePercent(center[0], api.getWidth());\n      this.group.originY = parsePercent(center[1], api.getHeight());\n      graphic.initProps(this.group, {\n        scaleX: 1,\n        scaleY: 1\n      }, seriesModel);\n    }\n    this._data = data;\n    this.renderEdges(seriesModel, startAngle);\n  };\n  ChordView.prototype.renderEdges = function (seriesModel, startAngle) {\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getEdgeData();\n    var oldData = this._edgeData;\n    var group = this.group;\n    edgeData.diff(oldData).add(function (newIdx) {\n      var el = new ChordEdge(nodeData, edgeData, newIdx, startAngle);\n      getECData(el).dataIndex = newIdx;\n      group.add(el);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el.updateData(nodeData, edgeData, newIdx, startAngle);\n      group.add(el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && graphic.removeElementWithFadeOut(el, seriesModel, oldIdx);\n    }).execute();\n    this._edgeData = edgeData;\n  };\n  ChordView.prototype.dispose = function () {};\n  ChordView.type = 'chord';\n  return ChordView;\n}(ChartView);\nexport default ChordView;","map":{"version":3,"names":["__extends","graphic","ChartView","ChordPiece","ChordEdge","parsePercent","getECData","RADIAN","Math","PI","ChordView","_super","_this","apply","arguments","type","prototype","init","ecModel","api","render","seriesModel","data","getData","oldData","_data","group","startAngle","get","diff","add","newIdx","layout","getItemLayout","el","dataIndex","update","oldIdx","getItemGraphicEl","removeElementWithFadeOut","updateData","remove","execute","center","scaleX","scaleY","originX","getWidth","originY","getHeight","initProps","renderEdges","nodeData","edgeData","getEdgeData","_edgeData","dispose"],"sources":["D:/Program Files/JetBrains/IDEAProject/springboot-vue-wms_test/vuedemo2/node_modules/echarts/lib/chart/chord/ChordView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport ChartView from '../../view/Chart.js';\nimport ChordPiece from './ChordPiece.js';\nimport { ChordEdge } from './ChordEdge.js';\nimport { parsePercent } from '../../util/number.js';\nimport { getECData } from '../../util/innerStore.js';\nvar RADIAN = Math.PI / 180;\nvar ChordView = /** @class */function (_super) {\n  __extends(ChordView, _super);\n  function ChordView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = ChordView.type;\n    return _this;\n  }\n  ChordView.prototype.init = function (ecModel, api) {};\n  ChordView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    data.diff(oldData).add(function (newIdx) {\n      /* Consider the case when there are only two nodes A and B,\n       * and there is a link between A and B.\n       * At first, they are both disselected from legend. And then\n       * when A is selected, A will go into `add` method. But since\n       * there are no edges to be displayed, A should not be added.\n       * So we should only add A when layout is defined.\n       */\n      var layout = data.getItemLayout(newIdx);\n      if (layout) {\n        var el = new ChordPiece(data, newIdx, startAngle);\n        getECData(el).dataIndex = newIdx;\n        group.add(el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      var layout = data.getItemLayout(newIdx);\n      /* Consider the case when there are only two nodes A and B,\n       * and there is a link between A and B.\n       * and when A is disselected from legend, there should be\n       * nothing to display. But in the `data.diff` method, B will go\n       * into `update` method and having no layout.\n       * In this case, we need to remove B.\n       */\n      if (!layout) {\n        el && graphic.removeElementWithFadeOut(el, seriesModel, oldIdx);\n        return;\n      }\n      if (!el) {\n        el = new ChordPiece(data, newIdx, startAngle);\n      } else {\n        el.updateData(data, newIdx, startAngle);\n      }\n      group.add(el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && graphic.removeElementWithFadeOut(el, seriesModel, oldIdx);\n    }).execute();\n    if (!oldData) {\n      var center = seriesModel.get('center');\n      this.group.scaleX = 0.01;\n      this.group.scaleY = 0.01;\n      this.group.originX = parsePercent(center[0], api.getWidth());\n      this.group.originY = parsePercent(center[1], api.getHeight());\n      graphic.initProps(this.group, {\n        scaleX: 1,\n        scaleY: 1\n      }, seriesModel);\n    }\n    this._data = data;\n    this.renderEdges(seriesModel, startAngle);\n  };\n  ChordView.prototype.renderEdges = function (seriesModel, startAngle) {\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getEdgeData();\n    var oldData = this._edgeData;\n    var group = this.group;\n    edgeData.diff(oldData).add(function (newIdx) {\n      var el = new ChordEdge(nodeData, edgeData, newIdx, startAngle);\n      getECData(el).dataIndex = newIdx;\n      group.add(el);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el.updateData(nodeData, edgeData, newIdx, startAngle);\n      group.add(el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && graphic.removeElementWithFadeOut(el, seriesModel, oldIdx);\n    }).execute();\n    this._edgeData = edgeData;\n  };\n  ChordView.prototype.dispose = function () {};\n  ChordView.type = 'chord';\n  return ChordView;\n}(ChartView);\nexport default ChordView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}