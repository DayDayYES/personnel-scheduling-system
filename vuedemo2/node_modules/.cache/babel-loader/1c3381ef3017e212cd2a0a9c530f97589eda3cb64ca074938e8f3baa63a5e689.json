{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_c(\"el-row\", {\n    staticStyle: {\n      \"margin-bottom\": \"10px\"\n    },\n    attrs: {\n      gutter: 10,\n      align: \"middle\"\n    }\n  }, [_c(\"el-col\", {\n    attrs: {\n      span: 6\n    }\n  }, [_c(\"el-select\", {\n    staticStyle: {\n      width: \"100%\"\n    },\n    attrs: {\n      placeholder: \"请选择算法\"\n    },\n    model: {\n      value: _vm.selectedAlgorithm,\n      callback: function ($$v) {\n        _vm.selectedAlgorithm = $$v;\n      },\n      expression: \"selectedAlgorithm\"\n    }\n  }, [_c(\"el-option\", {\n    attrs: {\n      label: \"DDPG\",\n      value: \"ddpg\"\n    }\n  }), _c(\"el-option\", {\n    attrs: {\n      label: \"DDQN\",\n      value: \"ddqn\"\n    }\n  }), _c(\"el-option\", {\n    attrs: {\n      label: \"GA\",\n      value: \"ga\"\n    }\n  }), _c(\"el-option\", {\n    attrs: {\n      label: \"其他算法\",\n      value: \"other_algorithm\"\n    }\n  })], 1)], 1), _c(\"el-col\", {\n    attrs: {\n      span: 4\n    }\n  }, [_c(\"el-button\", {\n    staticStyle: {\n      width: \"100%\"\n    },\n    attrs: {\n      type: \"primary\",\n      loading: _vm.isLoading\n    },\n    on: {\n      click: _vm.runAlgorithm\n    }\n  }, [_vm._v(\"运行算法\")])], 1)], 1), _vm.selectedAlgorithm === \"ddpg\" ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_c(\"el-input\", {\n    staticStyle: {\n      width: \"300px\",\n      \"margin-right\": \"10px\"\n    },\n    attrs: {\n      placeholder: \"请输入训练的最大迭代次数\"\n    },\n    model: {\n      value: _vm.inputData.max_episodes,\n      callback: function ($$v) {\n        _vm.$set(_vm.inputData, \"max_episodes\", $$v);\n      },\n      expression: \"inputData.max_episodes\"\n    }\n  })], 1) : _vm._e(), _vm.selectedAlgorithm === \"ddqn\" || _vm.selectedAlgorithm === \"ga\" ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_c(\"el-table\", {\n    staticStyle: {\n      width: \"100%\"\n    },\n    attrs: {\n      data: _vm.tableData,\n      border: \"\"\n    }\n  }, [_c(\"el-table-column\", {\n    attrs: {\n      prop: \"task\",\n      label: \"任务\",\n      width: \"180\",\n      fixed: \"\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function ({\n        row,\n        $index\n      }) {\n        return [$index === 0 ? _c(\"span\", [_vm._v(\"任务\")]) : _c(\"span\", [_vm._v(_vm._s(row.task))])];\n      }\n    }], null, false, 736666149)\n  }), _vm._l(_vm.workers, function (worker, index) {\n    return _c(\"el-table-column\", {\n      key: index,\n      attrs: {\n        label: worker,\n        prop: worker,\n        width: \"120\"\n      },\n      scopedSlots: _vm._u([{\n        key: \"default\",\n        fn: function ({\n          row,\n          $index\n        }) {\n          return [$index === 0 ? _c(\"span\", [_vm._v(_vm._s(worker))]) : _c(\"el-input\", {\n            attrs: {\n              placeholder: \"请输入\",\n              size: \"small\"\n            },\n            model: {\n              value: row[worker],\n              callback: function ($$v) {\n                _vm.$set(row, worker, $$v);\n              },\n              expression: \"row[worker]\"\n            }\n          })];\n        }\n      }], null, true)\n    });\n  })], 2)], 1) : _vm._e(), _vm.selectedAlgorithm === \"other_algorithm\" ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_c(\"el-input\", {\n    staticStyle: {\n      width: \"300px\",\n      \"margin-right\": \"10px\"\n    },\n    attrs: {\n      placeholder: \"请输入自定义参数\"\n    },\n    model: {\n      value: _vm.inputData.custom_param,\n      callback: function ($$v) {\n        _vm.$set(_vm.inputData, \"custom_param\", $$v);\n      },\n      expression: \"inputData.custom_param\"\n    }\n  })], 1) : _vm._e(), _vm.progressVisible ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"20px\"\n    }\n  }, [_c(\"el-progress\", {\n    attrs: {\n      percentage: _vm.progressPercentage,\n      status: _vm.progressStatus\n    }\n  }), _c(\"p\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_vm._v(\"当前进度：\" + _vm._s(_vm.progressPercentage) + \"%\")])], 1) : _vm._e(), _vm.result ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"20px\"\n    }\n  }, [_c(\"h3\", [_vm._v(\"算法结果：\")]), _c(\"pre\", [_vm._v(_vm._s(_vm.result))])]) : _vm._e()], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","staticStyle","attrs","gutter","align","span","width","placeholder","model","value","selectedAlgorithm","callback","$$v","expression","label","type","loading","isLoading","on","click","runAlgorithm","_v","inputData","max_episodes","$set","_e","data","tableData","border","prop","fixed","scopedSlots","_u","key","fn","row","$index","_s","task","_l","workers","worker","index","size","custom_param","progressVisible","percentage","progressPercentage","status","progressStatus","result","staticRenderFns","_withStripped"],"sources":["D:/Program Files/JetBrains/IDEAProject/springboot-vue-wms/vuedemo2/src/components/user/Test.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-row\",\n        {\n          staticStyle: { \"margin-bottom\": \"10px\" },\n          attrs: { gutter: 10, align: \"middle\" },\n        },\n        [\n          _c(\n            \"el-col\",\n            { attrs: { span: 6 } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  staticStyle: { width: \"100%\" },\n                  attrs: { placeholder: \"请选择算法\" },\n                  model: {\n                    value: _vm.selectedAlgorithm,\n                    callback: function ($$v) {\n                      _vm.selectedAlgorithm = $$v\n                    },\n                    expression: \"selectedAlgorithm\",\n                  },\n                },\n                [\n                  _c(\"el-option\", { attrs: { label: \"DDPG\", value: \"ddpg\" } }),\n                  _c(\"el-option\", { attrs: { label: \"DDQN\", value: \"ddqn\" } }),\n                  _c(\"el-option\", { attrs: { label: \"GA\", value: \"ga\" } }),\n                  _c(\"el-option\", {\n                    attrs: { label: \"其他算法\", value: \"other_algorithm\" },\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"el-col\",\n            { attrs: { span: 4 } },\n            [\n              _c(\n                \"el-button\",\n                {\n                  staticStyle: { width: \"100%\" },\n                  attrs: { type: \"primary\", loading: _vm.isLoading },\n                  on: { click: _vm.runAlgorithm },\n                },\n                [_vm._v(\"运行算法\")]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm.selectedAlgorithm === \"ddpg\"\n        ? _c(\n            \"div\",\n            { staticStyle: { \"margin-top\": \"10px\" } },\n            [\n              _c(\"el-input\", {\n                staticStyle: { width: \"300px\", \"margin-right\": \"10px\" },\n                attrs: { placeholder: \"请输入训练的最大迭代次数\" },\n                model: {\n                  value: _vm.inputData.max_episodes,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.inputData, \"max_episodes\", $$v)\n                  },\n                  expression: \"inputData.max_episodes\",\n                },\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.selectedAlgorithm === \"ddqn\" || _vm.selectedAlgorithm === \"ga\"\n        ? _c(\n            \"div\",\n            { staticStyle: { \"margin-top\": \"10px\" } },\n            [\n              _c(\n                \"el-table\",\n                {\n                  staticStyle: { width: \"100%\" },\n                  attrs: { data: _vm.tableData, border: \"\" },\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"task\",\n                      label: \"任务\",\n                      width: \"180\",\n                      fixed: \"\",\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function ({ row, $index }) {\n                            return [\n                              $index === 0\n                                ? _c(\"span\", [_vm._v(\"任务\")])\n                                : _c(\"span\", [_vm._v(_vm._s(row.task))]),\n                            ]\n                          },\n                        },\n                      ],\n                      null,\n                      false,\n                      736666149\n                    ),\n                  }),\n                  _vm._l(_vm.workers, function (worker, index) {\n                    return _c(\"el-table-column\", {\n                      key: index,\n                      attrs: { label: worker, prop: worker, width: \"120\" },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function ({ row, $index }) {\n                              return [\n                                $index === 0\n                                  ? _c(\"span\", [_vm._v(_vm._s(worker))])\n                                  : _c(\"el-input\", {\n                                      attrs: {\n                                        placeholder: \"请输入\",\n                                        size: \"small\",\n                                      },\n                                      model: {\n                                        value: row[worker],\n                                        callback: function ($$v) {\n                                          _vm.$set(row, worker, $$v)\n                                        },\n                                        expression: \"row[worker]\",\n                                      },\n                                    }),\n                              ]\n                            },\n                          },\n                        ],\n                        null,\n                        true\n                      ),\n                    })\n                  }),\n                ],\n                2\n              ),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.selectedAlgorithm === \"other_algorithm\"\n        ? _c(\n            \"div\",\n            { staticStyle: { \"margin-top\": \"10px\" } },\n            [\n              _c(\"el-input\", {\n                staticStyle: { width: \"300px\", \"margin-right\": \"10px\" },\n                attrs: { placeholder: \"请输入自定义参数\" },\n                model: {\n                  value: _vm.inputData.custom_param,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.inputData, \"custom_param\", $$v)\n                  },\n                  expression: \"inputData.custom_param\",\n                },\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.progressVisible\n        ? _c(\n            \"div\",\n            { staticStyle: { \"margin-top\": \"20px\" } },\n            [\n              _c(\"el-progress\", {\n                attrs: {\n                  percentage: _vm.progressPercentage,\n                  status: _vm.progressStatus,\n                },\n              }),\n              _c(\"p\", { staticStyle: { \"margin-top\": \"10px\" } }, [\n                _vm._v(\"当前进度：\" + _vm._s(_vm.progressPercentage) + \"%\"),\n              ]),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.result\n        ? _c(\"div\", { staticStyle: { \"margin-top\": \"20px\" } }, [\n            _c(\"h3\", [_vm._v(\"算法结果：\")]),\n            _c(\"pre\", [_vm._v(_vm._s(_vm.result))]),\n          ])\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}