{"ast":null,"code":"export default {\n  name: \"ProcessManage\",\n  data() {\n    let checkDuration = (rule, value, callback) => {\n      if (value <= 0) {\n        callback(new Error('时长必须大于0'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      tableData: [],\n      pageSize: 20,\n      pageNum: 1,\n      total: 0,\n      processName: '',\n      stage: '',\n      isShared: '',\n      stages: [{\n        value: '1',\n        label: '阶段1'\n      }, {\n        value: '2',\n        label: '阶段2'\n      }, {\n        value: '3',\n        label: '阶段3'\n      }, {\n        value: '4',\n        label: '阶段4'\n      }, {\n        value: '5',\n        label: '阶段5'\n      }],\n      sharedTypes: [{\n        value: 'false',\n        label: '专用'\n      }, {\n        value: 'true',\n        label: '共用'\n      }],\n      centerDialogVisible: false,\n      form: {\n        id: '',\n        processName: '',\n        duration: '',\n        stage: '',\n        teamId: '',\n        isShared: false\n      },\n      rules: {\n        processName: [{\n          required: true,\n          message: '请输入工序名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 50,\n          message: '长度在 1 到 50 个字符',\n          trigger: 'blur'\n        }],\n        duration: [{\n          required: true,\n          message: '请输入时长',\n          trigger: 'blur'\n        }, {\n          pattern: /^[1-9]\\d*$/,\n          message: '请输入正整数',\n          trigger: 'blur'\n        }, {\n          validator: checkDuration,\n          trigger: 'blur'\n        }],\n        stage: [{\n          required: true,\n          message: '请输入阶段',\n          trigger: 'blur'\n        }, {\n          pattern: /^[1-9]\\d*$/,\n          message: '请输入正整数',\n          trigger: 'blur'\n        }],\n        teamId: [{\n          required: true,\n          message: '请输入团队ID',\n          trigger: 'blur'\n        }, {\n          pattern: /^[1-9]\\d*$/,\n          message: '请输入正整数',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    add() {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetForm();\n      });\n    },\n    del(id) {\n      this.$axios.get(this.$httpUrl + '/process/del?id=' + id).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          this.$message({\n            message: '删除成功!',\n            type: 'success'\n          });\n          this.loadPost();\n        } else {\n          this.$message({\n            message: '删除失败!',\n            type: 'error'\n          });\n        }\n      });\n    },\n    mod(row) {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.form.id = row.id;\n        this.form.processName = row.processName;\n        this.form.duration = row.duration + '';\n        this.form.stage = row.stage + '';\n        this.form.teamId = row.teamId + '';\n        this.form.isShared = row.isShared;\n      });\n    },\n    doSave() {\n      this.$axios.post(this.$httpUrl + '/process/save', this.form).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          this.$message({\n            message: '保存成功!',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n        } else {\n          this.$message({\n            message: '保存失败!',\n            type: 'error'\n          });\n        }\n      });\n    },\n    doMod() {\n      this.$axios.post(this.$httpUrl + '/process/update', this.form).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          this.$message({\n            message: '修改成功!',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n        } else {\n          this.$message({\n            message: '修改失败!',\n            type: 'error'\n          });\n        }\n      });\n    },\n    save() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (this.form.id) {\n            this.doMod();\n          } else {\n            this.doSave();\n          }\n        } else {\n          console.log('表单验证失败!');\n          return false;\n        }\n      });\n    },\n    resetParam() {\n      this.processName = '';\n      this.stage = '';\n      this.isShared = '';\n      this.loadPost();\n    },\n    loadPost() {\n      this.$axios.post(this.$httpUrl + '/process/listPageC1', {\n        pageNum: this.pageNum,\n        pageSize: this.pageSize,\n        param: {\n          processName: this.processName,\n          stage: this.stage,\n          isShared: this.isShared\n        }\n      }).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          this.tableData = res.data;\n          this.total = res.total;\n        } else {\n          this.$message.error('获取数据失败');\n        }\n      });\n    },\n    handleSizeChange(val) {\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      this.pageNum = val;\n      this.loadPost();\n    }\n  },\n  beforeMount() {\n    this.loadPost();\n  }\n};","map":{"version":3,"names":["name","data","checkDuration","rule","value","callback","Error","tableData","pageSize","pageNum","total","processName","stage","isShared","stages","label","sharedTypes","centerDialogVisible","form","id","duration","teamId","rules","required","message","trigger","min","max","pattern","validator","methods","resetForm","$refs","resetFields","add","$nextTick","del","$axios","get","$httpUrl","then","res","code","$message","type","loadPost","mod","row","doSave","post","doMod","save","validate","valid","console","log","resetParam","param","error","handleSizeChange","val","handleCurrentChange","beforeMount"],"sources":["src/components/process/ProcessManage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div style=\"margin-bottom: 5px\">\r\n        <el-input v-model=\"processName\" placeholder=\"请输入工序名称\" suffix-icon=\"el-icon-search\" style=\"width: 200px;\" @keyup.enter.native=\"loadPost\"></el-input>\r\n        <el-select v-model=\"stage\" filterable placeholder=\"请选择阶段\" style=\"margin-left: 5px;\">\r\n          <el-option\r\n              v-for=\"item in stages\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n        <el-select v-model=\"isShared\" filterable placeholder=\"人员类型\" style=\"margin-left: 5px;\">\r\n          <el-option\r\n              v-for=\"item in sharedTypes\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n        <el-button type=\"primary\" style=\"margin-left: 5px;\" @click=\"loadPost\">查询</el-button>\r\n        <el-button type=\"success\" @click=\"resetParam\">重置</el-button>\r\n        <el-button type=\"success\" style=\"margin-left: 5px;\" @click=\"add\">新增</el-button>\r\n      </div>\r\n  \r\n      <el-table :data=\"tableData\"\r\n              :header-cell-style=\"{background: '#f2f2f2'}\"\r\n              border>\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"60\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"processName\" label=\"工序名称\" width=\"180\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"duration\" label=\"时长(分钟)\" width=\"120\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"stage\" label=\"阶段\" width=\"80\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"teamId\" label=\"所属团队\" width=\"100\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"isShared\" label=\"人员类型\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag\r\n              :type=\"scope.row.isShared ? 'success' : 'primary'\"\r\n              disable-transitions>{{scope.row.isShared ? '共用' : '专用'}}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n            {{ scope.row.createTime ? new Date(scope.row.createTime).toLocaleString() : '' }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"operate\" label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"small\" type=\"success\" @click=\"mod(scope.row)\">编辑</el-button>\r\n          <el-popconfirm\r\n              title=\"确定删除吗？\"\r\n              @confirm=\"del(scope.row.id)\"\r\n              style=\"margin-left: 5px;\">\r\n            <el-button slot=\"reference\" size=\"small\" type=\"danger\">删除</el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"pageNum\"\r\n        :page-sizes=\"[5, 10, 20, 30]\"\r\n        :page-size=\"pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n    </el-pagination>\r\n\r\n    <el-dialog\r\n        title=\"工序信息\"\r\n        :visible.sync=\"centerDialogVisible\"\r\n        width=\"30%\"\r\n        center>\r\n\r\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"100px\">\r\n        <el-form-item prop=\"processName\" label=\"工序名称\">\r\n          <el-col :span=\"20\">\r\n            <el-input v-model=\"form.processName\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item prop=\"duration\" label=\"时长(分钟)\">\r\n          <el-col :span=\"20\">\r\n            <el-input v-model=\"form.duration\" type=\"number\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item prop=\"stage\" label=\"阶段\">\r\n          <el-col :span=\"20\">\r\n            <el-input v-model=\"form.stage\" type=\"number\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item prop=\"teamId\" label=\"所属团队\">\r\n          <el-col :span=\"20\">\r\n            <el-input v-model=\"form.teamId\" type=\"number\"></el-input>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item label=\"人员类型\">\r\n          <el-radio-group v-model=\"form.isShared\">\r\n            <el-radio :label=\"false\">专用</el-radio>\r\n            <el-radio :label=\"true\">共用</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"centerDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ProcessManage\",\r\n  data() {\r\n    let checkDuration = (rule, value, callback) => {\r\n      if (value <= 0) {\r\n        callback(new Error('时长必须大于0'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      tableData: [],\r\n      pageSize: 20,\r\n      pageNum: 1,\r\n      total: 0,\r\n      processName: '',\r\n      stage: '',\r\n      isShared: '',\r\n      stages: [\r\n        {value: '1', label: '阶段1'},\r\n        {value: '2', label: '阶段2'},\r\n        {value: '3', label: '阶段3'},\r\n        {value: '4', label: '阶段4'},\r\n        {value: '5', label: '阶段5'}\r\n      ],\r\n      sharedTypes: [\r\n        {value: 'false', label: '专用'},\r\n        {value: 'true', label: '共用'}\r\n      ],\r\n      centerDialogVisible: false,\r\n      form: {\r\n        id: '',\r\n        processName: '',\r\n        duration: '',\r\n        stage: '',\r\n        teamId: '',\r\n        isShared: false,\r\n      },\r\n      rules: {\r\n        processName: [\r\n          {required: true, message: '请输入工序名称', trigger: 'blur'},\r\n          {min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur'}\r\n        ],\r\n        duration: [\r\n          {required: true, message: '请输入时长', trigger: 'blur'},\r\n          {pattern: /^[1-9]\\d*$/, message: '请输入正整数', trigger: 'blur'},\r\n          {validator: checkDuration, trigger: 'blur'}\r\n        ],\r\n        stage: [\r\n          {required: true, message: '请输入阶段', trigger: 'blur'},\r\n          {pattern: /^[1-9]\\d*$/, message: '请输入正整数', trigger: 'blur'}\r\n        ],\r\n        teamId: [\r\n          {required: true, message: '请输入团队ID', trigger: 'blur'},\r\n          {pattern: /^[1-9]\\d*$/, message: '请输入正整数', trigger: 'blur'}\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    resetForm() {\r\n      this.$refs.form.resetFields();\r\n    },\r\n    add() {\r\n      this.centerDialogVisible = true\r\n      this.$nextTick(() => {\r\n        this.resetForm()\r\n      })\r\n    },\r\n    del(id){\r\n      this.$axios.get(this.$httpUrl + '/process/del?id='+id).then(res => res.data).then(res => {\r\n        if (res.code == 200) {\r\n          this.$message({\r\n            message: '删除成功!',\r\n            type: 'success'\r\n          });\r\n          this.loadPost()\r\n        } else {\r\n          this.$message({\r\n            message: '删除失败!',\r\n            type: 'error'\r\n          });\r\n        }\r\n      });\r\n    },\r\n    mod(row){\r\n      this.centerDialogVisible = true\r\n      this.$nextTick(() => {\r\n        this.form.id = row.id\r\n        this.form.processName = row.processName\r\n        this.form.duration = row.duration + ''\r\n        this.form.stage = row.stage + ''\r\n        this.form.teamId = row.teamId + ''\r\n        this.form.isShared = row.isShared\r\n      })\r\n    },\r\n    doSave(){\r\n      this.$axios.post(this.$httpUrl + '/process/save', this.form).then(res => res.data).then(res => {\r\n        if (res.code == 200) {\r\n          this.$message({\r\n            message: '保存成功!',\r\n            type: 'success'\r\n          });\r\n          this.centerDialogVisible = false\r\n          this.loadPost()\r\n        } else {\r\n          this.$message({\r\n            message: '保存失败!',\r\n            type: 'error'\r\n          });\r\n        }\r\n      });\r\n    },\r\n    doMod(){\r\n      this.$axios.post(this.$httpUrl + '/process/update', this.form).then(res => res.data).then(res => {\r\n        if (res.code == 200) {\r\n          this.$message({\r\n            message: '修改成功!',\r\n            type: 'success'\r\n          });\r\n          this.centerDialogVisible = false\r\n          this.loadPost()\r\n        } else {\r\n          this.$message({\r\n            message: '修改失败!',\r\n            type: 'error'\r\n          });\r\n        }\r\n      });\r\n    },\r\n    save() {\r\n      this.$refs.form.validate((valid) => {\r\n        if (valid) {\r\n          if(this.form.id){\r\n            this.doMod();\r\n          }else{\r\n            this.doSave();\r\n          }\r\n        } else {\r\n          console.log('表单验证失败!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetParam() {\r\n      this.processName = ''\r\n      this.stage = ''\r\n      this.isShared = ''\r\n      this.loadPost()\r\n    },\r\n    loadPost() {\r\n      this.$axios.post(this.$httpUrl + '/process/listPageC1', {\r\n        pageNum: this.pageNum,\r\n        pageSize: this.pageSize,\r\n        param: {\r\n          processName: this.processName,\r\n          stage: this.stage,\r\n          isShared: this.isShared\r\n        }\r\n      }).then(res => res.data).then(res => {\r\n        if (res.code == 200) {\r\n          this.tableData = res.data\r\n          this.total = res.total\r\n        } else {\r\n          this.$message.error('获取数据失败')\r\n        }\r\n      });\r\n    },\r\n    handleSizeChange(val) {\r\n      this.pageNum = 1\r\n      this.pageSize = val\r\n      this.loadPost()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.pageNum = val\r\n      this.loadPost()\r\n    }\r\n  },\r\n  beforeMount() {\r\n    this.loadPost()\r\n  }\r\n};\r\n</script>"],"mappings":"AAsHA;EACAA,IAAA;EACAC,KAAA;IACA,IAAAC,aAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IAEA;MACAE,SAAA;MACAC,QAAA;MACAC,OAAA;MACAC,KAAA;MACAC,WAAA;MACAC,KAAA;MACAC,QAAA;MACAC,MAAA,GACA;QAAAV,KAAA;QAAAW,KAAA;MAAA,GACA;QAAAX,KAAA;QAAAW,KAAA;MAAA,GACA;QAAAX,KAAA;QAAAW,KAAA;MAAA,GACA;QAAAX,KAAA;QAAAW,KAAA;MAAA,GACA;QAAAX,KAAA;QAAAW,KAAA;MAAA,EACA;MACAC,WAAA,GACA;QAAAZ,KAAA;QAAAW,KAAA;MAAA,GACA;QAAAX,KAAA;QAAAW,KAAA;MAAA,EACA;MACAE,mBAAA;MACAC,IAAA;QACAC,EAAA;QACAR,WAAA;QACAS,QAAA;QACAR,KAAA;QACAS,MAAA;QACAR,QAAA;MACA;MACAS,KAAA;QACAX,WAAA,GACA;UAAAY,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAG,OAAA;UAAAJ,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAI,SAAA,EAAA3B,aAAA;UAAAuB,OAAA;QAAA,EACA;QACAb,KAAA,GACA;UAAAW,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAG,OAAA;UAAAJ,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,MAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAG,OAAA;UAAAJ,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAK,OAAA;IACAC,UAAA;MACA,KAAAC,KAAA,CAAAd,IAAA,CAAAe,WAAA;IACA;IACAC,IAAA;MACA,KAAAjB,mBAAA;MACA,KAAAkB,SAAA;QACA,KAAAJ,SAAA;MACA;IACA;IACAK,IAAAjB,EAAA;MACA,KAAAkB,MAAA,CAAAC,GAAA,MAAAC,QAAA,wBAAApB,EAAA,EAAAqB,IAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAxC,IAAA,EAAAuC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA;YACAnB,OAAA;YACAoB,IAAA;UACA;UACA,KAAAC,QAAA;QACA;UACA,KAAAF,QAAA;YACAnB,OAAA;YACAoB,IAAA;UACA;QACA;MACA;IACA;IACAE,IAAAC,GAAA;MACA,KAAA9B,mBAAA;MACA,KAAAkB,SAAA;QACA,KAAAjB,IAAA,CAAAC,EAAA,GAAA4B,GAAA,CAAA5B,EAAA;QACA,KAAAD,IAAA,CAAAP,WAAA,GAAAoC,GAAA,CAAApC,WAAA;QACA,KAAAO,IAAA,CAAAE,QAAA,GAAA2B,GAAA,CAAA3B,QAAA;QACA,KAAAF,IAAA,CAAAN,KAAA,GAAAmC,GAAA,CAAAnC,KAAA;QACA,KAAAM,IAAA,CAAAG,MAAA,GAAA0B,GAAA,CAAA1B,MAAA;QACA,KAAAH,IAAA,CAAAL,QAAA,GAAAkC,GAAA,CAAAlC,QAAA;MACA;IACA;IACAmC,OAAA;MACA,KAAAX,MAAA,CAAAY,IAAA,MAAAV,QAAA,yBAAArB,IAAA,EAAAsB,IAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAxC,IAAA,EAAAuC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA;YACAnB,OAAA;YACAoB,IAAA;UACA;UACA,KAAA3B,mBAAA;UACA,KAAA4B,QAAA;QACA;UACA,KAAAF,QAAA;YACAnB,OAAA;YACAoB,IAAA;UACA;QACA;MACA;IACA;IACAM,MAAA;MACA,KAAAb,MAAA,CAAAY,IAAA,MAAAV,QAAA,2BAAArB,IAAA,EAAAsB,IAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAxC,IAAA,EAAAuC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA;YACAnB,OAAA;YACAoB,IAAA;UACA;UACA,KAAA3B,mBAAA;UACA,KAAA4B,QAAA;QACA;UACA,KAAAF,QAAA;YACAnB,OAAA;YACAoB,IAAA;UACA;QACA;MACA;IACA;IACAO,KAAA;MACA,KAAAnB,KAAA,CAAAd,IAAA,CAAAkC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,SAAAnC,IAAA,CAAAC,EAAA;YACA,KAAA+B,KAAA;UACA;YACA,KAAAF,MAAA;UACA;QACA;UACAM,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAC,WAAA;MACA,KAAA7C,WAAA;MACA,KAAAC,KAAA;MACA,KAAAC,QAAA;MACA,KAAAgC,QAAA;IACA;IACAA,SAAA;MACA,KAAAR,MAAA,CAAAY,IAAA,MAAAV,QAAA;QACA9B,OAAA,OAAAA,OAAA;QACAD,QAAA,OAAAA,QAAA;QACAiD,KAAA;UACA9C,WAAA,OAAAA,WAAA;UACAC,KAAA,OAAAA,KAAA;UACAC,QAAA,OAAAA;QACA;MACA,GAAA2B,IAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAxC,IAAA,EAAAuC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAnC,SAAA,GAAAkC,GAAA,CAAAxC,IAAA;UACA,KAAAS,KAAA,GAAA+B,GAAA,CAAA/B,KAAA;QACA;UACA,KAAAiC,QAAA,CAAAe,KAAA;QACA;MACA;IACA;IACAC,iBAAAC,GAAA;MACA,KAAAnD,OAAA;MACA,KAAAD,QAAA,GAAAoD,GAAA;MACA,KAAAf,QAAA;IACA;IACAgB,oBAAAD,GAAA;MACA,KAAAnD,OAAA,GAAAmD,GAAA;MACA,KAAAf,QAAA;IACA;EACA;EACAiB,YAAA;IACA,KAAAjB,QAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}