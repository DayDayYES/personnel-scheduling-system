{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SymbolDraw from '../helper/SymbolDraw.js';\nimport LineDraw from '../helper/LineDraw.js';\nimport RoamController from '../../component/helper/RoamController.js';\nimport { updateViewOnZoom, updateViewOnPan } from '../../component/helper/roamHelper.js';\nimport * as graphic from '../../util/graphic.js';\nimport adjustEdge from './adjustEdge.js';\nimport { getNodeGlobalScale } from './graphHelper.js';\nimport ChartView from '../../view/Chart.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { simpleLayoutEdge } from './simpleLayoutHelper.js';\nimport { circularLayout, rotateNodeLabel } from './circularLayoutHelper.js';\nimport { clone, extend } from 'zrender/lib/core/util.js';\nimport ECLinePath from '../helper/LinePath.js';\nimport { getThumbnailBridge } from '../../component/helper/thumbnailBridge.js';\nfunction isViewCoordSys(coordSys) {\n  return coordSys.type === 'view';\n}\nvar GraphView = /** @class */function (_super) {\n  __extends(GraphView, _super);\n  function GraphView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = GraphView.type;\n    return _this;\n  }\n  GraphView.prototype.init = function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    var mainGroup = new graphic.Group();\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: mainGroup\n    };\n    mainGroup.add(symbolDraw.group);\n    mainGroup.add(lineDraw.group);\n    group.add(mainGroup);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._mainGroup = mainGroup;\n    this._firstRender = true;\n  };\n  GraphView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n    var coordSys = seriesModel.coordinateSystem;\n    var isForceLayout = false;\n    this._model = seriesModel;\n    this._api = api;\n    this._active = true;\n    var thumbnailInfo = this._getThumbnailInfo();\n    if (thumbnailInfo) {\n      thumbnailInfo.bridge.reset(api);\n    }\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    if (isViewCoordSys(coordSys)) {\n      var groupNewProp = {\n        x: coordSys.x,\n        y: coordSys.y,\n        scaleX: coordSys.scaleX,\n        scaleY: coordSys.scaleY\n      };\n      if (this._firstRender) {\n        this._mainGroup.attr(groupNewProp);\n      } else {\n        graphic.updateProps(this._mainGroup, groupNewProp, seriesModel);\n      }\n    }\n    // Fix edge contact point with node\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    // TODO: TYPE\n    lineDraw.updateData(edgeData);\n    this._updateNodeAndLinkScale();\n    this._updateController(null, seriesModel, api);\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get(['force', 'layoutAnimation']);\n    if (forceLayout) {\n      isForceLayout = true;\n      this._startForceLayoutIteration(forceLayout, api, layoutAnimation);\n    }\n    var layout = seriesModel.get('layout');\n    data.graph.eachNode(function (node) {\n      var idx = node.dataIndex;\n      var el = node.getGraphicEl();\n      var itemModel = node.getModel();\n      if (!el) {\n        return;\n      }\n      // Update draggable\n      el.off('drag').off('dragend');\n      var draggable = itemModel.get('draggable');\n      if (draggable) {\n        el.on('drag', function (e) {\n          switch (layout) {\n            case 'force':\n              forceLayout.warmUp();\n              !_this._layouting && _this._startForceLayoutIteration(forceLayout, api, layoutAnimation);\n              forceLayout.setFixed(idx);\n              // Write position back to layout\n              data.setItemLayout(idx, [el.x, el.y]);\n              break;\n            case 'circular':\n              data.setItemLayout(idx, [el.x, el.y]);\n              // mark node fixed\n              node.setLayout({\n                fixed: true\n              }, true);\n              // recalculate circular layout\n              circularLayout(seriesModel, 'symbolSize', node, [e.offsetX, e.offsetY]);\n              _this.updateLayout(seriesModel);\n              break;\n            case 'none':\n            default:\n              data.setItemLayout(idx, [el.x, el.y]);\n              // update edge\n              simpleLayoutEdge(seriesModel.getGraph(), seriesModel);\n              _this.updateLayout(seriesModel);\n              break;\n          }\n        }).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        });\n      }\n      el.setDraggable(draggable, !!itemModel.get('cursor'));\n      var focus = itemModel.get(['emphasis', 'focus']);\n      if (focus === 'adjacency') {\n        getECData(el).focus = node.getAdjacentDataIndices();\n      }\n    });\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      var focus = edge.getModel().get(['emphasis', 'focus']);\n      if (!el) {\n        return;\n      }\n      if (focus === 'adjacency') {\n        getECData(el).focus = {\n          edge: [edge.dataIndex],\n          node: [edge.node1.dataIndex, edge.node2.dataIndex]\n        };\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get(['circular', 'rotateLabel']);\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.graph.eachNode(function (node) {\n      rotateNodeLabel(node, circularRotateLabel, cx, cy);\n    });\n    this._firstRender = false;\n    // Force layout will render thumbnail when layout is finished.\n    if (!isForceLayout) {\n      this._renderThumbnail(seriesModel, api, this._symbolDraw, this._lineDraw);\n    }\n  };\n  GraphView.prototype.dispose = function () {\n    this.remove();\n    this._controller && this._controller.dispose();\n    this._controllerHost = null;\n  };\n  GraphView.prototype._startForceLayoutIteration = function (forceLayout, api, layoutAnimation) {\n    var self = this;\n    var firstRendered = false;\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        if (stopped || !firstRendered) {\n          firstRendered = true;\n          self._renderThumbnail(self._model, api, self._symbolDraw, self._lineDraw);\n        }\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  };\n  GraphView.prototype._updateController = function (clipRect, seriesModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var coordSys = seriesModel.coordinateSystem;\n    if (!isViewCoordSys(coordSys)) {\n      controller.disable();\n      return;\n    }\n    controller.enable(seriesModel.get('roam'), {\n      api: api,\n      zInfo: {\n        component: seriesModel\n      },\n      triggerInfo: {\n        roamTrigger: seriesModel.get('roamTrigger'),\n        isInSelf: function (e, x, y) {\n          return coordSys.containPoint([x, y]);\n        },\n        isInClip: function (e, x, y) {\n          return !clipRect || clipRect.contain(x, y);\n        }\n      }\n    });\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = coordSys.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }).on('zoom', function (e) {\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n    });\n  };\n  /**\n   * A performance shortcut - called by action handler to update the view directly\n   * without any data/visual processing (which are assumed to be unchanged), while\n   * ensuring consistent behavior between internal and external action triggers.\n   */\n  GraphView.prototype.updateViewOnPan = function (seriesModel, api, params) {\n    if (!this._active) {\n      return;\n    }\n    updateViewOnPan(this._controllerHost, params.dx, params.dy);\n    this._updateThumbnailWindow();\n  };\n  /**\n   * A performance shortcut - called by action handler to update the view directly\n   * without any data/visual processing (which are assumed to be unchanged), while\n   * ensuring consistent behavior between internal and external action triggers.\n   */\n  GraphView.prototype.updateViewOnZoom = function (seriesModel, api, params) {\n    if (!this._active) {\n      return;\n    }\n    updateViewOnZoom(this._controllerHost, params.zoom, params.originX, params.originY);\n    this._updateNodeAndLinkScale();\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n    this._lineDraw.updateLayout();\n    // Only update label layout on zoom\n    api.updateLabelLayout();\n    this._updateThumbnailWindow();\n  };\n  GraphView.prototype._updateNodeAndLinkScale = function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n    var nodeScale = getNodeGlobalScale(seriesModel);\n    data.eachItemGraphicEl(function (el, idx) {\n      el && el.setSymbolScale(nodeScale);\n    });\n  };\n  GraphView.prototype.updateLayout = function (seriesModel) {\n    if (!this._active) {\n      return;\n    }\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n    this._symbolDraw.updateLayout();\n    this._lineDraw.updateLayout();\n  };\n  GraphView.prototype.remove = function () {\n    this._active = false;\n    clearTimeout(this._layoutTimeout);\n    this._layouting = false;\n    this._layoutTimeout = null;\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n    this._controller && this._controller.disable();\n  };\n  /**\n   * Get thumbnail data structure only if supported.\n   */\n  GraphView.prototype._getThumbnailInfo = function () {\n    var model = this._model;\n    var coordSys = model.coordinateSystem;\n    if (coordSys.type !== 'view') {\n      return;\n    }\n    var bridge = getThumbnailBridge(model);\n    if (!bridge) {\n      return;\n    }\n    return {\n      bridge: bridge,\n      coordSys: coordSys\n    };\n  };\n  GraphView.prototype._updateThumbnailWindow = function () {\n    var info = this._getThumbnailInfo();\n    if (info) {\n      info.bridge.updateWindow(info.coordSys.transform, this._api);\n    }\n  };\n  GraphView.prototype._renderThumbnail = function (seriesModel, api, symbolDraw, lineDraw) {\n    var info = this._getThumbnailInfo();\n    if (!info) {\n      return;\n    }\n    var bridgeGroup = new graphic.Group();\n    var symbolNodes = symbolDraw.group.children();\n    var lineNodes = lineDraw.group.children();\n    var lineGroup = new graphic.Group();\n    var symbolGroup = new graphic.Group();\n    bridgeGroup.add(symbolGroup);\n    bridgeGroup.add(lineGroup);\n    // TODO: reuse elemenents for performance in large graph?\n    for (var i = 0; i < symbolNodes.length; i++) {\n      var node = symbolNodes[i];\n      var sub = node.children()[0];\n      var x = node.x;\n      var y = node.y;\n      var subShape = clone(sub.shape);\n      var shape = extend(subShape, {\n        width: sub.scaleX,\n        height: sub.scaleY,\n        x: x - sub.scaleX / 2,\n        y: y - sub.scaleY / 2\n      });\n      var style = clone(sub.style);\n      var subThumbnail = new sub.constructor({\n        shape: shape,\n        style: style,\n        z2: 151\n      });\n      symbolGroup.add(subThumbnail);\n    }\n    for (var i = 0; i < lineNodes.length; i++) {\n      var node = lineNodes[i];\n      var line = node.children()[0];\n      var style = clone(line.style);\n      var shape = clone(line.shape);\n      var lineThumbnail = new ECLinePath({\n        style: style,\n        shape: shape,\n        z2: 151\n      });\n      lineGroup.add(lineThumbnail);\n    }\n    info.bridge.renderContent({\n      api: api,\n      roamType: seriesModel.get('roam'),\n      viewportRect: null,\n      group: bridgeGroup,\n      targetTrans: info.coordSys.transform\n    });\n  };\n  GraphView.type = 'graph';\n  return GraphView;\n}(ChartView);\nexport default GraphView;","map":{"version":3,"names":["__extends","SymbolDraw","LineDraw","RoamController","updateViewOnZoom","updateViewOnPan","graphic","adjustEdge","getNodeGlobalScale","ChartView","getECData","simpleLayoutEdge","circularLayout","rotateNodeLabel","clone","extend","ECLinePath","getThumbnailBridge","isViewCoordSys","coordSys","type","GraphView","_super","_this","apply","arguments","prototype","init","ecModel","api","symbolDraw","lineDraw","group","mainGroup","Group","_controller","getZr","_controllerHost","target","add","_symbolDraw","_lineDraw","_mainGroup","_firstRender","render","seriesModel","coordinateSystem","isForceLayout","_model","_api","_active","thumbnailInfo","_getThumbnailInfo","bridge","reset","groupNewProp","x","y","scaleX","scaleY","attr","updateProps","getGraph","data","getData","updateData","edgeData","getEdgeData","_updateNodeAndLinkScale","_updateController","clearTimeout","_layoutTimeout","forceLayout","layoutAnimation","get","_startForceLayoutIteration","layout","graph","eachNode","node","idx","dataIndex","el","getGraphicEl","itemModel","getModel","off","draggable","on","e","warmUp","_layouting","setFixed","setItemLayout","setLayout","fixed","offsetX","offsetY","updateLayout","setUnfixed","setDraggable","focus","getAdjacentDataIndices","eachEdge","edge","node1","node2","circularRotateLabel","cx","getLayout","cy","_renderThumbnail","dispose","remove","self","firstRendered","step","stopped","setTimeout","clipRect","controller","controllerHost","disable","enable","zInfo","component","triggerInfo","roamTrigger","isInSelf","containPoint","isInClip","contain","zoomLimit","zoom","getZoom","dispatchAction","seriesId","id","dx","dy","scale","originX","originY","params","_updateThumbnailWindow","updateLabelLayout","nodeScale","eachItemGraphicEl","setSymbolScale","model","info","updateWindow","transform","bridgeGroup","symbolNodes","children","lineNodes","lineGroup","symbolGroup","i","length","sub","subShape","shape","width","height","style","subThumbnail","constructor","z2","line","lineThumbnail","renderContent","roamType","viewportRect","targetTrans"],"sources":["D:/Program Files/JetBrains/IDEAProject/springboot-vue-wms_test/vuedemo2/node_modules/echarts/lib/chart/graph/GraphView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SymbolDraw from '../helper/SymbolDraw.js';\nimport LineDraw from '../helper/LineDraw.js';\nimport RoamController from '../../component/helper/RoamController.js';\nimport { updateViewOnZoom, updateViewOnPan } from '../../component/helper/roamHelper.js';\nimport * as graphic from '../../util/graphic.js';\nimport adjustEdge from './adjustEdge.js';\nimport { getNodeGlobalScale } from './graphHelper.js';\nimport ChartView from '../../view/Chart.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { simpleLayoutEdge } from './simpleLayoutHelper.js';\nimport { circularLayout, rotateNodeLabel } from './circularLayoutHelper.js';\nimport { clone, extend } from 'zrender/lib/core/util.js';\nimport ECLinePath from '../helper/LinePath.js';\nimport { getThumbnailBridge } from '../../component/helper/thumbnailBridge.js';\nfunction isViewCoordSys(coordSys) {\n  return coordSys.type === 'view';\n}\nvar GraphView = /** @class */function (_super) {\n  __extends(GraphView, _super);\n  function GraphView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = GraphView.type;\n    return _this;\n  }\n  GraphView.prototype.init = function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    var mainGroup = new graphic.Group();\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: mainGroup\n    };\n    mainGroup.add(symbolDraw.group);\n    mainGroup.add(lineDraw.group);\n    group.add(mainGroup);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._mainGroup = mainGroup;\n    this._firstRender = true;\n  };\n  GraphView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n    var coordSys = seriesModel.coordinateSystem;\n    var isForceLayout = false;\n    this._model = seriesModel;\n    this._api = api;\n    this._active = true;\n    var thumbnailInfo = this._getThumbnailInfo();\n    if (thumbnailInfo) {\n      thumbnailInfo.bridge.reset(api);\n    }\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    if (isViewCoordSys(coordSys)) {\n      var groupNewProp = {\n        x: coordSys.x,\n        y: coordSys.y,\n        scaleX: coordSys.scaleX,\n        scaleY: coordSys.scaleY\n      };\n      if (this._firstRender) {\n        this._mainGroup.attr(groupNewProp);\n      } else {\n        graphic.updateProps(this._mainGroup, groupNewProp, seriesModel);\n      }\n    }\n    // Fix edge contact point with node\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    // TODO: TYPE\n    lineDraw.updateData(edgeData);\n    this._updateNodeAndLinkScale();\n    this._updateController(null, seriesModel, api);\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get(['force', 'layoutAnimation']);\n    if (forceLayout) {\n      isForceLayout = true;\n      this._startForceLayoutIteration(forceLayout, api, layoutAnimation);\n    }\n    var layout = seriesModel.get('layout');\n    data.graph.eachNode(function (node) {\n      var idx = node.dataIndex;\n      var el = node.getGraphicEl();\n      var itemModel = node.getModel();\n      if (!el) {\n        return;\n      }\n      // Update draggable\n      el.off('drag').off('dragend');\n      var draggable = itemModel.get('draggable');\n      if (draggable) {\n        el.on('drag', function (e) {\n          switch (layout) {\n            case 'force':\n              forceLayout.warmUp();\n              !_this._layouting && _this._startForceLayoutIteration(forceLayout, api, layoutAnimation);\n              forceLayout.setFixed(idx);\n              // Write position back to layout\n              data.setItemLayout(idx, [el.x, el.y]);\n              break;\n            case 'circular':\n              data.setItemLayout(idx, [el.x, el.y]);\n              // mark node fixed\n              node.setLayout({\n                fixed: true\n              }, true);\n              // recalculate circular layout\n              circularLayout(seriesModel, 'symbolSize', node, [e.offsetX, e.offsetY]);\n              _this.updateLayout(seriesModel);\n              break;\n            case 'none':\n            default:\n              data.setItemLayout(idx, [el.x, el.y]);\n              // update edge\n              simpleLayoutEdge(seriesModel.getGraph(), seriesModel);\n              _this.updateLayout(seriesModel);\n              break;\n          }\n        }).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        });\n      }\n      el.setDraggable(draggable, !!itemModel.get('cursor'));\n      var focus = itemModel.get(['emphasis', 'focus']);\n      if (focus === 'adjacency') {\n        getECData(el).focus = node.getAdjacentDataIndices();\n      }\n    });\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      var focus = edge.getModel().get(['emphasis', 'focus']);\n      if (!el) {\n        return;\n      }\n      if (focus === 'adjacency') {\n        getECData(el).focus = {\n          edge: [edge.dataIndex],\n          node: [edge.node1.dataIndex, edge.node2.dataIndex]\n        };\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get(['circular', 'rotateLabel']);\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.graph.eachNode(function (node) {\n      rotateNodeLabel(node, circularRotateLabel, cx, cy);\n    });\n    this._firstRender = false;\n    // Force layout will render thumbnail when layout is finished.\n    if (!isForceLayout) {\n      this._renderThumbnail(seriesModel, api, this._symbolDraw, this._lineDraw);\n    }\n  };\n  GraphView.prototype.dispose = function () {\n    this.remove();\n    this._controller && this._controller.dispose();\n    this._controllerHost = null;\n  };\n  GraphView.prototype._startForceLayoutIteration = function (forceLayout, api, layoutAnimation) {\n    var self = this;\n    var firstRendered = false;\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        if (stopped || !firstRendered) {\n          firstRendered = true;\n          self._renderThumbnail(self._model, api, self._symbolDraw, self._lineDraw);\n        }\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  };\n  GraphView.prototype._updateController = function (clipRect, seriesModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var coordSys = seriesModel.coordinateSystem;\n    if (!isViewCoordSys(coordSys)) {\n      controller.disable();\n      return;\n    }\n    controller.enable(seriesModel.get('roam'), {\n      api: api,\n      zInfo: {\n        component: seriesModel\n      },\n      triggerInfo: {\n        roamTrigger: seriesModel.get('roamTrigger'),\n        isInSelf: function (e, x, y) {\n          return coordSys.containPoint([x, y]);\n        },\n        isInClip: function (e, x, y) {\n          return !clipRect || clipRect.contain(x, y);\n        }\n      }\n    });\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = coordSys.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }).on('zoom', function (e) {\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n    });\n  };\n  /**\n   * A performance shortcut - called by action handler to update the view directly\n   * without any data/visual processing (which are assumed to be unchanged), while\n   * ensuring consistent behavior between internal and external action triggers.\n   */\n  GraphView.prototype.updateViewOnPan = function (seriesModel, api, params) {\n    if (!this._active) {\n      return;\n    }\n    updateViewOnPan(this._controllerHost, params.dx, params.dy);\n    this._updateThumbnailWindow();\n  };\n  /**\n   * A performance shortcut - called by action handler to update the view directly\n   * without any data/visual processing (which are assumed to be unchanged), while\n   * ensuring consistent behavior between internal and external action triggers.\n   */\n  GraphView.prototype.updateViewOnZoom = function (seriesModel, api, params) {\n    if (!this._active) {\n      return;\n    }\n    updateViewOnZoom(this._controllerHost, params.zoom, params.originX, params.originY);\n    this._updateNodeAndLinkScale();\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n    this._lineDraw.updateLayout();\n    // Only update label layout on zoom\n    api.updateLabelLayout();\n    this._updateThumbnailWindow();\n  };\n  GraphView.prototype._updateNodeAndLinkScale = function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n    var nodeScale = getNodeGlobalScale(seriesModel);\n    data.eachItemGraphicEl(function (el, idx) {\n      el && el.setSymbolScale(nodeScale);\n    });\n  };\n  GraphView.prototype.updateLayout = function (seriesModel) {\n    if (!this._active) {\n      return;\n    }\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n    this._symbolDraw.updateLayout();\n    this._lineDraw.updateLayout();\n  };\n  GraphView.prototype.remove = function () {\n    this._active = false;\n    clearTimeout(this._layoutTimeout);\n    this._layouting = false;\n    this._layoutTimeout = null;\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n    this._controller && this._controller.disable();\n  };\n  /**\n   * Get thumbnail data structure only if supported.\n   */\n  GraphView.prototype._getThumbnailInfo = function () {\n    var model = this._model;\n    var coordSys = model.coordinateSystem;\n    if (coordSys.type !== 'view') {\n      return;\n    }\n    var bridge = getThumbnailBridge(model);\n    if (!bridge) {\n      return;\n    }\n    return {\n      bridge: bridge,\n      coordSys: coordSys\n    };\n  };\n  GraphView.prototype._updateThumbnailWindow = function () {\n    var info = this._getThumbnailInfo();\n    if (info) {\n      info.bridge.updateWindow(info.coordSys.transform, this._api);\n    }\n  };\n  GraphView.prototype._renderThumbnail = function (seriesModel, api, symbolDraw, lineDraw) {\n    var info = this._getThumbnailInfo();\n    if (!info) {\n      return;\n    }\n    var bridgeGroup = new graphic.Group();\n    var symbolNodes = symbolDraw.group.children();\n    var lineNodes = lineDraw.group.children();\n    var lineGroup = new graphic.Group();\n    var symbolGroup = new graphic.Group();\n    bridgeGroup.add(symbolGroup);\n    bridgeGroup.add(lineGroup);\n    // TODO: reuse elemenents for performance in large graph?\n    for (var i = 0; i < symbolNodes.length; i++) {\n      var node = symbolNodes[i];\n      var sub = node.children()[0];\n      var x = node.x;\n      var y = node.y;\n      var subShape = clone(sub.shape);\n      var shape = extend(subShape, {\n        width: sub.scaleX,\n        height: sub.scaleY,\n        x: x - sub.scaleX / 2,\n        y: y - sub.scaleY / 2\n      });\n      var style = clone(sub.style);\n      var subThumbnail = new sub.constructor({\n        shape: shape,\n        style: style,\n        z2: 151\n      });\n      symbolGroup.add(subThumbnail);\n    }\n    for (var i = 0; i < lineNodes.length; i++) {\n      var node = lineNodes[i];\n      var line = node.children()[0];\n      var style = clone(line.style);\n      var shape = clone(line.shape);\n      var lineThumbnail = new ECLinePath({\n        style: style,\n        shape: shape,\n        z2: 151\n      });\n      lineGroup.add(lineThumbnail);\n    }\n    info.bridge.renderContent({\n      api: api,\n      roamType: seriesModel.get('roam'),\n      viewportRect: null,\n      group: bridgeGroup,\n      targetTrans: info.coordSys.transform\n    });\n  };\n  GraphView.type = 'graph';\n  return GraphView;\n}(ChartView);\nexport default GraphView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}