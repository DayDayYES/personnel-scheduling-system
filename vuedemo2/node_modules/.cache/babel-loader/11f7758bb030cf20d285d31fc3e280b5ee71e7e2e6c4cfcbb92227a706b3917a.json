{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport gantt from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nexport default {\n  name: 'GanttTest',\n  data() {\n    return {\n      viewMode: 'workpoint',\n      // workpoint | team | process\n      makespan: 75.5,\n      taskCount: 0,\n      // 模拟调度数据（与真实数据格式一致）\n      testScheduleData: [\n      // 设备1的任务\n      {\n        id: 1,\n        name: '1-搭架子',\n        workpoint_id: 'workpoint_1',\n        workpoint_name: '设备1',\n        team: 'team1',\n        start: 0,\n        end: 10,\n        workers: 5,\n        order: 1\n      }, {\n        id: 2,\n        name: '1-拆保温',\n        workpoint_id: 'workpoint_1',\n        workpoint_name: '设备1',\n        team: 'team2',\n        start: 10,\n        end: 15,\n        workers: 8,\n        order: 2\n      }, {\n        id: 3,\n        name: '1-打磨',\n        workpoint_id: 'workpoint_1',\n        workpoint_name: '设备1',\n        team: 'team2',\n        start: 15,\n        end: 23,\n        workers: 10,\n        order: 3\n      }, {\n        id: 4,\n        name: '1-宏观检验',\n        workpoint_id: 'workpoint_1',\n        workpoint_name: '设备1',\n        team: 'team3',\n        start: 23,\n        end: 29,\n        workers: 6,\n        order: 4\n      }, {\n        id: 5,\n        name: '1-壁厚测定',\n        workpoint_id: 'workpoint_1',\n        workpoint_name: '设备1',\n        team: 'team3',\n        start: 23,\n        end: 30,\n        workers: 4,\n        order: 4\n      },\n      // 并行\n      {\n        id: 6,\n        name: '1-射线检测',\n        workpoint_id: 'workpoint_1',\n        workpoint_name: '设备1',\n        team: 'team4',\n        start: 23,\n        end: 32,\n        workers: 5,\n        order: 4\n      },\n      // 并行\n      {\n        id: 7,\n        name: '1-检验结果评定',\n        workpoint_id: 'workpoint_1',\n        workpoint_name: '设备1',\n        team: 'team3',\n        start: 32,\n        end: 36,\n        workers: 10,\n        order: 5\n      }, {\n        id: 8,\n        name: '1-合格报告出具',\n        workpoint_id: 'workpoint_1',\n        workpoint_name: '设备1',\n        team: 'team3',\n        start: 36,\n        end: 41,\n        workers: 10,\n        order: 7\n      },\n      // 设备2的任务\n      {\n        id: 9,\n        name: '2-搭架子',\n        workpoint_id: 'workpoint_2',\n        workpoint_name: '设备2',\n        team: 'team1',\n        start: 10,\n        end: 22,\n        workers: 5,\n        order: 1\n      }, {\n        id: 10,\n        name: '2-拆保温',\n        workpoint_id: 'workpoint_2',\n        workpoint_name: '设备2',\n        team: 'team2',\n        start: 23,\n        end: 29,\n        workers: 10,\n        order: 2\n      }, {\n        id: 11,\n        name: '2-打磨',\n        workpoint_id: 'workpoint_2',\n        workpoint_name: '设备2',\n        team: 'team2',\n        start: 29,\n        end: 36,\n        workers: 10,\n        order: 3\n      }, {\n        id: 12,\n        name: '2-表面检测',\n        workpoint_id: 'workpoint_2',\n        workpoint_name: '设备2',\n        team: 'team5',\n        start: 36,\n        end: 44,\n        workers: 8,\n        order: 4\n      }, {\n        id: 13,\n        name: '2-超声检测',\n        workpoint_id: 'workpoint_2',\n        workpoint_name: '设备2',\n        team: 'team5',\n        start: 36,\n        end: 45,\n        workers: 7,\n        order: 4\n      },\n      // 并行\n      {\n        id: 14,\n        name: '2-检验结果评定',\n        workpoint_id: 'workpoint_2',\n        workpoint_name: '设备2',\n        team: 'team3',\n        start: 45,\n        end: 50,\n        workers: 10,\n        order: 5\n      }, {\n        id: 15,\n        name: '2-返修',\n        workpoint_id: 'workpoint_2',\n        workpoint_name: '设备2',\n        team: 'team6',\n        start: 50,\n        end: 58,\n        workers: 5,\n        order: 6\n      }, {\n        id: 16,\n        name: '2-合格报告出具',\n        workpoint_id: 'workpoint_2',\n        workpoint_name: '设备2',\n        team: 'team3',\n        start: 58,\n        end: 62,\n        workers: 10,\n        order: 7\n      },\n      // 设备3的任务\n      {\n        id: 17,\n        name: '3-搭架子',\n        workpoint_id: 'workpoint_3',\n        workpoint_name: '设备3',\n        team: 'team1',\n        start: 22,\n        end: 32,\n        workers: 5,\n        order: 1\n      }, {\n        id: 18,\n        name: '3-拆保温',\n        workpoint_id: 'workpoint_3',\n        workpoint_name: '设备3',\n        team: 'team2',\n        start: 36,\n        end: 41,\n        workers: 10,\n        order: 2\n      }, {\n        id: 19,\n        name: '3-打磨',\n        workpoint_id: 'workpoint_3',\n        workpoint_name: '设备3',\n        team: 'team2',\n        start: 45,\n        end: 53,\n        workers: 10,\n        order: 3\n      }, {\n        id: 20,\n        name: '3-宏观检验',\n        workpoint_id: 'workpoint_3',\n        workpoint_name: '设备3',\n        team: 'team3',\n        start: 62,\n        end: 68,\n        workers: 6,\n        order: 4\n      }, {\n        id: 21,\n        name: '3-壁厚测定',\n        workpoint_id: 'workpoint_3',\n        workpoint_name: '设备3',\n        team: 'team3',\n        start: 62,\n        end: 69,\n        workers: 4,\n        order: 4\n      },\n      // 并行\n      {\n        id: 22,\n        name: '3-射线检测',\n        workpoint_id: 'workpoint_3',\n        workpoint_name: '设备3',\n        team: 'team4',\n        start: 68,\n        end: 77,\n        workers: 5,\n        order: 4\n      }, {\n        id: 23,\n        name: '3-检验结果评定',\n        workpoint_id: 'workpoint_3',\n        workpoint_name: '设备3',\n        team: 'team3',\n        start: 68,\n        end: 72,\n        workers: 10,\n        order: 5\n      },\n      // 并行\n      {\n        id: 24,\n        name: '3-合格报告出具',\n        workpoint_id: 'workpoint_3',\n        workpoint_name: '设备3',\n        team: 'team3',\n        start: 72,\n        end: 77,\n        workers: 10,\n        order: 7\n      }],\n      // 团队颜色映射\n      teamColors: {\n        'team1': '#FF6B6B',\n        'team2': '#4ECDC4',\n        'team3': '#45B7D1',\n        'team4': '#FFA07A',\n        'team5': '#98D8C8',\n        'team6': '#F7DC6F'\n      },\n      // 团队名称\n      teamNames: {\n        'team1': '团队1',\n        'team2': '团队2',\n        'team3': '团队3',\n        'team4': '团队4',\n        'team5': '团队5',\n        'team6': '团队6'\n      }\n    };\n  },\n  mounted() {\n    this.taskCount = this.testScheduleData.length;\n    this.initGantt();\n    this.loadData();\n  },\n  beforeDestroy() {\n    if (gantt.$initialized) {\n      gantt.clearAll();\n    }\n  },\n  methods: {\n    /**\n     * 初始化DHTMLX Gantt\n     */\n    initGantt() {\n      // 基础配置\n      gantt.config.date_format = '%Y-%m-%d %H:%i';\n      gantt.config.xml_date = '%Y-%m-%d %H:%i';\n      gantt.config.scale_unit = 'day';\n      gantt.config.date_scale = '%Y-%m-%d';\n      gantt.config.subscales = [{\n        unit: 'hour',\n        step: 12,\n        date: '%H:%i'\n      }];\n\n      // 列配置\n      gantt.config.columns = [{\n        name: 'text',\n        label: '任务名称',\n        width: 200,\n        tree: true\n      }, {\n        name: 'start_date',\n        label: '开始时间',\n        width: 100,\n        align: 'center'\n      }, {\n        name: 'duration',\n        label: '持续时间',\n        width: 80,\n        align: 'center'\n      }];\n\n      // 工具提示配置\n      gantt.config.tooltip_hide_timeout = 1000;\n      gantt.templates.tooltip_text = (start, end, task) => {\n        if (task.type === 'project') return '';\n        const duration = ((task.end_date - task.start_date) / (1000 * 60 * 60)).toFixed(1);\n        return `\n          <div style=\"padding: 10px; min-width: 200px;\">\n            <strong style=\"font-size: 14px;\">${task.text}</strong><br/>\n            <hr style=\"margin: 5px 0; border: none; border-top: 1px solid #ddd;\"/>\n            <div style=\"margin: 5px 0;\">\n              <span style=\"color: #666;\">开始时间：</span>\n              <strong>${this.formatDate(task.start_date)}</strong>\n            </div>\n            <div style=\"margin: 5px 0;\">\n              <span style=\"color: #666;\">结束时间：</span>\n              <strong>${this.formatDate(task.end_date)}</strong>\n            </div>\n            <div style=\"margin: 5px 0;\">\n              <span style=\"color: #666;\">持续时间：</span>\n              <strong>${duration}小时</strong>\n            </div>\n            <div style=\"margin: 5px 0;\">\n              <span style=\"color: #666;\">团队：</span>\n              <strong>${task.teamName || ''}</strong>\n            </div>\n            <div style=\"margin: 5px 0;\">\n              <span style=\"color: #666;\">工人数：</span>\n              <strong>${task.workers || 0}人</strong>\n            </div>\n          </div>\n        `;\n      };\n\n      // 任务颜色配置\n      gantt.templates.task_class = (start, end, task) => {\n        if (task.type === 'project') return 'gantt_project';\n        return `gantt_task_${task.team}`;\n      };\n\n      // 初始化\n      gantt.init(this.$refs.ganttContainer);\n      console.log('✅ DHTMLX Gantt 初始化完成');\n    },\n    /**\n     * 加载数据\n     */\n    loadData() {\n      let ganttData;\n      switch (this.viewMode) {\n        case 'workpoint':\n          ganttData = this.prepareWorkpointView();\n          break;\n        case 'team':\n          ganttData = this.prepareTeamView();\n          break;\n        case 'process':\n          ganttData = this.prepareProcessView();\n          break;\n        default:\n          ganttData = this.prepareWorkpointView();\n      }\n      gantt.clearAll();\n      gantt.parse(ganttData);\n      console.log(`✅ 加载${this.viewMode}视角数据，共${ganttData.data.length}条`);\n    },\n    /**\n     * 时间单位转日期\n     */\n    timeUnitToDate(timeUnit) {\n      const baseDate = new Date('2024-01-01T00:00:00');\n      const hours = timeUnit;\n      baseDate.setHours(baseDate.getHours() + hours);\n      return baseDate;\n    },\n    /**\n     * 格式化日期\n     */\n    formatDate(date) {\n      if (typeof date === 'string') {\n        date = new Date(date);\n      }\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    /**\n     * 检测并行任务（复用之前的逻辑）\n     */\n    detectParallelTasks(tasks) {\n      if (!tasks || tasks.length === 0) return [];\n      const sorted = [...tasks].sort((a, b) => a.start - b.start);\n      const layers = [];\n      const result = [];\n      sorted.forEach(task => {\n        let layerIndex = layers.findIndex(endTime => task.start >= endTime);\n        if (layerIndex === -1) {\n          layerIndex = layers.length;\n          layers.push(task.end);\n        } else {\n          layers[layerIndex] = task.end;\n        }\n        result.push({\n          ...task,\n          layer: layerIndex,\n          totalLayers: 0\n        });\n      });\n      const maxLayer = Math.max(...result.map(t => t.layer));\n      result.forEach(t => t.totalLayers = maxLayer + 1);\n      return result;\n    },\n    /**\n     * 准备设备视角数据\n     */\n    prepareWorkpointView() {\n      const data = [];\n      const links = [];\n\n      // 按设备分组\n      const grouped = {};\n      this.testScheduleData.forEach(task => {\n        const wpId = task.workpoint_id;\n        if (!grouped[wpId]) {\n          grouped[wpId] = [];\n        }\n        grouped[wpId].push(task);\n      });\n\n      // 生成DHTMLX数据\n      Object.keys(grouped).sort().forEach(wpId => {\n        const wpTasks = grouped[wpId];\n        const wpName = wpTasks[0].workpoint_name;\n\n        // 添加父节点（设备）\n        data.push({\n          id: wpId,\n          text: wpName,\n          type: 'project',\n          open: true\n        });\n\n        // 检测并行任务\n        const layered = this.detectParallelTasks(wpTasks);\n\n        // 添加任务\n        layered.forEach(task => {\n          data.push({\n            id: `task_${task.id}`,\n            text: task.name,\n            start_date: this.formatGanttDate(this.timeUnitToDate(task.start)),\n            end_date: this.formatGanttDate(this.timeUnitToDate(task.end)),\n            duration: ((task.end - task.start) / 24).toFixed(1),\n            // 转换为天\n            parent: wpId,\n            team: task.team,\n            teamName: this.teamNames[task.team],\n            workers: task.workers,\n            layer: task.layer,\n            type: 'task'\n          });\n        });\n      });\n      return {\n        data,\n        links\n      };\n    },\n    /**\n     * 准备团队视角数据\n     */\n    prepareTeamView() {\n      const data = [];\n      const links = [];\n\n      // 按团队分组\n      const grouped = {};\n      this.testScheduleData.forEach(task => {\n        const team = task.team;\n        if (!grouped[team]) {\n          grouped[team] = [];\n        }\n        grouped[team].push(task);\n      });\n\n      // 生成DHTMLX数据\n      Object.keys(grouped).sort().forEach(team => {\n        const teamTasks = grouped[team];\n        const teamName = this.teamNames[team];\n\n        // 添加父节点（团队）\n        data.push({\n          id: team,\n          text: teamName,\n          type: 'project',\n          open: true\n        });\n\n        // 检测并行任务\n        const layered = this.detectParallelTasks(teamTasks);\n\n        // 添加任务\n        layered.forEach(task => {\n          data.push({\n            id: `task_${task.id}`,\n            text: task.name,\n            start_date: this.formatGanttDate(this.timeUnitToDate(task.start)),\n            end_date: this.formatGanttDate(this.timeUnitToDate(task.end)),\n            duration: ((task.end - task.start) / 24).toFixed(1),\n            parent: team,\n            team: task.team,\n            teamName: this.teamNames[task.team],\n            workers: task.workers,\n            layer: task.layer,\n            type: 'task'\n          });\n        });\n      });\n      return {\n        data,\n        links\n      };\n    },\n    /**\n     * 准备工序视角数据\n     */\n    prepareProcessView() {\n      const data = [];\n      const links = [];\n\n      // 按开始时间排序\n      const sorted = [...this.testScheduleData].sort((a, b) => a.start - b.start);\n      sorted.forEach(task => {\n        data.push({\n          id: `task_${task.id}`,\n          text: task.name,\n          start_date: this.formatGanttDate(this.timeUnitToDate(task.start)),\n          end_date: this.formatGanttDate(this.timeUnitToDate(task.end)),\n          duration: ((task.end - task.start) / 24).toFixed(1),\n          team: task.team,\n          teamName: this.teamNames[task.team],\n          workers: task.workers,\n          type: 'task'\n        });\n      });\n      return {\n        data,\n        links\n      };\n    },\n    /**\n     * 格式化DHTMLX日期\n     */\n    formatGanttDate(date) {\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      const hour = String(date.getHours()).padStart(2, '0');\n      const minute = String(date.getMinutes()).padStart(2, '0');\n      return `${year}-${month}-${day} ${hour}:${minute}`;\n    },\n    /**\n     * 切换视角\n     */\n    switchView() {\n      this.loadData();\n      this.$message.success(`已切换到${this.getViewName()}视角`);\n    },\n    /**\n     * 获取视角名称\n     */\n    getViewName() {\n      const names = {\n        'workpoint': '设备',\n        'team': '团队',\n        'process': '工序'\n      };\n      return names[this.viewMode] || '未知';\n    },\n    /**\n     * 改变缩放级别\n     */\n    changeZoom(scale) {\n      switch (scale) {\n        case 'day':\n          gantt.config.scale_unit = 'day';\n          gantt.config.date_scale = '%Y-%m-%d';\n          gantt.config.subscales = [{\n            unit: 'hour',\n            step: 6,\n            date: '%H:%i'\n          }];\n          break;\n        case 'week':\n          gantt.config.scale_unit = 'week';\n          gantt.config.date_scale = '第%W周';\n          gantt.config.subscales = [{\n            unit: 'day',\n            step: 1,\n            date: '%d日'\n          }];\n          break;\n        case 'month':\n          gantt.config.scale_unit = 'month';\n          gantt.config.date_scale = '%Y年%m月';\n          gantt.config.subscales = [{\n            unit: 'week',\n            step: 1,\n            date: '第%W周'\n          }];\n          break;\n      }\n      gantt.render();\n      this.$message.success(`已切换到${scale}视图`);\n    }\n  }\n};","map":{"version":3,"names":["gantt","name","data","viewMode","makespan","taskCount","testScheduleData","id","workpoint_id","workpoint_name","team","start","end","workers","order","teamColors","teamNames","mounted","length","initGantt","loadData","beforeDestroy","$initialized","clearAll","methods","config","date_format","xml_date","scale_unit","date_scale","subscales","unit","step","date","columns","label","width","tree","align","tooltip_hide_timeout","templates","tooltip_text","task","type","duration","end_date","start_date","toFixed","text","formatDate","teamName","task_class","init","$refs","ganttContainer","console","log","ganttData","prepareWorkpointView","prepareTeamView","prepareProcessView","parse","timeUnitToDate","timeUnit","baseDate","Date","hours","setHours","getHours","toLocaleString","year","month","day","hour","minute","detectParallelTasks","tasks","sorted","sort","a","b","layers","result","forEach","layerIndex","findIndex","endTime","push","layer","totalLayers","maxLayer","Math","max","map","t","links","grouped","wpId","Object","keys","wpTasks","wpName","open","layered","formatGanttDate","parent","teamTasks","getFullYear","String","getMonth","padStart","getDate","getMinutes","switchView","$message","success","getViewName","names","changeZoom","scale","render"],"sources":["src/components/user/GanttTest.vue"],"sourcesContent":["<template>\n  <div class=\"gantt-test-container\">\n    <!-- 页面头部 -->\n    <div class=\"page-header\">\n      <div class=\"header-content\">\n        <h2 class=\"page-title\">\n          <i class=\"el-icon-date\"></i>\n          DHTMLX Gantt 测试页面\n        </h2>\n        <p class=\"page-subtitle\">测试多设备并行任务甘特图显示效果</p>\n      </div>\n    </div>\n\n    <!-- 工具栏 -->\n    <div class=\"toolbar-section\">\n      <el-card shadow=\"never\">\n        <div class=\"toolbar-content\">\n          <!-- 新增：历史结果选择 -->\n          <div class=\"result-selector\">\n            <label>选择调度结果：</label>\n            <el-select \n              v-model=\"selectedTableName\" \n              @change=\"handleTableChange\"\n              placeholder=\"请选择调度结果\"\n              style=\"width: 400px;\"\n              :loading=\"loading\"\n              size=\"small\">\n              <el-option\n                v-for=\"item in scheduleResultList\"\n                :key=\"item.tableName\"\n                :label=\"`${item.createdTime} | 完工时间: ${item.makespan}h | ${item.taskCount}个任务`\"\n                :value=\"item.tableName\">\n              </el-option>\n            </el-select>\n            <el-button \n              size=\"small\" \n              icon=\"el-icon-refresh\" \n              @click=\"refreshScheduleList\"\n              :loading=\"loading\"\n              style=\"margin-left: 10px;\">\n              刷新\n            </el-button>\n          </div>\n          \n          <div class=\"view-switch\">\n            <label>视角切换：</label>\n            <el-radio-group v-model=\"viewMode\" @change=\"switchView\" size=\"small\">\n              <el-radio-button label=\"workpoint\">设备视角</el-radio-button>\n              <el-radio-button label=\"team\">团队视角</el-radio-button>\n              <el-radio-button label=\"process\">工序视角</el-radio-button>\n            </el-radio-group>\n          </div>\n          \n          <div class=\"zoom-controls\">\n            <label>缩放级别：</label>\n            <el-button-group>\n              <el-button size=\"small\" @click=\"changeZoom('day')\">天</el-button>\n              <el-button size=\"small\" @click=\"changeZoom('week')\">周</el-button>\n              <el-button size=\"small\" @click=\"changeZoom('month')\">月</el-button>\n            </el-button-group>\n          </div>\n\n          <div class=\"info-display\">\n            <el-tag type=\"success\">完工时间: {{ makespan.toFixed(2) }}小时</el-tag>\n            <el-tag type=\"info\">任务数: {{ taskCount }}</el-tag>\n          </div>\n        </div>\n      </el-card>\n    </div>\n\n    <!-- Gantt图表容器 -->\n    <div class=\"gantt-section\">\n      <el-card shadow=\"never\" class=\"gantt-card\">\n        <div ref=\"ganttContainer\" class=\"gantt-container\"></div>\n      </el-card>\n    </div>\n\n    <!-- 说明文档 -->\n    <div class=\"info-section\">\n      <el-card shadow=\"never\">\n        <div slot=\"header\">\n          <span><i class=\"el-icon-info\"></i> 测试数据说明</span>\n        </div>\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"设备数量\">3个（设备1、设备2、设备3）</el-descriptions-item>\n          <el-descriptions-item label=\"任务总数\">{{ taskCount }}个</el-descriptions-item>\n          <el-descriptions-item label=\"团队数量\">6个（架子班组、保温班组等）</el-descriptions-item>\n          <el-descriptions-item label=\"完工时间\">{{ makespan }}小时</el-descriptions-item>\n          <el-descriptions-item label=\"并行任务\">✅ 已包含同时进行的任务</el-descriptions-item>\n          <el-descriptions-item label=\"时间范围\">2024-01-01 至 2024-01-08</el-descriptions-item>\n        </el-descriptions>\n        \n        <div class=\"test-notes\">\n          <h4>🧪 测试要点：</h4>\n          <ul>\n            <li>✅ 查看并行任务是否重叠（设备1有多个同时进行的任务）</li>\n            <li>✅ 测试三种视角切换效果</li>\n            <li>✅ 测试鼠标悬停显示详情</li>\n            <li>✅ 测试时间轴缩放功能</li>\n            <li>✅ 查看不同团队的颜色区分</li>\n          </ul>\n        </div>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport gantt from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\n\nexport default {\n  name: 'GanttTest',\n  data() {\n    return {\n      viewMode: 'workpoint', // workpoint | team | process\n      makespan: 75.5,\n      taskCount: 0,\n      \n      // 模拟调度数据（与真实数据格式一致）\n      testScheduleData: [\n        // 设备1的任务\n        { id: 1, name: '1-搭架子', workpoint_id: 'workpoint_1', workpoint_name: '设备1', team: 'team1', start: 0, end: 10, workers: 5, order: 1 },\n        { id: 2, name: '1-拆保温', workpoint_id: 'workpoint_1', workpoint_name: '设备1', team: 'team2', start: 10, end: 15, workers: 8, order: 2 },\n        { id: 3, name: '1-打磨', workpoint_id: 'workpoint_1', workpoint_name: '设备1', team: 'team2', start: 15, end: 23, workers: 10, order: 3 },\n        { id: 4, name: '1-宏观检验', workpoint_id: 'workpoint_1', workpoint_name: '设备1', team: 'team3', start: 23, end: 29, workers: 6, order: 4 },\n        { id: 5, name: '1-壁厚测定', workpoint_id: 'workpoint_1', workpoint_name: '设备1', team: 'team3', start: 23, end: 30, workers: 4, order: 4 }, // 并行\n        { id: 6, name: '1-射线检测', workpoint_id: 'workpoint_1', workpoint_name: '设备1', team: 'team4', start: 23, end: 32, workers: 5, order: 4 }, // 并行\n        { id: 7, name: '1-检验结果评定', workpoint_id: 'workpoint_1', workpoint_name: '设备1', team: 'team3', start: 32, end: 36, workers: 10, order: 5 },\n        { id: 8, name: '1-合格报告出具', workpoint_id: 'workpoint_1', workpoint_name: '设备1', team: 'team3', start: 36, end: 41, workers: 10, order: 7 },\n        \n        // 设备2的任务\n        { id: 9, name: '2-搭架子', workpoint_id: 'workpoint_2', workpoint_name: '设备2', team: 'team1', start: 10, end: 22, workers: 5, order: 1 },\n        { id: 10, name: '2-拆保温', workpoint_id: 'workpoint_2', workpoint_name: '设备2', team: 'team2', start: 23, end: 29, workers: 10, order: 2 },\n        { id: 11, name: '2-打磨', workpoint_id: 'workpoint_2', workpoint_name: '设备2', team: 'team2', start: 29, end: 36, workers: 10, order: 3 },\n        { id: 12, name: '2-表面检测', workpoint_id: 'workpoint_2', workpoint_name: '设备2', team: 'team5', start: 36, end: 44, workers: 8, order: 4 },\n        { id: 13, name: '2-超声检测', workpoint_id: 'workpoint_2', workpoint_name: '设备2', team: 'team5', start: 36, end: 45, workers: 7, order: 4 }, // 并行\n        { id: 14, name: '2-检验结果评定', workpoint_id: 'workpoint_2', workpoint_name: '设备2', team: 'team3', start: 45, end: 50, workers: 10, order: 5 },\n        { id: 15, name: '2-返修', workpoint_id: 'workpoint_2', workpoint_name: '设备2', team: 'team6', start: 50, end: 58, workers: 5, order: 6 },\n        { id: 16, name: '2-合格报告出具', workpoint_id: 'workpoint_2', workpoint_name: '设备2', team: 'team3', start: 58, end: 62, workers: 10, order: 7 },\n        \n        // 设备3的任务\n        { id: 17, name: '3-搭架子', workpoint_id: 'workpoint_3', workpoint_name: '设备3', team: 'team1', start: 22, end: 32, workers: 5, order: 1 },\n        { id: 18, name: '3-拆保温', workpoint_id: 'workpoint_3', workpoint_name: '设备3', team: 'team2', start: 36, end: 41, workers: 10, order: 2 },\n        { id: 19, name: '3-打磨', workpoint_id: 'workpoint_3', workpoint_name: '设备3', team: 'team2', start: 45, end: 53, workers: 10, order: 3 },\n        { id: 20, name: '3-宏观检验', workpoint_id: 'workpoint_3', workpoint_name: '设备3', team: 'team3', start: 62, end: 68, workers: 6, order: 4 },\n        { id: 21, name: '3-壁厚测定', workpoint_id: 'workpoint_3', workpoint_name: '设备3', team: 'team3', start: 62, end: 69, workers: 4, order: 4 }, // 并行\n        { id: 22, name: '3-射线检测', workpoint_id: 'workpoint_3', workpoint_name: '设备3', team: 'team4', start: 68, end: 77, workers: 5, order: 4 },\n        { id: 23, name: '3-检验结果评定', workpoint_id: 'workpoint_3', workpoint_name: '设备3', team: 'team3', start: 68, end: 72, workers: 10, order: 5 }, // 并行\n        { id: 24, name: '3-合格报告出具', workpoint_id: 'workpoint_3', workpoint_name: '设备3', team: 'team3', start: 72, end: 77, workers: 10, order: 7 }\n      ],\n      \n      // 团队颜色映射\n      teamColors: {\n        'team1': '#FF6B6B',\n        'team2': '#4ECDC4',\n        'team3': '#45B7D1',\n        'team4': '#FFA07A',\n        'team5': '#98D8C8',\n        'team6': '#F7DC6F'\n      },\n      \n      // 团队名称\n      teamNames: {\n        'team1': '团队1',\n        'team2': '团队2',\n        'team3': '团队3',\n        'team4': '团队4',\n        'team5': '团队5',\n        'team6': '团队6'\n      }\n    };\n  },\n  mounted() {\n    this.taskCount = this.testScheduleData.length;\n    this.initGantt();\n    this.loadData();\n  },\n  beforeDestroy() {\n    if (gantt.$initialized) {\n      gantt.clearAll();\n    }\n  },\n  methods: {\n    /**\n     * 初始化DHTMLX Gantt\n     */\n    initGantt() {\n      // 基础配置\n      gantt.config.date_format = '%Y-%m-%d %H:%i';\n      gantt.config.xml_date = '%Y-%m-%d %H:%i';\n      gantt.config.scale_unit = 'day';\n      gantt.config.date_scale = '%Y-%m-%d';\n      gantt.config.subscales = [\n        { unit: 'hour', step: 12, date: '%H:%i' }\n      ];\n      \n      // 列配置\n      gantt.config.columns = [\n        { name: 'text', label: '任务名称', width: 200, tree: true },\n        { name: 'start_date', label: '开始时间', width: 100, align: 'center' },\n        { name: 'duration', label: '持续时间', width: 80, align: 'center' }\n      ];\n      \n      // 工具提示配置\n      gantt.config.tooltip_hide_timeout = 1000;\n      gantt.templates.tooltip_text = (start, end, task) => {\n        if (task.type === 'project') return '';\n        \n        const duration = ((task.end_date - task.start_date) / (1000 * 60 * 60)).toFixed(1);\n        return `\n          <div style=\"padding: 10px; min-width: 200px;\">\n            <strong style=\"font-size: 14px;\">${task.text}</strong><br/>\n            <hr style=\"margin: 5px 0; border: none; border-top: 1px solid #ddd;\"/>\n            <div style=\"margin: 5px 0;\">\n              <span style=\"color: #666;\">开始时间：</span>\n              <strong>${this.formatDate(task.start_date)}</strong>\n            </div>\n            <div style=\"margin: 5px 0;\">\n              <span style=\"color: #666;\">结束时间：</span>\n              <strong>${this.formatDate(task.end_date)}</strong>\n            </div>\n            <div style=\"margin: 5px 0;\">\n              <span style=\"color: #666;\">持续时间：</span>\n              <strong>${duration}小时</strong>\n            </div>\n            <div style=\"margin: 5px 0;\">\n              <span style=\"color: #666;\">团队：</span>\n              <strong>${task.teamName || ''}</strong>\n            </div>\n            <div style=\"margin: 5px 0;\">\n              <span style=\"color: #666;\">工人数：</span>\n              <strong>${task.workers || 0}人</strong>\n            </div>\n          </div>\n        `;\n      };\n      \n      // 任务颜色配置\n      gantt.templates.task_class = (start, end, task) => {\n        if (task.type === 'project') return 'gantt_project';\n        return `gantt_task_${task.team}`;\n      };\n      \n      // 初始化\n      gantt.init(this.$refs.ganttContainer);\n      \n      console.log('✅ DHTMLX Gantt 初始化完成');\n    },\n    \n    /**\n     * 加载数据\n     */\n    loadData() {\n      let ganttData;\n      \n      switch (this.viewMode) {\n        case 'workpoint':\n          ganttData = this.prepareWorkpointView();\n          break;\n        case 'team':\n          ganttData = this.prepareTeamView();\n          break;\n        case 'process':\n          ganttData = this.prepareProcessView();\n          break;\n        default:\n          ganttData = this.prepareWorkpointView();\n      }\n      \n      gantt.clearAll();\n      gantt.parse(ganttData);\n      \n      console.log(`✅ 加载${this.viewMode}视角数据，共${ganttData.data.length}条`);\n    },\n    \n    /**\n     * 时间单位转日期\n     */\n    timeUnitToDate(timeUnit) {\n      const baseDate = new Date('2024-01-01T00:00:00');\n      const hours = timeUnit;\n      baseDate.setHours(baseDate.getHours() + hours);\n      return baseDate;\n    },\n    \n    /**\n     * 格式化日期\n     */\n    formatDate(date) {\n      if (typeof date === 'string') {\n        date = new Date(date);\n      }\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    \n    /**\n     * 检测并行任务（复用之前的逻辑）\n     */\n    detectParallelTasks(tasks) {\n      if (!tasks || tasks.length === 0) return [];\n      \n      const sorted = [...tasks].sort((a, b) => a.start - b.start);\n      const layers = [];\n      const result = [];\n      \n      sorted.forEach(task => {\n        let layerIndex = layers.findIndex(endTime => task.start >= endTime);\n        \n        if (layerIndex === -1) {\n          layerIndex = layers.length;\n          layers.push(task.end);\n        } else {\n          layers[layerIndex] = task.end;\n        }\n        \n        result.push({\n          ...task,\n          layer: layerIndex,\n          totalLayers: 0\n        });\n      });\n      \n      const maxLayer = Math.max(...result.map(t => t.layer));\n      result.forEach(t => t.totalLayers = maxLayer + 1);\n      \n      return result;\n    },\n    \n    /**\n     * 准备设备视角数据\n     */\n    prepareWorkpointView() {\n      const data = [];\n      const links = [];\n      \n      // 按设备分组\n      const grouped = {};\n      this.testScheduleData.forEach(task => {\n        const wpId = task.workpoint_id;\n        if (!grouped[wpId]) {\n          grouped[wpId] = [];\n        }\n        grouped[wpId].push(task);\n      });\n      \n      // 生成DHTMLX数据\n      Object.keys(grouped).sort().forEach(wpId => {\n        const wpTasks = grouped[wpId];\n        const wpName = wpTasks[0].workpoint_name;\n        \n        // 添加父节点（设备）\n        data.push({\n          id: wpId,\n          text: wpName,\n          type: 'project',\n          open: true\n        });\n        \n        // 检测并行任务\n        const layered = this.detectParallelTasks(wpTasks);\n        \n        // 添加任务\n        layered.forEach(task => {\n          data.push({\n            id: `task_${task.id}`,\n            text: task.name,\n            start_date: this.formatGanttDate(this.timeUnitToDate(task.start)),\n            end_date: this.formatGanttDate(this.timeUnitToDate(task.end)),\n            duration: ((task.end - task.start) / 24).toFixed(1), // 转换为天\n            parent: wpId,\n            team: task.team,\n            teamName: this.teamNames[task.team],\n            workers: task.workers,\n            layer: task.layer,\n            type: 'task'\n          });\n        });\n      });\n      \n      return { data, links };\n    },\n    \n    /**\n     * 准备团队视角数据\n     */\n    prepareTeamView() {\n      const data = [];\n      const links = [];\n      \n      // 按团队分组\n      const grouped = {};\n      this.testScheduleData.forEach(task => {\n        const team = task.team;\n        if (!grouped[team]) {\n          grouped[team] = [];\n        }\n        grouped[team].push(task);\n      });\n      \n      // 生成DHTMLX数据\n      Object.keys(grouped).sort().forEach(team => {\n        const teamTasks = grouped[team];\n        const teamName = this.teamNames[team];\n        \n        // 添加父节点（团队）\n        data.push({\n          id: team,\n          text: teamName,\n          type: 'project',\n          open: true\n        });\n        \n        // 检测并行任务\n        const layered = this.detectParallelTasks(teamTasks);\n        \n        // 添加任务\n        layered.forEach(task => {\n          data.push({\n            id: `task_${task.id}`,\n            text: task.name,\n            start_date: this.formatGanttDate(this.timeUnitToDate(task.start)),\n            end_date: this.formatGanttDate(this.timeUnitToDate(task.end)),\n            duration: ((task.end - task.start) / 24).toFixed(1),\n            parent: team,\n            team: task.team,\n            teamName: this.teamNames[task.team],\n            workers: task.workers,\n            layer: task.layer,\n            type: 'task'\n          });\n        });\n      });\n      \n      return { data, links };\n    },\n    \n    /**\n     * 准备工序视角数据\n     */\n    prepareProcessView() {\n      const data = [];\n      const links = [];\n      \n      // 按开始时间排序\n      const sorted = [...this.testScheduleData].sort((a, b) => a.start - b.start);\n      \n      sorted.forEach(task => {\n        data.push({\n          id: `task_${task.id}`,\n          text: task.name,\n          start_date: this.formatGanttDate(this.timeUnitToDate(task.start)),\n          end_date: this.formatGanttDate(this.timeUnitToDate(task.end)),\n          duration: ((task.end - task.start) / 24).toFixed(1),\n          team: task.team,\n          teamName: this.teamNames[task.team],\n          workers: task.workers,\n          type: 'task'\n        });\n      });\n      \n      return { data, links };\n    },\n    \n    /**\n     * 格式化DHTMLX日期\n     */\n    formatGanttDate(date) {\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      const hour = String(date.getHours()).padStart(2, '0');\n      const minute = String(date.getMinutes()).padStart(2, '0');\n      return `${year}-${month}-${day} ${hour}:${minute}`;\n    },\n    \n    /**\n     * 切换视角\n     */\n    switchView() {\n      this.loadData();\n      this.$message.success(`已切换到${this.getViewName()}视角`);\n    },\n    \n    /**\n     * 获取视角名称\n     */\n    getViewName() {\n      const names = {\n        'workpoint': '设备',\n        'team': '团队',\n        'process': '工序'\n      };\n      return names[this.viewMode] || '未知';\n    },\n    \n    /**\n     * 改变缩放级别\n     */\n    changeZoom(scale) {\n      switch (scale) {\n        case 'day':\n          gantt.config.scale_unit = 'day';\n          gantt.config.date_scale = '%Y-%m-%d';\n          gantt.config.subscales = [\n            { unit: 'hour', step: 6, date: '%H:%i' }\n          ];\n          break;\n        case 'week':\n          gantt.config.scale_unit = 'week';\n          gantt.config.date_scale = '第%W周';\n          gantt.config.subscales = [\n            { unit: 'day', step: 1, date: '%d日' }\n          ];\n          break;\n        case 'month':\n          gantt.config.scale_unit = 'month';\n          gantt.config.date_scale = '%Y年%m月';\n          gantt.config.subscales = [\n            { unit: 'week', step: 1, date: '第%W周' }\n          ];\n          break;\n      }\n      gantt.render();\n      this.$message.success(`已切换到${scale}视图`);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.gantt-test-container {\n  padding: 20px;\n  background: #f5f7fa;\n  min-height: 100vh;\n}\n\n/* 页面头部 */\n.page-header {\n  margin-bottom: 20px;\n}\n\n.header-content {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 12px;\n  padding: 30px;\n  color: white;\n}\n\n.page-title {\n  margin: 0 0 8px 0;\n  font-size: 28px;\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.page-subtitle {\n  margin: 0;\n  opacity: 0.9;\n  font-size: 14px;\n}\n\n/* 工具栏 */\n.toolbar-section {\n  margin-bottom: 20px;\n}\n\n.toolbar-content {\n  display: flex;\n  align-items: center;\n  gap: 30px;\n  flex-wrap: wrap;\n}\n\n.view-switch,\n.zoom-controls {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.view-switch label,\n.zoom-controls label {\n  font-weight: 600;\n  color: #606266;\n  white-space: nowrap;\n}\n\n.info-display {\n  margin-left: auto;\n  display: flex;\n  gap: 10px;\n}\n\n/* Gantt容器 */\n.gantt-section {\n  margin-bottom: 20px;\n}\n\n.gantt-card {\n  border-radius: 12px;\n}\n\n.gantt-container {\n  width: 100%;\n  height: 600px;\n  position: relative;\n}\n\n/* 信息区域 */\n.info-section {\n  margin-bottom: 20px;\n}\n\n.test-notes {\n  margin-top: 20px;\n  padding: 15px;\n  background: #f0f9ff;\n  border-left: 4px solid #667eea;\n  border-radius: 4px;\n}\n\n.test-notes h4 {\n  margin: 0 0 10px 0;\n  color: #667eea;\n}\n\n.test-notes ul {\n  margin: 0;\n  padding-left: 20px;\n}\n\n.test-notes li {\n  margin: 5px 0;\n  color: #606266;\n}\n\n/* DHTMLX Gantt样式定制 */\n.gantt-test-container ::v-deep .gantt_task_line {\n  border-radius: 4px;\n}\n\n.gantt-test-container ::v-deep .gantt_project {\n  background-color: #e0e7ff !important;\n  border-color: #667eea !important;\n}\n\n/* 团队颜色 */\n.gantt-test-container ::v-deep .gantt_task_team1 { background-color: #FF6B6B !important; border-color: #ff5252 !important; }\n.gantt-test-container ::v-deep .gantt_task_team2 { background-color: #4ECDC4 !important; border-color: #26a69a !important; }\n.gantt-test-container ::v-deep .gantt_task_team3 { background-color: #45B7D1 !important; border-color: #039be5 !important; }\n.gantt-test-container ::v-deep .gantt_task_team4 { background-color: #FFA07A !important; border-color: #ff8a50 !important; }\n.gantt-test-container ::v-deep .gantt_task_team5 { background-color: #98D8C8 !important; border-color: #80cbc4 !important; }\n.gantt-test-container ::v-deep .gantt_task_team6 { background-color: #F7DC6F !important; border-color: #ffd54f !important; }\n\n.gantt-test-container ::v-deep .gantt_grid_scale {\n  background-color: #667eea;\n  color: white;\n  font-weight: 600;\n}\n\n.gantt-test-container ::v-deep .gantt_task_scale {\n  background-color: #667eea;\n  color: white;\n  font-weight: 600;\n}\n\n.gantt-test-container ::v-deep .gantt_grid_head_cell {\n  color: white;\n}\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}