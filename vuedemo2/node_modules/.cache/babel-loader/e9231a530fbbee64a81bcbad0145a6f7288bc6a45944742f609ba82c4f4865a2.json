{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_c(\"el-select\", {\n    staticStyle: {\n      width: \"200px\",\n      \"margin-right\": \"10px\"\n    },\n    attrs: {\n      placeholder: \"请选择算法\"\n    },\n    model: {\n      value: _vm.selectedAlgorithm,\n      callback: function ($$v) {\n        _vm.selectedAlgorithm = $$v;\n      },\n      expression: \"selectedAlgorithm\"\n    }\n  }, [_c(\"el-option\", {\n    attrs: {\n      label: \"DDPG\",\n      value: \"ddpg\"\n    }\n  }), _c(\"el-option\", {\n    attrs: {\n      label: \"DDQN\",\n      value: \"ddqn\"\n    }\n  }), _c(\"el-option\", {\n    attrs: {\n      label: \"GA\",\n      value: \"ga\"\n    }\n  }), _c(\"el-option\", {\n    attrs: {\n      label: \"其他算法\",\n      value: \"other_algorithm\"\n    }\n  })], 1), _vm.selectedAlgorithm === \"ddpg\" ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_c(\"el-input\", {\n    staticStyle: {\n      width: \"300px\",\n      \"margin-right\": \"10px\"\n    },\n    attrs: {\n      placeholder: \"请输入训练的最大迭代次数\"\n    },\n    model: {\n      value: _vm.inputData.max_episodes,\n      callback: function ($$v) {\n        _vm.$set(_vm.inputData, \"max_episodes\", $$v);\n      },\n      expression: \"inputData.max_episodes\"\n    }\n  })], 1) : _vm._e(), _vm.selectedAlgorithm === \"ddqn\" || _vm.selectedAlgorithm === \"ga\" ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_c(\"el-table\", {\n    staticStyle: {\n      width: \"100%\"\n    },\n    attrs: {\n      data: _vm.tableData,\n      border: \"\"\n    }\n  }, [_c(\"el-table-column\", {\n    attrs: {\n      prop: \"task\",\n      label: \"任务\",\n      width: \"180\",\n      fixed: \"\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function ({\n        row\n      }) {\n        return [_c(\"span\", [_vm._v(_vm._s(row.task))])];\n      }\n    }], null, false, 3423741097)\n  }), _vm._l(_vm.workers, function (worker, index) {\n    return _c(\"el-table-column\", {\n      key: index,\n      attrs: {\n        label: worker,\n        prop: worker,\n        width: \"120\"\n      },\n      scopedSlots: _vm._u([{\n        key: \"default\",\n        fn: function ({\n          row,\n          $index\n        }) {\n          return [$index === 0 ? _c(\"span\", [_vm._v(_vm._s(worker))]) : _c(\"el-input\", {\n            attrs: {\n              placeholder: \"请输入\",\n              size: \"small\"\n            },\n            model: {\n              value: row[worker],\n              callback: function ($$v) {\n                _vm.$set(row, worker, $$v);\n              },\n              expression: \"row[worker]\"\n            }\n          })];\n        }\n      }], null, true)\n    });\n  })], 2)], 1) : _vm._e(), _vm.selectedAlgorithm === \"other_algorithm\" ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_c(\"el-input\", {\n    staticStyle: {\n      width: \"300px\",\n      \"margin-right\": \"10px\"\n    },\n    attrs: {\n      placeholder: \"请输入自定义参数\"\n    },\n    model: {\n      value: _vm.inputData.custom_param,\n      callback: function ($$v) {\n        _vm.$set(_vm.inputData, \"custom_param\", $$v);\n      },\n      expression: \"inputData.custom_param\"\n    }\n  })], 1) : _vm._e(), _c(\"el-button\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    },\n    attrs: {\n      type: \"primary\",\n      loading: _vm.isLoading\n    },\n    on: {\n      click: _vm.runAlgorithm\n    }\n  }, [_vm._v(\"运行算法\")]), _vm.progressVisible ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"20px\"\n    }\n  }, [_c(\"el-progress\", {\n    attrs: {\n      percentage: _vm.progressPercentage,\n      status: _vm.progressStatus\n    }\n  }), _c(\"p\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_vm._v(\"当前进度：\" + _vm._s(_vm.progressPercentage) + \"%\")])], 1) : _vm._e(), _vm.result ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"20px\"\n    }\n  }, [_c(\"h3\", [_vm._v(\"算法结果：\")]), _c(\"pre\", [_vm._v(_vm._s(_vm.result))])]) : _vm._e()], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","staticStyle","width","attrs","placeholder","model","value","selectedAlgorithm","callback","$$v","expression","label","inputData","max_episodes","$set","_e","data","tableData","border","prop","fixed","scopedSlots","_u","key","fn","row","_v","_s","task","_l","workers","worker","index","$index","size","custom_param","type","loading","isLoading","on","click","runAlgorithm","progressVisible","percentage","progressPercentage","status","progressStatus","result","staticRenderFns","_withStripped"],"sources":["D:/Program Files/JetBrains/IDEAProject/springboot-vue-wms/vuedemo2/src/components/user/Test.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-select\",\n        {\n          staticStyle: { width: \"200px\", \"margin-right\": \"10px\" },\n          attrs: { placeholder: \"请选择算法\" },\n          model: {\n            value: _vm.selectedAlgorithm,\n            callback: function ($$v) {\n              _vm.selectedAlgorithm = $$v\n            },\n            expression: \"selectedAlgorithm\",\n          },\n        },\n        [\n          _c(\"el-option\", { attrs: { label: \"DDPG\", value: \"ddpg\" } }),\n          _c(\"el-option\", { attrs: { label: \"DDQN\", value: \"ddqn\" } }),\n          _c(\"el-option\", { attrs: { label: \"GA\", value: \"ga\" } }),\n          _c(\"el-option\", {\n            attrs: { label: \"其他算法\", value: \"other_algorithm\" },\n          }),\n        ],\n        1\n      ),\n      _vm.selectedAlgorithm === \"ddpg\"\n        ? _c(\n            \"div\",\n            { staticStyle: { \"margin-top\": \"10px\" } },\n            [\n              _c(\"el-input\", {\n                staticStyle: { width: \"300px\", \"margin-right\": \"10px\" },\n                attrs: { placeholder: \"请输入训练的最大迭代次数\" },\n                model: {\n                  value: _vm.inputData.max_episodes,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.inputData, \"max_episodes\", $$v)\n                  },\n                  expression: \"inputData.max_episodes\",\n                },\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.selectedAlgorithm === \"ddqn\" || _vm.selectedAlgorithm === \"ga\"\n        ? _c(\n            \"div\",\n            { staticStyle: { \"margin-top\": \"10px\" } },\n            [\n              _c(\n                \"el-table\",\n                {\n                  staticStyle: { width: \"100%\" },\n                  attrs: { data: _vm.tableData, border: \"\" },\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"task\",\n                      label: \"任务\",\n                      width: \"180\",\n                      fixed: \"\",\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function ({ row }) {\n                            return [_c(\"span\", [_vm._v(_vm._s(row.task))])]\n                          },\n                        },\n                      ],\n                      null,\n                      false,\n                      3423741097\n                    ),\n                  }),\n                  _vm._l(_vm.workers, function (worker, index) {\n                    return _c(\"el-table-column\", {\n                      key: index,\n                      attrs: { label: worker, prop: worker, width: \"120\" },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function ({ row, $index }) {\n                              return [\n                                $index === 0\n                                  ? _c(\"span\", [_vm._v(_vm._s(worker))])\n                                  : _c(\"el-input\", {\n                                      attrs: {\n                                        placeholder: \"请输入\",\n                                        size: \"small\",\n                                      },\n                                      model: {\n                                        value: row[worker],\n                                        callback: function ($$v) {\n                                          _vm.$set(row, worker, $$v)\n                                        },\n                                        expression: \"row[worker]\",\n                                      },\n                                    }),\n                              ]\n                            },\n                          },\n                        ],\n                        null,\n                        true\n                      ),\n                    })\n                  }),\n                ],\n                2\n              ),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.selectedAlgorithm === \"other_algorithm\"\n        ? _c(\n            \"div\",\n            { staticStyle: { \"margin-top\": \"10px\" } },\n            [\n              _c(\"el-input\", {\n                staticStyle: { width: \"300px\", \"margin-right\": \"10px\" },\n                attrs: { placeholder: \"请输入自定义参数\" },\n                model: {\n                  value: _vm.inputData.custom_param,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.inputData, \"custom_param\", $$v)\n                  },\n                  expression: \"inputData.custom_param\",\n                },\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      _c(\n        \"el-button\",\n        {\n          staticStyle: { \"margin-top\": \"10px\" },\n          attrs: { type: \"primary\", loading: _vm.isLoading },\n          on: { click: _vm.runAlgorithm },\n        },\n        [_vm._v(\"运行算法\")]\n      ),\n      _vm.progressVisible\n        ? _c(\n            \"div\",\n            { staticStyle: { \"margin-top\": \"20px\" } },\n            [\n              _c(\"el-progress\", {\n                attrs: {\n                  percentage: _vm.progressPercentage,\n                  status: _vm.progressStatus,\n                },\n              }),\n              _c(\"p\", { staticStyle: { \"margin-top\": \"10px\" } }, [\n                _vm._v(\"当前进度：\" + _vm._s(_vm.progressPercentage) + \"%\"),\n              ]),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.result\n        ? _c(\"div\", { staticStyle: { \"margin-top\": \"20px\" } }, [\n            _c(\"h3\", [_vm._v(\"算法结果：\")]),\n            _c(\"pre\", [_vm._v(_vm._s(_vm.result))]),\n          ])\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}