{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { parse, stringify } from 'zrender/lib/tool/color.js';\nimport * as graphic from '../../util/graphic.js';\nimport { enableHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, createTextStyle } from '../../label/labelStyle.js';\nimport { makeBackground } from '../helper/listComponent.js';\nimport * as layoutUtil from '../../util/layout.js';\nimport ComponentView from '../../view/Component.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal.js';\nimport { getECData } from '../../util/innerStore.js';\nimport tokens from '../../visual/tokens.js';\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\nvar LegendView = /** @class */function (_super) {\n  __extends(LegendView, _super);\n  function LegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = LegendView.type;\n    _this.newlineDisabled = false;\n    return _this;\n  }\n  LegendView.prototype.init = function () {\n    this.group.add(this._contentGroup = new Group());\n    this.group.add(this._selectorGroup = new Group());\n    this._isFirstRender = true;\n  };\n  /**\n   * @protected\n   */\n  LegendView.prototype.getContentGroup = function () {\n    return this._contentGroup;\n  };\n  /**\n   * @protected\n   */\n  LegendView.prototype.getSelectorGroup = function () {\n    return this._selectorGroup;\n  };\n  /**\n   * @override\n   */\n  LegendView.prototype.render = function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    }\n    // selector has been normalized to an array in model\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition);\n    // Perform layout.\n    var refContainer = layoutUtil.createBoxLayoutReference(legendModel, api).refContainer;\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, refContainer, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition);\n    // Place mainGroup, based on the calculated `mainRect`.\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), refContainer, padding);\n    this.group.x = layoutRect.x - mainRect.x;\n    this.group.y = layoutRect.y - mainRect.y;\n    this.group.markRedraw();\n    // Render background after group is layout.\n    this.group.add(this._backgroundEl = makeBackground(mainRect,\n    // FXIME: most itemStyle options does not work in background because inherit is not handled yet.\n    legendModel));\n  };\n  LegendView.prototype.resetInner = function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  };\n  LegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var triggerEvent = legendModel.get('triggerEvent');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (legendItemModel, dataIndex) {\n      var _this = this;\n      var name = legendItemModel.get('name');\n      // Use empty string or \\n as a newline string\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        var g = new Group();\n        // @ts-ignore\n        g.newline = true;\n        contentGroup.add(g);\n        return;\n      }\n      // Representitive series.\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n      if (legendDrawnMap.get(name)) {\n        // Have been drawn\n        return;\n      }\n      // Legend to control series.\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var lineVisualStyle = data.getVisual('legendLineStyle') || {};\n        var legendIcon = data.getVisual('legendIcon');\n        /**\n         * `data.getVisual('style')` may be the color from the register\n         * in series. For example, for line series,\n         */\n        var style = data.getVisual('style');\n        var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, style, legendIcon, selectMode, api);\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        if (ecModel.ssr) {\n          itemGroup.eachChild(function (child) {\n            var ecData = getECData(child);\n            ecData.seriesIndex = seriesModel.seriesIndex;\n            ecData.dataIndex = dataIndex;\n            ecData.ssrType = 'legend';\n          });\n        }\n        if (triggerEvent) {\n          itemGroup.eachChild(function (child) {\n            _this.packEventData(child, legendModel, seriesModel, dataIndex, name);\n          });\n        }\n        legendDrawnMap.set(name, true);\n      } else {\n        // Legend to control data. In pie and funnel.\n        ecModel.eachRawSeries(function (seriesModel) {\n          var _this = this;\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n          if (seriesModel.legendVisualProvider) {\n            var provider = seriesModel.legendVisualProvider;\n            if (!provider.containName(name)) {\n              return;\n            }\n            var idx = provider.indexOfName(name);\n            var style = provider.getItemVisual(idx, 'style');\n            var legendIcon = provider.getItemVisual(idx, 'legendIcon');\n            var colorArr = parse(style.fill);\n            // Color may be set to transparent in visualMap when data is out of range.\n            // Do not show nothing.\n            if (colorArr && colorArr[3] === 0) {\n              colorArr[3] = 0.2;\n              // TODO color is set to 0, 0, 0, 0. Should show correct RGBA\n              style = zrUtil.extend(zrUtil.extend({}, style), {\n                fill: stringify(colorArr, 'rgba')\n              });\n            }\n            var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, {}, style, legendIcon, selectMode, api);\n            // FIXME: consider different series has items with the same name.\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId))\n            // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            if (ecModel.ssr) {\n              itemGroup.eachChild(function (child) {\n                var ecData = getECData(child);\n                ecData.seriesIndex = seriesModel.seriesIndex;\n                ecData.dataIndex = dataIndex;\n                ecData.ssrType = 'legend';\n              });\n            }\n            if (triggerEvent) {\n              itemGroup.eachChild(function (child) {\n                _this.packEventData(child, legendModel, seriesModel, dataIndex, name);\n              });\n            }\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (!legendDrawnMap.get(name)) {\n          console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n        }\n      }\n    }, this);\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  };\n  LegendView.prototype.packEventData = function (el, legendModel, seriesModel, dataIndex, name) {\n    var eventData = {\n      componentType: 'legend',\n      componentIndex: legendModel.componentIndex,\n      dataIndex: dataIndex,\n      value: name,\n      seriesIndex: seriesModel.seriesIndex\n    };\n    getECData(el).eventData = eventData;\n  };\n  ;\n  LegendView.prototype._createSelector = function (selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function () {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect',\n            legendId: legendModel.id\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel(['emphasis', 'selectorLabel']);\n      setLabelStyle(labelText, {\n        normal: labelModel,\n        emphasis: emphasisLabelModel\n      }, {\n        defaultText: selectorItem.title\n      });\n      enableHoverEmphasis(labelText);\n    });\n  };\n  LegendView.prototype._createItem = function (seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, itemVisualStyle, legendIcon, selectMode, api) {\n    var drawType = seriesModel.visualDrawType;\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var isSelected = legendModel.isSelected(name);\n    var iconRotate = legendItemModel.get('symbolRotate');\n    var symbolKeepAspect = legendItemModel.get('symbolKeepAspect');\n    var legendIconType = legendItemModel.get('icon');\n    legendIcon = legendIconType || legendIcon || 'roundRect';\n    var style = getLegendStyle(legendIcon, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api);\n    var itemGroup = new Group();\n    var textStyleModel = legendItemModel.getModel('textStyle');\n    if (zrUtil.isFunction(seriesModel.getLegendIcon) && (!legendIconType || legendIconType === 'inherit')) {\n      // Series has specific way to define legend icon\n      itemGroup.add(seriesModel.getLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: iconRotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    } else {\n      // Use default legend icon policy for most series\n      var rotate = legendIconType === 'inherit' && seriesModel.getData().getVisual('symbol') ? iconRotate === 'inherit' ? seriesModel.getData().getVisual('symbolRotate') : iconRotate : 0; // No rotation for no icon\n      itemGroup.add(getDefaultLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: rotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    }\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n    if (zrUtil.isString(formatter) && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (zrUtil.isFunction(formatter)) {\n      content = formatter(name);\n    }\n    var textColor = isSelected ? textStyleModel.getTextColor() : legendItemModel.get('inactiveColor');\n    itemGroup.add(new graphic.Text({\n      style: createTextStyle(textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        fill: textColor,\n        align: textAlign,\n        verticalAlign: 'middle'\n      }, {\n        inheritColor: textColor\n      })\n    }));\n    // Add a invisible rect to increase the area of mouse hover\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      style: {\n        // Cannot use 'invisible' because SVG SSR will miss the node\n        fill: 'transparent'\n      }\n    });\n    var tooltipModel = legendItemModel.getModel('tooltip');\n    if (tooltipModel.get('show')) {\n      graphic.setTooltipConfig({\n        el: hitRect,\n        componentModel: legendModel,\n        itemName: name,\n        itemTooltipOption: tooltipModel.option\n      });\n    }\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    enableHoverEmphasis(itemGroup);\n    // @ts-ignore\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  };\n  LegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup();\n    // Place items in contentGroup.\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n    selectorGroup.markRedraw();\n    contentGroup.markRedraw();\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box(\n      // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      }\n      // Always align selector to content as 'middle'\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      return this.group.getBoundingRect();\n    }\n  };\n  /**\n   * @protected\n   */\n  LegendView.prototype.remove = function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  };\n  LegendView.type = 'legend.plain';\n  return LegendView;\n}(ComponentView);\nfunction getLegendStyle(iconType, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api) {\n  /**\n   * Use series style if is inherit;\n   * elsewise, use legend style\n   */\n  function handleCommonProps(style, visualStyle) {\n    // If lineStyle.width is 'auto', it is set to be 2 if series has border\n    if (style.lineWidth === 'auto') {\n      style.lineWidth = visualStyle.lineWidth > 0 ? 2 : 0;\n    }\n    each(style, function (propVal, propName) {\n      style[propName] === 'inherit' && (style[propName] = visualStyle[propName]);\n    });\n  }\n  // itemStyle\n  var itemStyleModel = legendItemModel.getModel('itemStyle');\n  var itemStyle = itemStyleModel.getItemStyle();\n  var iconBrushType = iconType.lastIndexOf('empty', 0) === 0 ? 'fill' : 'stroke';\n  var decalStyle = itemStyleModel.getShallow('decal');\n  itemStyle.decal = !decalStyle || decalStyle === 'inherit' ? itemVisualStyle.decal : createOrUpdatePatternFromDecal(decalStyle, api);\n  if (itemStyle.fill === 'inherit') {\n    /**\n     * Series with visualDrawType as 'stroke' should have\n     * series stroke as legend fill\n     */\n    itemStyle.fill = itemVisualStyle[drawType];\n  }\n  if (itemStyle.stroke === 'inherit') {\n    /**\n     * icon type with \"emptyXXX\" should use fill color\n     * in visual style\n     */\n    itemStyle.stroke = itemVisualStyle[iconBrushType];\n  }\n  if (itemStyle.opacity === 'inherit') {\n    /**\n     * Use lineStyle.opacity if drawType is stroke\n     */\n    itemStyle.opacity = (drawType === 'fill' ? itemVisualStyle : lineVisualStyle).opacity;\n  }\n  handleCommonProps(itemStyle, itemVisualStyle);\n  // lineStyle\n  var legendLineModel = legendItemModel.getModel('lineStyle');\n  var lineStyle = legendLineModel.getLineStyle();\n  handleCommonProps(lineStyle, lineVisualStyle);\n  // Fix auto color to real color\n  itemStyle.fill === 'auto' && (itemStyle.fill = itemVisualStyle.fill);\n  itemStyle.stroke === 'auto' && (itemStyle.stroke = itemVisualStyle.fill);\n  lineStyle.stroke === 'auto' && (lineStyle.stroke = itemVisualStyle.fill);\n  if (!isSelected) {\n    var borderWidth = legendItemModel.get('inactiveBorderWidth');\n    /**\n     * Since stroke is set to be inactiveBorderColor, it may occur that\n     * there is no border in series but border in legend, so we need to\n     * use border only when series has border if is set to be auto\n     */\n    var visualHasBorder = itemStyle[iconBrushType];\n    itemStyle.lineWidth = borderWidth === 'auto' ? itemVisualStyle.lineWidth > 0 && visualHasBorder ? 2 : 0 : itemStyle.lineWidth;\n    itemStyle.fill = legendItemModel.get('inactiveColor');\n    itemStyle.stroke = legendItemModel.get('inactiveBorderColor');\n    lineStyle.stroke = legendLineModel.get('inactiveColor');\n    lineStyle.lineWidth = legendLineModel.get('inactiveWidth');\n  }\n  return {\n    itemStyle: itemStyle,\n    lineStyle: lineStyle\n  };\n}\nfunction getDefaultLegendIcon(opt) {\n  var symboType = opt.icon || 'roundRect';\n  var icon = createSymbol(symboType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill, opt.symbolKeepAspect);\n  icon.setStyle(opt.itemStyle);\n  icon.rotation = (opt.iconRotate || 0) * Math.PI / 180;\n  icon.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\n  if (symboType.indexOf('empty') > -1) {\n    icon.style.stroke = icon.style.fill;\n    icon.style.fill = tokens.color.neutral00;\n    icon.style.lineWidth = 2;\n  }\n  return icon;\n}\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\n  // downplay before unselect\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: seriesName != null ? seriesName : dataName\n  });\n  // highlight after select\n  // TODO highlight immediately may cause animation loss.\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\n}\nfunction isUseHoverLayer(api) {\n  var list = api.getZr().storage.getDisplayList();\n  var emphasisState;\n  var i = 0;\n  var len = list.length;\n  while (i < len && !(emphasisState = list[i].states.emphasis)) {\n    i++;\n  }\n  return emphasisState && emphasisState.hoverLayer;\n}\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\nexport default LegendView;","map":{"version":3,"names":["__extends","zrUtil","parse","stringify","graphic","enableHoverEmphasis","setLabelStyle","createTextStyle","makeBackground","layoutUtil","ComponentView","createSymbol","createOrUpdatePatternFromDecal","getECData","tokens","curry","each","Group","LegendView","_super","_this","apply","arguments","type","newlineDisabled","prototype","init","group","add","_contentGroup","_selectorGroup","_isFirstRender","getContentGroup","getSelectorGroup","render","legendModel","ecModel","api","isFirstRender","resetInner","get","itemAlign","orient","selector","selectorPosition","renderInner","refContainer","createBoxLayoutReference","positionInfo","getBoxLayoutParams","padding","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","width","height","x","y","markRedraw","_backgroundEl","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","triggerEvent","excludeSeriesId","eachRawSeries","seriesModel","push","id","getData","legendItemModel","dataIndex","name","g","newline","getSeriesByName","data","lineVisualStyle","getVisual","legendIcon","style","itemGroup","_createItem","on","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","ssr","eachChild","child","ecData","seriesIndex","ssrType","packEventData","set","legendVisualProvider","provider","containName","idx","indexOfName","getItemVisual","colorArr","fill","extend","process","env","NODE_ENV","console","warn","_createSelector","el","eventData","componentType","componentIndex","value","selectorGroup","createSelectorButton","selectorItem","labelText","Text","align","verticalAlign","onclick","dispatchAction","legendId","labelModel","getModel","emphasisLabelModel","normal","emphasis","defaultText","title","itemVisualStyle","drawType","visualDrawType","itemWidth","itemHeight","isSelected","iconRotate","symbolKeepAspect","legendIconType","getLegendStyle","textStyleModel","isFunction","getLegendIcon","icon","itemStyle","lineStyle","rotate","getDefaultLegendIcon","textX","textAlign","formatter","content","isString","replace","textColor","getTextColor","text","inheritColor","hitRect","Rect","shape","getBoundingRect","tooltipModel","setTooltipConfig","componentModel","itemName","itemTooltipOption","option","silent","__legendDataIndex","box","contentRect","contentPos","selectorRect","selectorPos","selectorButtonGap","orientIdx","getOrient","index","wh","hw","yx","Math","max","min","iconType","handleCommonProps","visualStyle","lineWidth","propVal","propName","itemStyleModel","getItemStyle","iconBrushType","lastIndexOf","decalStyle","getShallow","decal","stroke","opacity","legendLineModel","getLineStyle","borderWidth","visualHasBorder","opt","symboType","setStyle","rotation","PI","setOrigin","indexOf","color","neutral00","seriesName","dataName","isUseHoverLayer","list","getZr","storage","getDisplayList","emphasisState","i","len","length","states","hoverLayer"],"sources":["D:/Program Files/JetBrains/IDEAProject/springboot-vue-wms_test/vuedemo2/node_modules/echarts/lib/component/legend/LegendView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { parse, stringify } from 'zrender/lib/tool/color.js';\nimport * as graphic from '../../util/graphic.js';\nimport { enableHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, createTextStyle } from '../../label/labelStyle.js';\nimport { makeBackground } from '../helper/listComponent.js';\nimport * as layoutUtil from '../../util/layout.js';\nimport ComponentView from '../../view/Component.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal.js';\nimport { getECData } from '../../util/innerStore.js';\nimport tokens from '../../visual/tokens.js';\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\nvar LegendView = /** @class */function (_super) {\n  __extends(LegendView, _super);\n  function LegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = LegendView.type;\n    _this.newlineDisabled = false;\n    return _this;\n  }\n  LegendView.prototype.init = function () {\n    this.group.add(this._contentGroup = new Group());\n    this.group.add(this._selectorGroup = new Group());\n    this._isFirstRender = true;\n  };\n  /**\n   * @protected\n   */\n  LegendView.prototype.getContentGroup = function () {\n    return this._contentGroup;\n  };\n  /**\n   * @protected\n   */\n  LegendView.prototype.getSelectorGroup = function () {\n    return this._selectorGroup;\n  };\n  /**\n   * @override\n   */\n  LegendView.prototype.render = function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    }\n    // selector has been normalized to an array in model\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition);\n    // Perform layout.\n    var refContainer = layoutUtil.createBoxLayoutReference(legendModel, api).refContainer;\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, refContainer, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition);\n    // Place mainGroup, based on the calculated `mainRect`.\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), refContainer, padding);\n    this.group.x = layoutRect.x - mainRect.x;\n    this.group.y = layoutRect.y - mainRect.y;\n    this.group.markRedraw();\n    // Render background after group is layout.\n    this.group.add(this._backgroundEl = makeBackground(mainRect,\n    // FXIME: most itemStyle options does not work in background because inherit is not handled yet.\n    legendModel));\n  };\n  LegendView.prototype.resetInner = function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  };\n  LegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var triggerEvent = legendModel.get('triggerEvent');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (legendItemModel, dataIndex) {\n      var _this = this;\n      var name = legendItemModel.get('name');\n      // Use empty string or \\n as a newline string\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        var g = new Group();\n        // @ts-ignore\n        g.newline = true;\n        contentGroup.add(g);\n        return;\n      }\n      // Representitive series.\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n      if (legendDrawnMap.get(name)) {\n        // Have been drawn\n        return;\n      }\n      // Legend to control series.\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var lineVisualStyle = data.getVisual('legendLineStyle') || {};\n        var legendIcon = data.getVisual('legendIcon');\n        /**\n         * `data.getVisual('style')` may be the color from the register\n         * in series. For example, for line series,\n         */\n        var style = data.getVisual('style');\n        var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, style, legendIcon, selectMode, api);\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        if (ecModel.ssr) {\n          itemGroup.eachChild(function (child) {\n            var ecData = getECData(child);\n            ecData.seriesIndex = seriesModel.seriesIndex;\n            ecData.dataIndex = dataIndex;\n            ecData.ssrType = 'legend';\n          });\n        }\n        if (triggerEvent) {\n          itemGroup.eachChild(function (child) {\n            _this.packEventData(child, legendModel, seriesModel, dataIndex, name);\n          });\n        }\n        legendDrawnMap.set(name, true);\n      } else {\n        // Legend to control data. In pie and funnel.\n        ecModel.eachRawSeries(function (seriesModel) {\n          var _this = this;\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n          if (seriesModel.legendVisualProvider) {\n            var provider = seriesModel.legendVisualProvider;\n            if (!provider.containName(name)) {\n              return;\n            }\n            var idx = provider.indexOfName(name);\n            var style = provider.getItemVisual(idx, 'style');\n            var legendIcon = provider.getItemVisual(idx, 'legendIcon');\n            var colorArr = parse(style.fill);\n            // Color may be set to transparent in visualMap when data is out of range.\n            // Do not show nothing.\n            if (colorArr && colorArr[3] === 0) {\n              colorArr[3] = 0.2;\n              // TODO color is set to 0, 0, 0, 0. Should show correct RGBA\n              style = zrUtil.extend(zrUtil.extend({}, style), {\n                fill: stringify(colorArr, 'rgba')\n              });\n            }\n            var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, {}, style, legendIcon, selectMode, api);\n            // FIXME: consider different series has items with the same name.\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId))\n            // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            if (ecModel.ssr) {\n              itemGroup.eachChild(function (child) {\n                var ecData = getECData(child);\n                ecData.seriesIndex = seriesModel.seriesIndex;\n                ecData.dataIndex = dataIndex;\n                ecData.ssrType = 'legend';\n              });\n            }\n            if (triggerEvent) {\n              itemGroup.eachChild(function (child) {\n                _this.packEventData(child, legendModel, seriesModel, dataIndex, name);\n              });\n            }\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (!legendDrawnMap.get(name)) {\n          console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n        }\n      }\n    }, this);\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  };\n  LegendView.prototype.packEventData = function (el, legendModel, seriesModel, dataIndex, name) {\n    var eventData = {\n      componentType: 'legend',\n      componentIndex: legendModel.componentIndex,\n      dataIndex: dataIndex,\n      value: name,\n      seriesIndex: seriesModel.seriesIndex\n    };\n    getECData(el).eventData = eventData;\n  };\n  ;\n  LegendView.prototype._createSelector = function (selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function () {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect',\n            legendId: legendModel.id\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel(['emphasis', 'selectorLabel']);\n      setLabelStyle(labelText, {\n        normal: labelModel,\n        emphasis: emphasisLabelModel\n      }, {\n        defaultText: selectorItem.title\n      });\n      enableHoverEmphasis(labelText);\n    });\n  };\n  LegendView.prototype._createItem = function (seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, itemVisualStyle, legendIcon, selectMode, api) {\n    var drawType = seriesModel.visualDrawType;\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var isSelected = legendModel.isSelected(name);\n    var iconRotate = legendItemModel.get('symbolRotate');\n    var symbolKeepAspect = legendItemModel.get('symbolKeepAspect');\n    var legendIconType = legendItemModel.get('icon');\n    legendIcon = legendIconType || legendIcon || 'roundRect';\n    var style = getLegendStyle(legendIcon, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api);\n    var itemGroup = new Group();\n    var textStyleModel = legendItemModel.getModel('textStyle');\n    if (zrUtil.isFunction(seriesModel.getLegendIcon) && (!legendIconType || legendIconType === 'inherit')) {\n      // Series has specific way to define legend icon\n      itemGroup.add(seriesModel.getLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: iconRotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    } else {\n      // Use default legend icon policy for most series\n      var rotate = legendIconType === 'inherit' && seriesModel.getData().getVisual('symbol') ? iconRotate === 'inherit' ? seriesModel.getData().getVisual('symbolRotate') : iconRotate : 0; // No rotation for no icon\n      itemGroup.add(getDefaultLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: rotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    }\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n    if (zrUtil.isString(formatter) && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (zrUtil.isFunction(formatter)) {\n      content = formatter(name);\n    }\n    var textColor = isSelected ? textStyleModel.getTextColor() : legendItemModel.get('inactiveColor');\n    itemGroup.add(new graphic.Text({\n      style: createTextStyle(textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        fill: textColor,\n        align: textAlign,\n        verticalAlign: 'middle'\n      }, {\n        inheritColor: textColor\n      })\n    }));\n    // Add a invisible rect to increase the area of mouse hover\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      style: {\n        // Cannot use 'invisible' because SVG SSR will miss the node\n        fill: 'transparent'\n      }\n    });\n    var tooltipModel = legendItemModel.getModel('tooltip');\n    if (tooltipModel.get('show')) {\n      graphic.setTooltipConfig({\n        el: hitRect,\n        componentModel: legendModel,\n        itemName: name,\n        itemTooltipOption: tooltipModel.option\n      });\n    }\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    enableHoverEmphasis(itemGroup);\n    // @ts-ignore\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  };\n  LegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup();\n    // Place items in contentGroup.\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n    selectorGroup.markRedraw();\n    contentGroup.markRedraw();\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box(\n      // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      }\n      // Always align selector to content as 'middle'\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      return this.group.getBoundingRect();\n    }\n  };\n  /**\n   * @protected\n   */\n  LegendView.prototype.remove = function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  };\n  LegendView.type = 'legend.plain';\n  return LegendView;\n}(ComponentView);\nfunction getLegendStyle(iconType, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api) {\n  /**\n   * Use series style if is inherit;\n   * elsewise, use legend style\n   */\n  function handleCommonProps(style, visualStyle) {\n    // If lineStyle.width is 'auto', it is set to be 2 if series has border\n    if (style.lineWidth === 'auto') {\n      style.lineWidth = visualStyle.lineWidth > 0 ? 2 : 0;\n    }\n    each(style, function (propVal, propName) {\n      style[propName] === 'inherit' && (style[propName] = visualStyle[propName]);\n    });\n  }\n  // itemStyle\n  var itemStyleModel = legendItemModel.getModel('itemStyle');\n  var itemStyle = itemStyleModel.getItemStyle();\n  var iconBrushType = iconType.lastIndexOf('empty', 0) === 0 ? 'fill' : 'stroke';\n  var decalStyle = itemStyleModel.getShallow('decal');\n  itemStyle.decal = !decalStyle || decalStyle === 'inherit' ? itemVisualStyle.decal : createOrUpdatePatternFromDecal(decalStyle, api);\n  if (itemStyle.fill === 'inherit') {\n    /**\n     * Series with visualDrawType as 'stroke' should have\n     * series stroke as legend fill\n     */\n    itemStyle.fill = itemVisualStyle[drawType];\n  }\n  if (itemStyle.stroke === 'inherit') {\n    /**\n     * icon type with \"emptyXXX\" should use fill color\n     * in visual style\n     */\n    itemStyle.stroke = itemVisualStyle[iconBrushType];\n  }\n  if (itemStyle.opacity === 'inherit') {\n    /**\n     * Use lineStyle.opacity if drawType is stroke\n     */\n    itemStyle.opacity = (drawType === 'fill' ? itemVisualStyle : lineVisualStyle).opacity;\n  }\n  handleCommonProps(itemStyle, itemVisualStyle);\n  // lineStyle\n  var legendLineModel = legendItemModel.getModel('lineStyle');\n  var lineStyle = legendLineModel.getLineStyle();\n  handleCommonProps(lineStyle, lineVisualStyle);\n  // Fix auto color to real color\n  itemStyle.fill === 'auto' && (itemStyle.fill = itemVisualStyle.fill);\n  itemStyle.stroke === 'auto' && (itemStyle.stroke = itemVisualStyle.fill);\n  lineStyle.stroke === 'auto' && (lineStyle.stroke = itemVisualStyle.fill);\n  if (!isSelected) {\n    var borderWidth = legendItemModel.get('inactiveBorderWidth');\n    /**\n     * Since stroke is set to be inactiveBorderColor, it may occur that\n     * there is no border in series but border in legend, so we need to\n     * use border only when series has border if is set to be auto\n     */\n    var visualHasBorder = itemStyle[iconBrushType];\n    itemStyle.lineWidth = borderWidth === 'auto' ? itemVisualStyle.lineWidth > 0 && visualHasBorder ? 2 : 0 : itemStyle.lineWidth;\n    itemStyle.fill = legendItemModel.get('inactiveColor');\n    itemStyle.stroke = legendItemModel.get('inactiveBorderColor');\n    lineStyle.stroke = legendLineModel.get('inactiveColor');\n    lineStyle.lineWidth = legendLineModel.get('inactiveWidth');\n  }\n  return {\n    itemStyle: itemStyle,\n    lineStyle: lineStyle\n  };\n}\nfunction getDefaultLegendIcon(opt) {\n  var symboType = opt.icon || 'roundRect';\n  var icon = createSymbol(symboType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill, opt.symbolKeepAspect);\n  icon.setStyle(opt.itemStyle);\n  icon.rotation = (opt.iconRotate || 0) * Math.PI / 180;\n  icon.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\n  if (symboType.indexOf('empty') > -1) {\n    icon.style.stroke = icon.style.fill;\n    icon.style.fill = tokens.color.neutral00;\n    icon.style.lineWidth = 2;\n  }\n  return icon;\n}\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\n  // downplay before unselect\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: seriesName != null ? seriesName : dataName\n  });\n  // highlight after select\n  // TODO highlight immediately may cause animation loss.\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\n}\nfunction isUseHoverLayer(api) {\n  var list = api.getZr().storage.getDisplayList();\n  var emphasisState;\n  var i = 0;\n  var len = list.length;\n  while (i < len && !(emphasisState = list[i].states.emphasis)) {\n    i++;\n  }\n  return emphasisState && emphasisState.hoverLayer;\n}\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\nexport default LegendView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}