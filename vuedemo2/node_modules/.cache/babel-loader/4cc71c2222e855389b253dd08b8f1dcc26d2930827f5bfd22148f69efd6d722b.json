{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport RoamController from './RoamController.js';\nimport * as roamHelper from '../../component/helper/roamHelper.js';\nimport * as graphic from '../../util/graphic.js';\nimport { toggleHoverEmphasis, enableComponentHighDownFeatures, setDefaultStateProxy } from '../../util/states.js';\nimport geoSourceManager from '../../coord/geo/geoSourceManager.js';\nimport { getUID } from '../../util/component.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal.js';\nimport Displayable from 'zrender/lib/graphic/Displayable.js';\nimport { makeInner } from '../../util/model.js';\n/**\n * Only these tags enable use `itemStyle` if they are named in SVG.\n * Other tags like <text> <tspan> <image> might not suitable for `itemStyle`.\n * They will not be considered to be styled until some requirements come.\n */\nvar OPTION_STYLE_ENABLED_TAGS = ['rect', 'circle', 'line', 'ellipse', 'polygon', 'polyline', 'path'];\nvar OPTION_STYLE_ENABLED_TAG_MAP = zrUtil.createHashMap(OPTION_STYLE_ENABLED_TAGS);\nvar STATE_TRIGGER_TAG_MAP = zrUtil.createHashMap(OPTION_STYLE_ENABLED_TAGS.concat(['g']));\nvar LABEL_HOST_MAP = zrUtil.createHashMap(OPTION_STYLE_ENABLED_TAGS.concat(['g']));\nvar mapLabelRaw = makeInner();\nfunction getFixedItemStyle(model) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor');\n  // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n  return itemStyle;\n}\n// Only stroke can be used for line.\n// Using fill in style if stroke not exits.\n// TODO Not sure yet. Perhaps a separate `lineStyle`?\nfunction fixLineStyle(styleHost) {\n  var style = styleHost.style;\n  if (style) {\n    style.stroke = style.stroke || style.fill;\n    style.fill = null;\n  }\n}\nvar MapDraw = /** @class */function () {\n  function MapDraw(api) {\n    var group = this.group = new graphic.Group();\n    var transformGroup = this._transformGroup = new graphic.Group();\n    group.add(transformGroup);\n    this.uid = getUID('ec_map_draw');\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: transformGroup\n    };\n    transformGroup.add(this._regionsGroup = new graphic.Group());\n    transformGroup.add(this._svgGroup = new graphic.Group());\n  }\n  MapDraw.prototype.draw = function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo';\n    // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var regionsGroup = this._regionsGroup;\n    var transformGroup = this._transformGroup;\n    var transformInfo = geo.getTransformInfo();\n    var transformInfoRaw = transformInfo.raw;\n    var transformInfoRoam = transformInfo.roam;\n    // No animation when first draw or in action\n    var isFirstDraw = !regionsGroup.childAt(0) || payload;\n    var clip = mapOrGeoModel.getShallow('clip', true);\n    var clipRect;\n    if (clip) {\n      clipRect = geo.getViewRect().clone();\n      this.group.setClipPath(new graphic.Rect({\n        shape: clipRect.clone()\n      }));\n    } else {\n      this.group.removeClipPath();\n    }\n    if (isFirstDraw) {\n      transformGroup.x = transformInfoRoam.x;\n      transformGroup.y = transformInfoRoam.y;\n      transformGroup.scaleX = transformInfoRoam.scaleX;\n      transformGroup.scaleY = transformInfoRoam.scaleY;\n      transformGroup.dirty();\n    } else {\n      graphic.updateProps(transformGroup, transformInfoRoam, mapOrGeoModel);\n    }\n    var isVisualEncodedByVisualMap = data && data.getVisual('visualMeta') && data.getVisual('visualMeta').length > 0;\n    var viewBuildCtx = {\n      api: api,\n      geo: geo,\n      mapOrGeoModel: mapOrGeoModel,\n      data: data,\n      isVisualEncodedByVisualMap: isVisualEncodedByVisualMap,\n      isGeo: isGeo,\n      transformInfoRaw: transformInfoRaw\n    };\n    if (geo.resourceType === 'geoJSON') {\n      this._buildGeoJSON(viewBuildCtx);\n    } else if (geo.resourceType === 'geoSVG') {\n      this._buildSVG(viewBuildCtx);\n    }\n    this._updateController(mapOrGeoModel, clipRect, ecModel, api);\n    this._updateMapSelectHandler(mapOrGeoModel, regionsGroup, api, fromView);\n  };\n  MapDraw.prototype._buildGeoJSON = function (viewBuildCtx) {\n    var regionsGroupByName = this._regionsGroupByName = zrUtil.createHashMap();\n    var regionsInfoByName = zrUtil.createHashMap();\n    var regionsGroup = this._regionsGroup;\n    var transformInfoRaw = viewBuildCtx.transformInfoRaw;\n    var mapOrGeoModel = viewBuildCtx.mapOrGeoModel;\n    var data = viewBuildCtx.data;\n    var projection = viewBuildCtx.geo.projection;\n    var projectionStream = projection && projection.stream;\n    function transformPoint(point, project) {\n      if (project) {\n        // projection may return null point.\n        point = project(point);\n      }\n      return point && [point[0] * transformInfoRaw.scaleX + transformInfoRaw.x, point[1] * transformInfoRaw.scaleY + transformInfoRaw.y];\n    }\n    ;\n    function transformPolygonPoints(inPoints) {\n      var outPoints = [];\n      // If projectionStream is provided. Use it instead of single point project.\n      var project = !projectionStream && projection && projection.project;\n      for (var i = 0; i < inPoints.length; ++i) {\n        var newPt = transformPoint(inPoints[i], project);\n        newPt && outPoints.push(newPt);\n      }\n      return outPoints;\n    }\n    function getPolyShape(points) {\n      return {\n        shape: {\n          points: transformPolygonPoints(points)\n        }\n      };\n    }\n    regionsGroup.removeAll();\n    // Only when the resource is GeoJSON, there is `geo.regions`.\n    zrUtil.each(viewBuildCtx.geo.regions, function (region) {\n      var regionName = region.name;\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = regionsGroupByName.get(regionName);\n      var _a = regionsInfoByName.get(regionName) || {},\n        dataIdx = _a.dataIdx,\n        regionModel = _a.regionModel;\n      if (!regionGroup) {\n        regionGroup = regionsGroupByName.set(regionName, new graphic.Group());\n        regionsGroup.add(regionGroup);\n        dataIdx = data ? data.indexOfName(regionName) : null;\n        regionModel = viewBuildCtx.isGeo ? mapOrGeoModel.getRegionModel(regionName) : data ? data.getItemModel(dataIdx) : null;\n        var silent = regionModel.get('silent', true);\n        silent != null && (regionGroup.silent = silent);\n        regionsInfoByName.set(regionName, {\n          dataIdx: dataIdx,\n          regionModel: regionModel\n        });\n      }\n      var polygonSubpaths = [];\n      var polylineSubpaths = [];\n      zrUtil.each(region.geometries, function (geometry) {\n        // Polygon and MultiPolygon\n        if (geometry.type === 'polygon') {\n          var polys = [geometry.exterior].concat(geometry.interiors || []);\n          if (projectionStream) {\n            polys = projectPolys(polys, projectionStream);\n          }\n          zrUtil.each(polys, function (poly) {\n            polygonSubpaths.push(new graphic.Polygon(getPolyShape(poly)));\n          });\n        }\n        // LineString and MultiLineString\n        else {\n          var points = geometry.points;\n          if (projectionStream) {\n            points = projectPolys(points, projectionStream, true);\n          }\n          zrUtil.each(points, function (points) {\n            polylineSubpaths.push(new graphic.Polyline(getPolyShape(points)));\n          });\n        }\n      });\n      var centerPt = transformPoint(region.getCenter(), projection && projection.project);\n      function createCompoundPath(subpaths, isLine) {\n        if (!subpaths.length) {\n          return;\n        }\n        var compoundPath = new graphic.CompoundPath({\n          culling: true,\n          segmentIgnoreThreshold: 1,\n          shape: {\n            paths: subpaths\n          }\n        });\n        regionGroup.add(compoundPath);\n        applyOptionStyleForRegion(viewBuildCtx, compoundPath, dataIdx, regionModel);\n        resetLabelForRegion(viewBuildCtx, compoundPath, regionName, regionModel, mapOrGeoModel, dataIdx, centerPt);\n        if (isLine) {\n          fixLineStyle(compoundPath);\n          zrUtil.each(compoundPath.states, fixLineStyle);\n        }\n      }\n      createCompoundPath(polygonSubpaths);\n      createCompoundPath(polylineSubpaths, true);\n    });\n    // Ensure children have been added to `regionGroup` before calling them.\n    regionsGroupByName.each(function (regionGroup, regionName) {\n      var _a = regionsInfoByName.get(regionName),\n        dataIdx = _a.dataIdx,\n        regionModel = _a.regionModel;\n      resetEventTriggerForRegion(viewBuildCtx, regionGroup, regionName, regionModel, mapOrGeoModel, dataIdx);\n      resetTooltipForRegion(viewBuildCtx, regionGroup, regionName, regionModel, mapOrGeoModel);\n      resetStateTriggerForRegion(viewBuildCtx, regionGroup, regionName, regionModel, mapOrGeoModel);\n    }, this);\n  };\n  MapDraw.prototype._buildSVG = function (viewBuildCtx) {\n    var mapName = viewBuildCtx.geo.map;\n    var transformInfoRaw = viewBuildCtx.transformInfoRaw;\n    this._svgGroup.x = transformInfoRaw.x;\n    this._svgGroup.y = transformInfoRaw.y;\n    this._svgGroup.scaleX = transformInfoRaw.scaleX;\n    this._svgGroup.scaleY = transformInfoRaw.scaleY;\n    if (this._svgResourceChanged(mapName)) {\n      this._freeSVG();\n      this._useSVG(mapName);\n    }\n    var svgDispatcherMap = this._svgDispatcherMap = zrUtil.createHashMap();\n    var focusSelf = false;\n    zrUtil.each(this._svgGraphicRecord.named, function (namedItem) {\n      // Note that we also allow different elements have the same name.\n      // For example, a glyph of a city and the label of the city have\n      // the same name and their tooltip info can be defined in a single\n      // region option.\n      var regionName = namedItem.name;\n      var mapOrGeoModel = viewBuildCtx.mapOrGeoModel;\n      var data = viewBuildCtx.data;\n      var svgNodeTagLower = namedItem.svgNodeTagLower;\n      var el = namedItem.el;\n      var dataIdx = data ? data.indexOfName(regionName) : null;\n      var regionModel = mapOrGeoModel.getRegionModel(regionName);\n      if (OPTION_STYLE_ENABLED_TAG_MAP.get(svgNodeTagLower) != null && el instanceof Displayable) {\n        applyOptionStyleForRegion(viewBuildCtx, el, dataIdx, regionModel);\n      }\n      if (el instanceof Displayable) {\n        el.culling = true;\n      }\n      var silent = regionModel.get('silent', true);\n      silent != null && (el.silent = silent);\n      // We do not know how the SVG like so we'd better not to change z2.\n      // Otherwise it might bring some unexpected result. For example,\n      // an area hovered that make some inner city can not be clicked.\n      el.z2EmphasisLift = 0;\n      // If self named:\n      if (!namedItem.namedFrom) {\n        // label should batter to be displayed based on the center of <g>\n        // if it is named rather than displayed on each child.\n        if (LABEL_HOST_MAP.get(svgNodeTagLower) != null) {\n          resetLabelForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel, dataIdx, null);\n        }\n        resetEventTriggerForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel, dataIdx);\n        resetTooltipForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel);\n        if (STATE_TRIGGER_TAG_MAP.get(svgNodeTagLower) != null) {\n          var focus_1 = resetStateTriggerForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel);\n          if (focus_1 === 'self') {\n            focusSelf = true;\n          }\n          var els = svgDispatcherMap.get(regionName) || svgDispatcherMap.set(regionName, []);\n          els.push(el);\n        }\n      }\n    }, this);\n    this._enableBlurEntireSVG(focusSelf, viewBuildCtx);\n  };\n  MapDraw.prototype._enableBlurEntireSVG = function (focusSelf, viewBuildCtx) {\n    // It's a little complicated to support blurring the entire geoSVG in series-map.\n    // So do not support it until some requirements come.\n    // At present, in series-map, only regions can be blurred.\n    if (focusSelf && viewBuildCtx.isGeo) {\n      var blurStyle = viewBuildCtx.mapOrGeoModel.getModel(['blur', 'itemStyle']).getItemStyle();\n      // Only support `opacity` here. Because not sure that other props are suitable for\n      // all of the elements generated by SVG (especially for Text/TSpan/Image/... ).\n      var opacity_1 = blurStyle.opacity;\n      this._svgGraphicRecord.root.traverse(function (el) {\n        if (!el.isGroup) {\n          // PENDING: clear those settings to SVG elements when `_freeSVG`.\n          // (Currently it happen not to be needed.)\n          setDefaultStateProxy(el);\n          var style = el.ensureState('blur').style || {};\n          // Do not overwrite the region style that already set from region option.\n          if (style.opacity == null && opacity_1 != null) {\n            style.opacity = opacity_1;\n          }\n          // If `ensureState('blur').style = {}`, there will be default opacity.\n          // Enable `stateTransition` (animation).\n          el.ensureState('emphasis');\n        }\n      });\n    }\n  };\n  MapDraw.prototype.remove = function () {\n    this._regionsGroup.removeAll();\n    this._regionsGroupByName = null;\n    this._svgGroup.removeAll();\n    this._freeSVG();\n    this._controller.dispose();\n    this._controllerHost = null;\n  };\n  MapDraw.prototype.findHighDownDispatchers = function (name, geoModel) {\n    if (name == null) {\n      return [];\n    }\n    var geo = geoModel.coordinateSystem;\n    if (geo.resourceType === 'geoJSON') {\n      var regionsGroupByName = this._regionsGroupByName;\n      if (regionsGroupByName) {\n        var regionGroup = regionsGroupByName.get(name);\n        return regionGroup ? [regionGroup] : [];\n      }\n    } else if (geo.resourceType === 'geoSVG') {\n      return this._svgDispatcherMap && this._svgDispatcherMap.get(name) || [];\n    }\n  };\n  MapDraw.prototype._svgResourceChanged = function (mapName) {\n    return this._svgMapName !== mapName;\n  };\n  MapDraw.prototype._useSVG = function (mapName) {\n    var resource = geoSourceManager.getGeoResource(mapName);\n    if (resource && resource.type === 'geoSVG') {\n      var svgGraphic = resource.useGraphic(this.uid);\n      this._svgGroup.add(svgGraphic.root);\n      this._svgGraphicRecord = svgGraphic;\n      this._svgMapName = mapName;\n    }\n  };\n  MapDraw.prototype._freeSVG = function () {\n    var mapName = this._svgMapName;\n    if (mapName == null) {\n      return;\n    }\n    var resource = geoSourceManager.getGeoResource(mapName);\n    if (resource && resource.type === 'geoSVG') {\n      resource.freeGraphic(this.uid);\n    }\n    this._svgGraphicRecord = null;\n    this._svgDispatcherMap = null;\n    this._svgGroup.removeAll();\n    this._svgMapName = null;\n  };\n  MapDraw.prototype._updateController = function (mapOrGeoModel, clipRect, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom();\n    // roamType is will be set default true if it is null\n    controller.enable(mapOrGeoModel.get('roam') || false, {\n      api: api,\n      zInfo: {\n        component: mapOrGeoModel\n      },\n      triggerInfo: {\n        roamTrigger: mapOrGeoModel.get('roamTrigger'),\n        isInSelf: function (e, x, y) {\n          return geo.containPoint([x, y]);\n        },\n        isInClip: function (e, x, y) {\n          return !clipRect || clipRect.contain(x, y);\n        }\n      }\n    });\n    var mainType = mapOrGeoModel.mainType;\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n    controller.off('pan').on('pan', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: e.dx,\n        dy: e.dy,\n        animation: {\n          duration: 0\n        }\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        totalZoom: controllerHost.zoom,\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY,\n        animation: {\n          duration: 0\n        }\n      }));\n    }, this);\n  };\n  /**\n   * FIXME: this is a temporarily workaround.\n   * When `geoRoam` the elements need to be reset in `MapView['render']`, because the props like\n   * `ignore` might have been modified by `LabelManager`, and `LabelManager#addLabelsOfSeries`\n   * will subsequently cache `defaultAttr` like `ignore`. If do not do this reset, the modified\n   * props will have no chance to be restored.\n   * Note: This reset should be after `clearStates` in `renderSeries` because `useStates` in\n   * `renderSeries` will cache the modified `ignore` to `el._normalState`.\n   * TODO:\n   * Use clone/immutable in `LabelManager`?\n   */\n  MapDraw.prototype.resetForLabelLayout = function () {\n    this.group.traverse(function (el) {\n      var label = el.getTextContent();\n      if (label) {\n        label.ignore = mapLabelRaw(label).ignore;\n      }\n    });\n  };\n  MapDraw.prototype._updateMapSelectHandler = function (mapOrGeoModel, regionsGroup, api, fromView) {\n    var mapDraw = this;\n    regionsGroup.off('mousedown');\n    regionsGroup.off('click');\n    // @ts-ignore FIXME:TS resolve type conflict\n    if (mapOrGeoModel.get('selectedMode')) {\n      regionsGroup.on('mousedown', function () {\n        mapDraw._mouseDownFlag = true;\n      });\n      regionsGroup.on('click', function (e) {\n        if (!mapDraw._mouseDownFlag) {\n          return;\n        }\n        mapDraw._mouseDownFlag = false;\n      });\n    }\n  };\n  return MapDraw;\n}();\n;\nfunction applyOptionStyleForRegion(viewBuildCtx, el, dataIndex, regionModel) {\n  // All of the path are using `itemStyle`, because\n  // (1) Some SVG also use fill on polyline (The different between\n  // polyline and polygon is \"open\" or \"close\" but not fill or not).\n  // (2) For the common props like opacity, if some use itemStyle\n  // and some use `lineStyle`, it might confuse users.\n  // (3) Most SVG use <path>, where can not detect whether to draw a \"line\"\n  // or a filled shape, so use `itemStyle` for <path>.\n  var normalStyleModel = regionModel.getModel('itemStyle');\n  var emphasisStyleModel = regionModel.getModel(['emphasis', 'itemStyle']);\n  var blurStyleModel = regionModel.getModel(['blur', 'itemStyle']);\n  var selectStyleModel = regionModel.getModel(['select', 'itemStyle']);\n  // NOTE: DON'T use 'style' in visual when drawing map.\n  // This component is used for drawing underlying map for both geo component and map series.\n  var normalStyle = getFixedItemStyle(normalStyleModel);\n  var emphasisStyle = getFixedItemStyle(emphasisStyleModel);\n  var selectStyle = getFixedItemStyle(selectStyleModel);\n  var blurStyle = getFixedItemStyle(blurStyleModel);\n  // Update the itemStyle if has data visual\n  var data = viewBuildCtx.data;\n  if (data) {\n    // Only visual color of each item will be used. It can be encoded by visualMap\n    // But visual color of series is used in symbol drawing\n    // Visual color for each series is for the symbol draw\n    var style = data.getItemVisual(dataIndex, 'style');\n    var decal = data.getItemVisual(dataIndex, 'decal');\n    if (viewBuildCtx.isVisualEncodedByVisualMap && style.fill) {\n      normalStyle.fill = style.fill;\n    }\n    if (decal) {\n      normalStyle.decal = createOrUpdatePatternFromDecal(decal, viewBuildCtx.api);\n    }\n  }\n  // SVG text, tspan and image can be named but not supporeted\n  // to be styled by region option yet.\n  el.setStyle(normalStyle);\n  el.style.strokeNoScale = true;\n  el.ensureState('emphasis').style = emphasisStyle;\n  el.ensureState('select').style = selectStyle;\n  el.ensureState('blur').style = blurStyle;\n  // Enable blur\n  setDefaultStateProxy(el);\n}\nfunction resetLabelForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel,\n// Exist only if `viewBuildCtx.data` exists.\ndataIdx,\n// If labelXY not provided, use `textConfig.position: 'inside'`\nlabelXY) {\n  var data = viewBuildCtx.data;\n  var isGeo = viewBuildCtx.isGeo;\n  var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n  var itemLayout = data && data.getItemLayout(dataIdx);\n  // In the following cases label will be drawn\n  // 1. In map series and data value is NaN\n  // 2. In geo component\n  // 3. Region has no series legendIcon, which will be add a showLabel flag in mapSymbolLayout\n  if (isGeo || isDataNaN || itemLayout && itemLayout.showLabel) {\n    var query = !isGeo ? dataIdx : regionName;\n    var labelFetcher = void 0;\n    // Consider dataIdx not found.\n    if (!data || dataIdx >= 0) {\n      labelFetcher = mapOrGeoModel;\n    }\n    var specifiedTextOpt = labelXY ? {\n      normal: {\n        align: 'center',\n        verticalAlign: 'middle'\n      }\n    } : null;\n    // Caveat: must be called after `setDefaultStateProxy(el);` called.\n    // because textContent will be assign with `el.stateProxy` inside.\n    setLabelStyle(el, getLabelStatesModels(regionModel), {\n      labelFetcher: labelFetcher,\n      labelDataIndex: query,\n      defaultText: regionName\n    }, specifiedTextOpt);\n    var textEl = el.getTextContent();\n    if (textEl) {\n      mapLabelRaw(textEl).ignore = textEl.ignore;\n      if (el.textConfig && labelXY) {\n        // Compute a relative offset based on the el bounding rect.\n        var rect = el.getBoundingRect().clone();\n        // Need to make sure the percent position base on the same rect in normal and\n        // emphasis state. Otherwise if using boundingRect of el, but the emphasis state\n        // has borderWidth (even 0.5px), the text position will be changed obviously\n        // if the position is very big like ['1234%', '1345%'].\n        el.textConfig.layoutRect = rect;\n        el.textConfig.position = [(labelXY[0] - rect.x) / rect.width * 100 + '%', (labelXY[1] - rect.y) / rect.height * 100 + '%'];\n      }\n    }\n    // PENDING:\n    // If labelLayout is enabled (test/label-layout.html), el.dataIndex should be specified.\n    // But el.dataIndex is also used to determine whether user event should be triggered,\n    // where el.seriesIndex or el.dataModel must be specified. At present for a single el\n    // there is not case that \"only label layout enabled but user event disabled\", so here\n    // we depends `resetEventTriggerForRegion` to do the job of setting `el.dataIndex`.\n    el.disableLabelAnimation = true;\n  } else {\n    el.removeTextContent();\n    el.removeTextConfig();\n    el.disableLabelAnimation = null;\n  }\n}\nfunction resetEventTriggerForRegion(viewBuildCtx, eventTrigger, regionName, regionModel, mapOrGeoModel,\n// Exist only if `viewBuildCtx.data` exists.\ndataIdx) {\n  // setItemGraphicEl, setHoverStyle after all polygons and labels\n  // are added to the regionGroup\n  if (viewBuildCtx.data) {\n    // FIXME: when series-map use a SVG map, and there are duplicated name specified\n    // on different SVG elements, after `data.setItemGraphicEl(...)`:\n    // (1) all of them will be mounted with `dataIndex`, `seriesIndex`, so that tooltip\n    // can be triggered only mouse hover. That's correct.\n    // (2) only the last element will be kept in `data`, so that if trigger tooltip\n    // by `dispatchAction`, only the last one can be found and triggered. That might be\n    // not correct. We will fix it in future if anyone demanding that.\n    viewBuildCtx.data.setItemGraphicEl(dataIdx, eventTrigger);\n  }\n  // series-map will not trigger \"geoselectchange\" no matter it is\n  // based on a declared geo component. Because series-map will\n  // trigger \"selectchange\". If it trigger both the two events,\n  // If users call `chart.dispatchAction({type: 'toggleSelect'})`,\n  // it not easy to also fire event \"geoselectchanged\".\n  else {\n    // Package custom mouse event for geo component\n    getECData(eventTrigger).eventData = {\n      componentType: 'geo',\n      componentIndex: mapOrGeoModel.componentIndex,\n      geoIndex: mapOrGeoModel.componentIndex,\n      name: regionName,\n      region: regionModel && regionModel.option || {}\n    };\n  }\n}\nfunction resetTooltipForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel) {\n  if (!viewBuildCtx.data) {\n    graphic.setTooltipConfig({\n      el: el,\n      componentModel: mapOrGeoModel,\n      itemName: regionName,\n      // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n      itemTooltipOption: regionModel.get('tooltip')\n    });\n  }\n}\nfunction resetStateTriggerForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel) {\n  // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n  el.highDownSilentOnTouch = !!mapOrGeoModel.get('selectedMode');\n  // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n  var emphasisModel = regionModel.getModel('emphasis');\n  var focus = emphasisModel.get('focus');\n  toggleHoverEmphasis(el, focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  if (viewBuildCtx.isGeo) {\n    enableComponentHighDownFeatures(el, mapOrGeoModel, regionName);\n  }\n  return focus;\n}\nfunction projectPolys(rings,\n// Polygons include exterior and interiors. Or polylines.\ncreateStream, isLine) {\n  var polygons = [];\n  var curPoly;\n  function startPolygon() {\n    curPoly = [];\n  }\n  function endPolygon() {\n    if (curPoly.length) {\n      polygons.push(curPoly);\n      curPoly = [];\n    }\n  }\n  var stream = createStream({\n    polygonStart: startPolygon,\n    polygonEnd: endPolygon,\n    lineStart: startPolygon,\n    lineEnd: endPolygon,\n    point: function (x, y) {\n      // May have NaN values from stream.\n      if (isFinite(x) && isFinite(y)) {\n        curPoly.push([x, y]);\n      }\n    },\n    sphere: function () {}\n  });\n  !isLine && stream.polygonStart();\n  zrUtil.each(rings, function (ring) {\n    stream.lineStart();\n    for (var i = 0; i < ring.length; i++) {\n      stream.point(ring[i][0], ring[i][1]);\n    }\n    stream.lineEnd();\n  });\n  !isLine && stream.polygonEnd();\n  return polygons;\n}\nexport default MapDraw;\n// @ts-ignore FIXME:TS fix the \"compatible with each other\"?","map":{"version":3,"names":["zrUtil","RoamController","roamHelper","graphic","toggleHoverEmphasis","enableComponentHighDownFeatures","setDefaultStateProxy","geoSourceManager","getUID","setLabelStyle","getLabelStatesModels","getECData","createOrUpdatePatternFromDecal","Displayable","makeInner","OPTION_STYLE_ENABLED_TAGS","OPTION_STYLE_ENABLED_TAG_MAP","createHashMap","STATE_TRIGGER_TAG_MAP","concat","LABEL_HOST_MAP","mapLabelRaw","getFixedItemStyle","model","itemStyle","getItemStyle","areaColor","get","fill","fixLineStyle","styleHost","style","stroke","MapDraw","api","group","Group","transformGroup","_transformGroup","add","uid","_controller","getZr","_controllerHost","target","_regionsGroup","_svgGroup","prototype","draw","mapOrGeoModel","ecModel","fromView","payload","isGeo","mainType","data","getData","eachComponent","subType","mapSeries","getHostGeoModel","geo","coordinateSystem","regionsGroup","transformInfo","getTransformInfo","transformInfoRaw","raw","transformInfoRoam","roam","isFirstDraw","childAt","clip","getShallow","clipRect","getViewRect","clone","setClipPath","Rect","shape","removeClipPath","x","y","scaleX","scaleY","dirty","updateProps","isVisualEncodedByVisualMap","getVisual","length","viewBuildCtx","resourceType","_buildGeoJSON","_buildSVG","_updateController","_updateMapSelectHandler","regionsGroupByName","_regionsGroupByName","regionsInfoByName","projection","projectionStream","stream","transformPoint","point","project","transformPolygonPoints","inPoints","outPoints","i","newPt","push","getPolyShape","points","removeAll","each","regions","region","regionName","name","regionGroup","_a","dataIdx","regionModel","set","indexOfName","getRegionModel","getItemModel","silent","polygonSubpaths","polylineSubpaths","geometries","geometry","type","polys","exterior","interiors","projectPolys","poly","Polygon","Polyline","centerPt","getCenter","createCompoundPath","subpaths","isLine","compoundPath","CompoundPath","culling","segmentIgnoreThreshold","paths","applyOptionStyleForRegion","resetLabelForRegion","states","resetEventTriggerForRegion","resetTooltipForRegion","resetStateTriggerForRegion","mapName","map","_svgResourceChanged","_freeSVG","_useSVG","svgDispatcherMap","_svgDispatcherMap","focusSelf","_svgGraphicRecord","named","namedItem","svgNodeTagLower","el","z2EmphasisLift","namedFrom","focus_1","els","_enableBlurEntireSVG","blurStyle","getModel","opacity_1","opacity","root","traverse","isGroup","ensureState","remove","dispose","findHighDownDispatchers","geoModel","_svgMapName","resource","getGeoResource","svgGraphic","useGraphic","freeGraphic","controller","controllerHost","zoomLimit","zoom","getZoom","enable","zInfo","component","triggerInfo","roamTrigger","isInSelf","e","containPoint","isInClip","contain","makeActionBase","action","componentType","id","off","on","_mouseDownFlag","updateViewOnPan","dx","dy","dispatchAction","extend","animation","duration","updateViewOnZoom","scale","originX","originY","totalZoom","resetForLabelLayout","label","getTextContent","ignore","mapDraw","dataIndex","normalStyleModel","emphasisStyleModel","blurStyleModel","selectStyleModel","normalStyle","emphasisStyle","selectStyle","getItemVisual","decal","setStyle","strokeNoScale","labelXY","isDataNaN","isNaN","mapDimension","itemLayout","getItemLayout","showLabel","query","labelFetcher","specifiedTextOpt","normal","align","verticalAlign","labelDataIndex","defaultText","textEl","textConfig","rect","getBoundingRect","layoutRect","position","width","height","disableLabelAnimation","removeTextContent","removeTextConfig","eventTrigger","setItemGraphicEl","eventData","componentIndex","geoIndex","option","setTooltipConfig","componentModel","itemName","itemTooltipOption","highDownSilentOnTouch","emphasisModel","focus","rings","createStream","polygons","curPoly","startPolygon","endPolygon","polygonStart","polygonEnd","lineStart","lineEnd","isFinite","sphere","ring"],"sources":["D:/Program Files/JetBrains/IDEAProject/springboot-vue-wms_test/vuedemo2/node_modules/echarts/lib/component/helper/MapDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport RoamController from './RoamController.js';\nimport * as roamHelper from '../../component/helper/roamHelper.js';\nimport * as graphic from '../../util/graphic.js';\nimport { toggleHoverEmphasis, enableComponentHighDownFeatures, setDefaultStateProxy } from '../../util/states.js';\nimport geoSourceManager from '../../coord/geo/geoSourceManager.js';\nimport { getUID } from '../../util/component.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal.js';\nimport Displayable from 'zrender/lib/graphic/Displayable.js';\nimport { makeInner } from '../../util/model.js';\n/**\n * Only these tags enable use `itemStyle` if they are named in SVG.\n * Other tags like <text> <tspan> <image> might not suitable for `itemStyle`.\n * They will not be considered to be styled until some requirements come.\n */\nvar OPTION_STYLE_ENABLED_TAGS = ['rect', 'circle', 'line', 'ellipse', 'polygon', 'polyline', 'path'];\nvar OPTION_STYLE_ENABLED_TAG_MAP = zrUtil.createHashMap(OPTION_STYLE_ENABLED_TAGS);\nvar STATE_TRIGGER_TAG_MAP = zrUtil.createHashMap(OPTION_STYLE_ENABLED_TAGS.concat(['g']));\nvar LABEL_HOST_MAP = zrUtil.createHashMap(OPTION_STYLE_ENABLED_TAGS.concat(['g']));\nvar mapLabelRaw = makeInner();\nfunction getFixedItemStyle(model) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor');\n  // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n  return itemStyle;\n}\n// Only stroke can be used for line.\n// Using fill in style if stroke not exits.\n// TODO Not sure yet. Perhaps a separate `lineStyle`?\nfunction fixLineStyle(styleHost) {\n  var style = styleHost.style;\n  if (style) {\n    style.stroke = style.stroke || style.fill;\n    style.fill = null;\n  }\n}\nvar MapDraw = /** @class */function () {\n  function MapDraw(api) {\n    var group = this.group = new graphic.Group();\n    var transformGroup = this._transformGroup = new graphic.Group();\n    group.add(transformGroup);\n    this.uid = getUID('ec_map_draw');\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: transformGroup\n    };\n    transformGroup.add(this._regionsGroup = new graphic.Group());\n    transformGroup.add(this._svgGroup = new graphic.Group());\n  }\n  MapDraw.prototype.draw = function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo';\n    // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var regionsGroup = this._regionsGroup;\n    var transformGroup = this._transformGroup;\n    var transformInfo = geo.getTransformInfo();\n    var transformInfoRaw = transformInfo.raw;\n    var transformInfoRoam = transformInfo.roam;\n    // No animation when first draw or in action\n    var isFirstDraw = !regionsGroup.childAt(0) || payload;\n    var clip = mapOrGeoModel.getShallow('clip', true);\n    var clipRect;\n    if (clip) {\n      clipRect = geo.getViewRect().clone();\n      this.group.setClipPath(new graphic.Rect({\n        shape: clipRect.clone()\n      }));\n    } else {\n      this.group.removeClipPath();\n    }\n    if (isFirstDraw) {\n      transformGroup.x = transformInfoRoam.x;\n      transformGroup.y = transformInfoRoam.y;\n      transformGroup.scaleX = transformInfoRoam.scaleX;\n      transformGroup.scaleY = transformInfoRoam.scaleY;\n      transformGroup.dirty();\n    } else {\n      graphic.updateProps(transformGroup, transformInfoRoam, mapOrGeoModel);\n    }\n    var isVisualEncodedByVisualMap = data && data.getVisual('visualMeta') && data.getVisual('visualMeta').length > 0;\n    var viewBuildCtx = {\n      api: api,\n      geo: geo,\n      mapOrGeoModel: mapOrGeoModel,\n      data: data,\n      isVisualEncodedByVisualMap: isVisualEncodedByVisualMap,\n      isGeo: isGeo,\n      transformInfoRaw: transformInfoRaw\n    };\n    if (geo.resourceType === 'geoJSON') {\n      this._buildGeoJSON(viewBuildCtx);\n    } else if (geo.resourceType === 'geoSVG') {\n      this._buildSVG(viewBuildCtx);\n    }\n    this._updateController(mapOrGeoModel, clipRect, ecModel, api);\n    this._updateMapSelectHandler(mapOrGeoModel, regionsGroup, api, fromView);\n  };\n  MapDraw.prototype._buildGeoJSON = function (viewBuildCtx) {\n    var regionsGroupByName = this._regionsGroupByName = zrUtil.createHashMap();\n    var regionsInfoByName = zrUtil.createHashMap();\n    var regionsGroup = this._regionsGroup;\n    var transformInfoRaw = viewBuildCtx.transformInfoRaw;\n    var mapOrGeoModel = viewBuildCtx.mapOrGeoModel;\n    var data = viewBuildCtx.data;\n    var projection = viewBuildCtx.geo.projection;\n    var projectionStream = projection && projection.stream;\n    function transformPoint(point, project) {\n      if (project) {\n        // projection may return null point.\n        point = project(point);\n      }\n      return point && [point[0] * transformInfoRaw.scaleX + transformInfoRaw.x, point[1] * transformInfoRaw.scaleY + transformInfoRaw.y];\n    }\n    ;\n    function transformPolygonPoints(inPoints) {\n      var outPoints = [];\n      // If projectionStream is provided. Use it instead of single point project.\n      var project = !projectionStream && projection && projection.project;\n      for (var i = 0; i < inPoints.length; ++i) {\n        var newPt = transformPoint(inPoints[i], project);\n        newPt && outPoints.push(newPt);\n      }\n      return outPoints;\n    }\n    function getPolyShape(points) {\n      return {\n        shape: {\n          points: transformPolygonPoints(points)\n        }\n      };\n    }\n    regionsGroup.removeAll();\n    // Only when the resource is GeoJSON, there is `geo.regions`.\n    zrUtil.each(viewBuildCtx.geo.regions, function (region) {\n      var regionName = region.name;\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = regionsGroupByName.get(regionName);\n      var _a = regionsInfoByName.get(regionName) || {},\n        dataIdx = _a.dataIdx,\n        regionModel = _a.regionModel;\n      if (!regionGroup) {\n        regionGroup = regionsGroupByName.set(regionName, new graphic.Group());\n        regionsGroup.add(regionGroup);\n        dataIdx = data ? data.indexOfName(regionName) : null;\n        regionModel = viewBuildCtx.isGeo ? mapOrGeoModel.getRegionModel(regionName) : data ? data.getItemModel(dataIdx) : null;\n        var silent = regionModel.get('silent', true);\n        silent != null && (regionGroup.silent = silent);\n        regionsInfoByName.set(regionName, {\n          dataIdx: dataIdx,\n          regionModel: regionModel\n        });\n      }\n      var polygonSubpaths = [];\n      var polylineSubpaths = [];\n      zrUtil.each(region.geometries, function (geometry) {\n        // Polygon and MultiPolygon\n        if (geometry.type === 'polygon') {\n          var polys = [geometry.exterior].concat(geometry.interiors || []);\n          if (projectionStream) {\n            polys = projectPolys(polys, projectionStream);\n          }\n          zrUtil.each(polys, function (poly) {\n            polygonSubpaths.push(new graphic.Polygon(getPolyShape(poly)));\n          });\n        }\n        // LineString and MultiLineString\n        else {\n          var points = geometry.points;\n          if (projectionStream) {\n            points = projectPolys(points, projectionStream, true);\n          }\n          zrUtil.each(points, function (points) {\n            polylineSubpaths.push(new graphic.Polyline(getPolyShape(points)));\n          });\n        }\n      });\n      var centerPt = transformPoint(region.getCenter(), projection && projection.project);\n      function createCompoundPath(subpaths, isLine) {\n        if (!subpaths.length) {\n          return;\n        }\n        var compoundPath = new graphic.CompoundPath({\n          culling: true,\n          segmentIgnoreThreshold: 1,\n          shape: {\n            paths: subpaths\n          }\n        });\n        regionGroup.add(compoundPath);\n        applyOptionStyleForRegion(viewBuildCtx, compoundPath, dataIdx, regionModel);\n        resetLabelForRegion(viewBuildCtx, compoundPath, regionName, regionModel, mapOrGeoModel, dataIdx, centerPt);\n        if (isLine) {\n          fixLineStyle(compoundPath);\n          zrUtil.each(compoundPath.states, fixLineStyle);\n        }\n      }\n      createCompoundPath(polygonSubpaths);\n      createCompoundPath(polylineSubpaths, true);\n    });\n    // Ensure children have been added to `regionGroup` before calling them.\n    regionsGroupByName.each(function (regionGroup, regionName) {\n      var _a = regionsInfoByName.get(regionName),\n        dataIdx = _a.dataIdx,\n        regionModel = _a.regionModel;\n      resetEventTriggerForRegion(viewBuildCtx, regionGroup, regionName, regionModel, mapOrGeoModel, dataIdx);\n      resetTooltipForRegion(viewBuildCtx, regionGroup, regionName, regionModel, mapOrGeoModel);\n      resetStateTriggerForRegion(viewBuildCtx, regionGroup, regionName, regionModel, mapOrGeoModel);\n    }, this);\n  };\n  MapDraw.prototype._buildSVG = function (viewBuildCtx) {\n    var mapName = viewBuildCtx.geo.map;\n    var transformInfoRaw = viewBuildCtx.transformInfoRaw;\n    this._svgGroup.x = transformInfoRaw.x;\n    this._svgGroup.y = transformInfoRaw.y;\n    this._svgGroup.scaleX = transformInfoRaw.scaleX;\n    this._svgGroup.scaleY = transformInfoRaw.scaleY;\n    if (this._svgResourceChanged(mapName)) {\n      this._freeSVG();\n      this._useSVG(mapName);\n    }\n    var svgDispatcherMap = this._svgDispatcherMap = zrUtil.createHashMap();\n    var focusSelf = false;\n    zrUtil.each(this._svgGraphicRecord.named, function (namedItem) {\n      // Note that we also allow different elements have the same name.\n      // For example, a glyph of a city and the label of the city have\n      // the same name and their tooltip info can be defined in a single\n      // region option.\n      var regionName = namedItem.name;\n      var mapOrGeoModel = viewBuildCtx.mapOrGeoModel;\n      var data = viewBuildCtx.data;\n      var svgNodeTagLower = namedItem.svgNodeTagLower;\n      var el = namedItem.el;\n      var dataIdx = data ? data.indexOfName(regionName) : null;\n      var regionModel = mapOrGeoModel.getRegionModel(regionName);\n      if (OPTION_STYLE_ENABLED_TAG_MAP.get(svgNodeTagLower) != null && el instanceof Displayable) {\n        applyOptionStyleForRegion(viewBuildCtx, el, dataIdx, regionModel);\n      }\n      if (el instanceof Displayable) {\n        el.culling = true;\n      }\n      var silent = regionModel.get('silent', true);\n      silent != null && (el.silent = silent);\n      // We do not know how the SVG like so we'd better not to change z2.\n      // Otherwise it might bring some unexpected result. For example,\n      // an area hovered that make some inner city can not be clicked.\n      el.z2EmphasisLift = 0;\n      // If self named:\n      if (!namedItem.namedFrom) {\n        // label should batter to be displayed based on the center of <g>\n        // if it is named rather than displayed on each child.\n        if (LABEL_HOST_MAP.get(svgNodeTagLower) != null) {\n          resetLabelForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel, dataIdx, null);\n        }\n        resetEventTriggerForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel, dataIdx);\n        resetTooltipForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel);\n        if (STATE_TRIGGER_TAG_MAP.get(svgNodeTagLower) != null) {\n          var focus_1 = resetStateTriggerForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel);\n          if (focus_1 === 'self') {\n            focusSelf = true;\n          }\n          var els = svgDispatcherMap.get(regionName) || svgDispatcherMap.set(regionName, []);\n          els.push(el);\n        }\n      }\n    }, this);\n    this._enableBlurEntireSVG(focusSelf, viewBuildCtx);\n  };\n  MapDraw.prototype._enableBlurEntireSVG = function (focusSelf, viewBuildCtx) {\n    // It's a little complicated to support blurring the entire geoSVG in series-map.\n    // So do not support it until some requirements come.\n    // At present, in series-map, only regions can be blurred.\n    if (focusSelf && viewBuildCtx.isGeo) {\n      var blurStyle = viewBuildCtx.mapOrGeoModel.getModel(['blur', 'itemStyle']).getItemStyle();\n      // Only support `opacity` here. Because not sure that other props are suitable for\n      // all of the elements generated by SVG (especially for Text/TSpan/Image/... ).\n      var opacity_1 = blurStyle.opacity;\n      this._svgGraphicRecord.root.traverse(function (el) {\n        if (!el.isGroup) {\n          // PENDING: clear those settings to SVG elements when `_freeSVG`.\n          // (Currently it happen not to be needed.)\n          setDefaultStateProxy(el);\n          var style = el.ensureState('blur').style || {};\n          // Do not overwrite the region style that already set from region option.\n          if (style.opacity == null && opacity_1 != null) {\n            style.opacity = opacity_1;\n          }\n          // If `ensureState('blur').style = {}`, there will be default opacity.\n          // Enable `stateTransition` (animation).\n          el.ensureState('emphasis');\n        }\n      });\n    }\n  };\n  MapDraw.prototype.remove = function () {\n    this._regionsGroup.removeAll();\n    this._regionsGroupByName = null;\n    this._svgGroup.removeAll();\n    this._freeSVG();\n    this._controller.dispose();\n    this._controllerHost = null;\n  };\n  MapDraw.prototype.findHighDownDispatchers = function (name, geoModel) {\n    if (name == null) {\n      return [];\n    }\n    var geo = geoModel.coordinateSystem;\n    if (geo.resourceType === 'geoJSON') {\n      var regionsGroupByName = this._regionsGroupByName;\n      if (regionsGroupByName) {\n        var regionGroup = regionsGroupByName.get(name);\n        return regionGroup ? [regionGroup] : [];\n      }\n    } else if (geo.resourceType === 'geoSVG') {\n      return this._svgDispatcherMap && this._svgDispatcherMap.get(name) || [];\n    }\n  };\n  MapDraw.prototype._svgResourceChanged = function (mapName) {\n    return this._svgMapName !== mapName;\n  };\n  MapDraw.prototype._useSVG = function (mapName) {\n    var resource = geoSourceManager.getGeoResource(mapName);\n    if (resource && resource.type === 'geoSVG') {\n      var svgGraphic = resource.useGraphic(this.uid);\n      this._svgGroup.add(svgGraphic.root);\n      this._svgGraphicRecord = svgGraphic;\n      this._svgMapName = mapName;\n    }\n  };\n  MapDraw.prototype._freeSVG = function () {\n    var mapName = this._svgMapName;\n    if (mapName == null) {\n      return;\n    }\n    var resource = geoSourceManager.getGeoResource(mapName);\n    if (resource && resource.type === 'geoSVG') {\n      resource.freeGraphic(this.uid);\n    }\n    this._svgGraphicRecord = null;\n    this._svgDispatcherMap = null;\n    this._svgGroup.removeAll();\n    this._svgMapName = null;\n  };\n  MapDraw.prototype._updateController = function (mapOrGeoModel, clipRect, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom();\n    // roamType is will be set default true if it is null\n    controller.enable(mapOrGeoModel.get('roam') || false, {\n      api: api,\n      zInfo: {\n        component: mapOrGeoModel\n      },\n      triggerInfo: {\n        roamTrigger: mapOrGeoModel.get('roamTrigger'),\n        isInSelf: function (e, x, y) {\n          return geo.containPoint([x, y]);\n        },\n        isInClip: function (e, x, y) {\n          return !clipRect || clipRect.contain(x, y);\n        }\n      }\n    });\n    var mainType = mapOrGeoModel.mainType;\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n    controller.off('pan').on('pan', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: e.dx,\n        dy: e.dy,\n        animation: {\n          duration: 0\n        }\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        totalZoom: controllerHost.zoom,\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY,\n        animation: {\n          duration: 0\n        }\n      }));\n    }, this);\n  };\n  /**\n   * FIXME: this is a temporarily workaround.\n   * When `geoRoam` the elements need to be reset in `MapView['render']`, because the props like\n   * `ignore` might have been modified by `LabelManager`, and `LabelManager#addLabelsOfSeries`\n   * will subsequently cache `defaultAttr` like `ignore`. If do not do this reset, the modified\n   * props will have no chance to be restored.\n   * Note: This reset should be after `clearStates` in `renderSeries` because `useStates` in\n   * `renderSeries` will cache the modified `ignore` to `el._normalState`.\n   * TODO:\n   * Use clone/immutable in `LabelManager`?\n   */\n  MapDraw.prototype.resetForLabelLayout = function () {\n    this.group.traverse(function (el) {\n      var label = el.getTextContent();\n      if (label) {\n        label.ignore = mapLabelRaw(label).ignore;\n      }\n    });\n  };\n  MapDraw.prototype._updateMapSelectHandler = function (mapOrGeoModel, regionsGroup, api, fromView) {\n    var mapDraw = this;\n    regionsGroup.off('mousedown');\n    regionsGroup.off('click');\n    // @ts-ignore FIXME:TS resolve type conflict\n    if (mapOrGeoModel.get('selectedMode')) {\n      regionsGroup.on('mousedown', function () {\n        mapDraw._mouseDownFlag = true;\n      });\n      regionsGroup.on('click', function (e) {\n        if (!mapDraw._mouseDownFlag) {\n          return;\n        }\n        mapDraw._mouseDownFlag = false;\n      });\n    }\n  };\n  return MapDraw;\n}();\n;\nfunction applyOptionStyleForRegion(viewBuildCtx, el, dataIndex, regionModel) {\n  // All of the path are using `itemStyle`, because\n  // (1) Some SVG also use fill on polyline (The different between\n  // polyline and polygon is \"open\" or \"close\" but not fill or not).\n  // (2) For the common props like opacity, if some use itemStyle\n  // and some use `lineStyle`, it might confuse users.\n  // (3) Most SVG use <path>, where can not detect whether to draw a \"line\"\n  // or a filled shape, so use `itemStyle` for <path>.\n  var normalStyleModel = regionModel.getModel('itemStyle');\n  var emphasisStyleModel = regionModel.getModel(['emphasis', 'itemStyle']);\n  var blurStyleModel = regionModel.getModel(['blur', 'itemStyle']);\n  var selectStyleModel = regionModel.getModel(['select', 'itemStyle']);\n  // NOTE: DON'T use 'style' in visual when drawing map.\n  // This component is used for drawing underlying map for both geo component and map series.\n  var normalStyle = getFixedItemStyle(normalStyleModel);\n  var emphasisStyle = getFixedItemStyle(emphasisStyleModel);\n  var selectStyle = getFixedItemStyle(selectStyleModel);\n  var blurStyle = getFixedItemStyle(blurStyleModel);\n  // Update the itemStyle if has data visual\n  var data = viewBuildCtx.data;\n  if (data) {\n    // Only visual color of each item will be used. It can be encoded by visualMap\n    // But visual color of series is used in symbol drawing\n    // Visual color for each series is for the symbol draw\n    var style = data.getItemVisual(dataIndex, 'style');\n    var decal = data.getItemVisual(dataIndex, 'decal');\n    if (viewBuildCtx.isVisualEncodedByVisualMap && style.fill) {\n      normalStyle.fill = style.fill;\n    }\n    if (decal) {\n      normalStyle.decal = createOrUpdatePatternFromDecal(decal, viewBuildCtx.api);\n    }\n  }\n  // SVG text, tspan and image can be named but not supporeted\n  // to be styled by region option yet.\n  el.setStyle(normalStyle);\n  el.style.strokeNoScale = true;\n  el.ensureState('emphasis').style = emphasisStyle;\n  el.ensureState('select').style = selectStyle;\n  el.ensureState('blur').style = blurStyle;\n  // Enable blur\n  setDefaultStateProxy(el);\n}\nfunction resetLabelForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel,\n// Exist only if `viewBuildCtx.data` exists.\ndataIdx,\n// If labelXY not provided, use `textConfig.position: 'inside'`\nlabelXY) {\n  var data = viewBuildCtx.data;\n  var isGeo = viewBuildCtx.isGeo;\n  var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n  var itemLayout = data && data.getItemLayout(dataIdx);\n  // In the following cases label will be drawn\n  // 1. In map series and data value is NaN\n  // 2. In geo component\n  // 3. Region has no series legendIcon, which will be add a showLabel flag in mapSymbolLayout\n  if (isGeo || isDataNaN || itemLayout && itemLayout.showLabel) {\n    var query = !isGeo ? dataIdx : regionName;\n    var labelFetcher = void 0;\n    // Consider dataIdx not found.\n    if (!data || dataIdx >= 0) {\n      labelFetcher = mapOrGeoModel;\n    }\n    var specifiedTextOpt = labelXY ? {\n      normal: {\n        align: 'center',\n        verticalAlign: 'middle'\n      }\n    } : null;\n    // Caveat: must be called after `setDefaultStateProxy(el);` called.\n    // because textContent will be assign with `el.stateProxy` inside.\n    setLabelStyle(el, getLabelStatesModels(regionModel), {\n      labelFetcher: labelFetcher,\n      labelDataIndex: query,\n      defaultText: regionName\n    }, specifiedTextOpt);\n    var textEl = el.getTextContent();\n    if (textEl) {\n      mapLabelRaw(textEl).ignore = textEl.ignore;\n      if (el.textConfig && labelXY) {\n        // Compute a relative offset based on the el bounding rect.\n        var rect = el.getBoundingRect().clone();\n        // Need to make sure the percent position base on the same rect in normal and\n        // emphasis state. Otherwise if using boundingRect of el, but the emphasis state\n        // has borderWidth (even 0.5px), the text position will be changed obviously\n        // if the position is very big like ['1234%', '1345%'].\n        el.textConfig.layoutRect = rect;\n        el.textConfig.position = [(labelXY[0] - rect.x) / rect.width * 100 + '%', (labelXY[1] - rect.y) / rect.height * 100 + '%'];\n      }\n    }\n    // PENDING:\n    // If labelLayout is enabled (test/label-layout.html), el.dataIndex should be specified.\n    // But el.dataIndex is also used to determine whether user event should be triggered,\n    // where el.seriesIndex or el.dataModel must be specified. At present for a single el\n    // there is not case that \"only label layout enabled but user event disabled\", so here\n    // we depends `resetEventTriggerForRegion` to do the job of setting `el.dataIndex`.\n    el.disableLabelAnimation = true;\n  } else {\n    el.removeTextContent();\n    el.removeTextConfig();\n    el.disableLabelAnimation = null;\n  }\n}\nfunction resetEventTriggerForRegion(viewBuildCtx, eventTrigger, regionName, regionModel, mapOrGeoModel,\n// Exist only if `viewBuildCtx.data` exists.\ndataIdx) {\n  // setItemGraphicEl, setHoverStyle after all polygons and labels\n  // are added to the regionGroup\n  if (viewBuildCtx.data) {\n    // FIXME: when series-map use a SVG map, and there are duplicated name specified\n    // on different SVG elements, after `data.setItemGraphicEl(...)`:\n    // (1) all of them will be mounted with `dataIndex`, `seriesIndex`, so that tooltip\n    // can be triggered only mouse hover. That's correct.\n    // (2) only the last element will be kept in `data`, so that if trigger tooltip\n    // by `dispatchAction`, only the last one can be found and triggered. That might be\n    // not correct. We will fix it in future if anyone demanding that.\n    viewBuildCtx.data.setItemGraphicEl(dataIdx, eventTrigger);\n  }\n  // series-map will not trigger \"geoselectchange\" no matter it is\n  // based on a declared geo component. Because series-map will\n  // trigger \"selectchange\". If it trigger both the two events,\n  // If users call `chart.dispatchAction({type: 'toggleSelect'})`,\n  // it not easy to also fire event \"geoselectchanged\".\n  else {\n    // Package custom mouse event for geo component\n    getECData(eventTrigger).eventData = {\n      componentType: 'geo',\n      componentIndex: mapOrGeoModel.componentIndex,\n      geoIndex: mapOrGeoModel.componentIndex,\n      name: regionName,\n      region: regionModel && regionModel.option || {}\n    };\n  }\n}\nfunction resetTooltipForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel) {\n  if (!viewBuildCtx.data) {\n    graphic.setTooltipConfig({\n      el: el,\n      componentModel: mapOrGeoModel,\n      itemName: regionName,\n      // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n      itemTooltipOption: regionModel.get('tooltip')\n    });\n  }\n}\nfunction resetStateTriggerForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel) {\n  // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n  el.highDownSilentOnTouch = !!mapOrGeoModel.get('selectedMode');\n  // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n  var emphasisModel = regionModel.getModel('emphasis');\n  var focus = emphasisModel.get('focus');\n  toggleHoverEmphasis(el, focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  if (viewBuildCtx.isGeo) {\n    enableComponentHighDownFeatures(el, mapOrGeoModel, regionName);\n  }\n  return focus;\n}\nfunction projectPolys(rings,\n// Polygons include exterior and interiors. Or polylines.\ncreateStream, isLine) {\n  var polygons = [];\n  var curPoly;\n  function startPolygon() {\n    curPoly = [];\n  }\n  function endPolygon() {\n    if (curPoly.length) {\n      polygons.push(curPoly);\n      curPoly = [];\n    }\n  }\n  var stream = createStream({\n    polygonStart: startPolygon,\n    polygonEnd: endPolygon,\n    lineStart: startPolygon,\n    lineEnd: endPolygon,\n    point: function (x, y) {\n      // May have NaN values from stream.\n      if (isFinite(x) && isFinite(y)) {\n        curPoly.push([x, y]);\n      }\n    },\n    sphere: function () {}\n  });\n  !isLine && stream.polygonStart();\n  zrUtil.each(rings, function (ring) {\n    stream.lineStart();\n    for (var i = 0; i < ring.length; i++) {\n      stream.point(ring[i][0], ring[i][1]);\n    }\n    stream.lineEnd();\n  });\n  !isLine && stream.polygonEnd();\n  return polygons;\n}\nexport default MapDraw;\n// @ts-ignore FIXME:TS fix the \"compatible with each other\"?"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}