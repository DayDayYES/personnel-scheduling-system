{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_c(\"el-select\", {\n    staticStyle: {\n      width: \"200px\",\n      \"margin-right\": \"10px\"\n    },\n    attrs: {\n      placeholder: \"请选择算法\"\n    },\n    model: {\n      value: _vm.selectedAlgorithm,\n      callback: function ($$v) {\n        _vm.selectedAlgorithm = $$v;\n      },\n      expression: \"selectedAlgorithm\"\n    }\n  }, [_c(\"el-option\", {\n    attrs: {\n      label: \"DDPG\",\n      value: \"ddpg\"\n    }\n  }), _c(\"el-option\", {\n    attrs: {\n      label: \"DDQN\",\n      value: \"ddqn\"\n    }\n  }), _c(\"el-option\", {\n    attrs: {\n      label: \"GA\",\n      value: \"ga\"\n    }\n  })], 1), _c(\"el-button\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    },\n    attrs: {\n      type: \"primary\",\n      loading: _vm.isLoading\n    },\n    on: {\n      click: _vm.runAlgorithm\n    }\n  }, [_vm._v(\"运行算法\")]), _vm.selectedAlgorithm === \"ddpg\" ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_c(\"el-input\", {\n    staticStyle: {\n      width: \"300px\",\n      \"margin-right\": \"10px\"\n    },\n    attrs: {\n      placeholder: \"请输入训练的最大迭代次数\"\n    },\n    model: {\n      value: _vm.inputData.max_episodes,\n      callback: function ($$v) {\n        _vm.$set(_vm.inputData, \"max_episodes\", $$v);\n      },\n      expression: \"inputData.max_episodes\"\n    }\n  })], 1) : _vm._e(), _vm.selectedAlgorithm === \"ddqn\" || _vm.selectedAlgorithm === \"ga\" ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_c(\"el-input\", {\n    staticStyle: {\n      width: \"300px\",\n      \"margin-right\": \"10px\"\n    },\n    attrs: {\n      placeholder: \"请输入参数（用逗号隔开）\"\n    },\n    model: {\n      value: _vm.inputData.params,\n      callback: function ($$v) {\n        _vm.$set(_vm.inputData, \"params\", $$v);\n      },\n      expression: \"inputData.params\"\n    }\n  })], 1) : _vm._e(), _vm.progressVisible ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"20px\"\n    }\n  }, [_c(\"el-progress\", {\n    attrs: {\n      percentage: _vm.progressPercentage,\n      status: _vm.progressStatus\n    }\n  }), _c(\"p\", {\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_vm._v(\"当前进度：\" + _vm._s(_vm.progressPercentage) + \"%\")])], 1) : _vm._e(), _vm.result ? _c(\"div\", {\n    staticStyle: {\n      \"margin-top\": \"20px\"\n    }\n  }, [_c(\"h3\", [_vm._v(\"算法结果：\")]), _c(\"pre\", [_vm._v(_vm._s(_vm.result))])]) : _vm._e()], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","staticStyle","width","attrs","placeholder","model","value","selectedAlgorithm","callback","$$v","expression","label","type","loading","isLoading","on","click","runAlgorithm","_v","inputData","max_episodes","$set","_e","params","progressVisible","percentage","progressPercentage","status","progressStatus","_s","result","staticRenderFns","_withStripped"],"sources":["D:/Program Files/JetBrains/IDEAProject/springboot-vue-wms/vuedemo2/src/components/user/Test.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-select\",\n        {\n          staticStyle: { width: \"200px\", \"margin-right\": \"10px\" },\n          attrs: { placeholder: \"请选择算法\" },\n          model: {\n            value: _vm.selectedAlgorithm,\n            callback: function ($$v) {\n              _vm.selectedAlgorithm = $$v\n            },\n            expression: \"selectedAlgorithm\",\n          },\n        },\n        [\n          _c(\"el-option\", { attrs: { label: \"DDPG\", value: \"ddpg\" } }),\n          _c(\"el-option\", { attrs: { label: \"DDQN\", value: \"ddqn\" } }),\n          _c(\"el-option\", { attrs: { label: \"GA\", value: \"ga\" } }),\n        ],\n        1\n      ),\n      _c(\n        \"el-button\",\n        {\n          staticStyle: { \"margin-top\": \"10px\" },\n          attrs: { type: \"primary\", loading: _vm.isLoading },\n          on: { click: _vm.runAlgorithm },\n        },\n        [_vm._v(\"运行算法\")]\n      ),\n      _vm.selectedAlgorithm === \"ddpg\"\n        ? _c(\n            \"div\",\n            { staticStyle: { \"margin-top\": \"10px\" } },\n            [\n              _c(\"el-input\", {\n                staticStyle: { width: \"300px\", \"margin-right\": \"10px\" },\n                attrs: { placeholder: \"请输入训练的最大迭代次数\" },\n                model: {\n                  value: _vm.inputData.max_episodes,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.inputData, \"max_episodes\", $$v)\n                  },\n                  expression: \"inputData.max_episodes\",\n                },\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.selectedAlgorithm === \"ddqn\" || _vm.selectedAlgorithm === \"ga\"\n        ? _c(\n            \"div\",\n            { staticStyle: { \"margin-top\": \"10px\" } },\n            [\n              _c(\"el-input\", {\n                staticStyle: { width: \"300px\", \"margin-right\": \"10px\" },\n                attrs: { placeholder: \"请输入参数（用逗号隔开）\" },\n                model: {\n                  value: _vm.inputData.params,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.inputData, \"params\", $$v)\n                  },\n                  expression: \"inputData.params\",\n                },\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.progressVisible\n        ? _c(\n            \"div\",\n            { staticStyle: { \"margin-top\": \"20px\" } },\n            [\n              _c(\"el-progress\", {\n                attrs: {\n                  percentage: _vm.progressPercentage,\n                  status: _vm.progressStatus,\n                },\n              }),\n              _c(\"p\", { staticStyle: { \"margin-top\": \"10px\" } }, [\n                _vm._v(\"当前进度：\" + _vm._s(_vm.progressPercentage) + \"%\"),\n              ]),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.result\n        ? _c(\"div\", { staticStyle: { \"margin-top\": \"20px\" } }, [\n            _c(\"h3\", [_vm._v(\"算法结果：\")]),\n            _c(\"pre\", [_vm._v(_vm._s(_vm.result))]),\n          ])\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"AAAA,IAAIA,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC7B,IAAIC,GAAG,GAAG,IAAI;IACZC,EAAE,GAAGD,GAAG,CAACE,KAAK,CAACD,EAAE;EACnB,OAAOA,EAAE,CACP,KAAK,EACL,CACEA,EAAE,CACA,WAAW,EACX;IACEE,WAAW,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAE,cAAc,EAAE;IAAO,CAAC;IACvDC,KAAK,EAAE;MAAEC,WAAW,EAAE;IAAQ,CAAC;IAC/BC,KAAK,EAAE;MACLC,KAAK,EAAER,GAAG,CAACS,iBAAiB;MAC5BC,QAAQ,EAAE,SAAAA,CAAUC,GAAG,EAAE;QACvBX,GAAG,CAACS,iBAAiB,GAAGE,GAAG;MAC7B,CAAC;MACDC,UAAU,EAAE;IACd;EACF,CAAC,EACD,CACEX,EAAE,CAAC,WAAW,EAAE;IAAEI,KAAK,EAAE;MAAEQ,KAAK,EAAE,MAAM;MAAEL,KAAK,EAAE;IAAO;EAAE,CAAC,CAAC,EAC5DP,EAAE,CAAC,WAAW,EAAE;IAAEI,KAAK,EAAE;MAAEQ,KAAK,EAAE,MAAM;MAAEL,KAAK,EAAE;IAAO;EAAE,CAAC,CAAC,EAC5DP,EAAE,CAAC,WAAW,EAAE;IAAEI,KAAK,EAAE;MAAEQ,KAAK,EAAE,IAAI;MAAEL,KAAK,EAAE;IAAK;EAAE,CAAC,CAAC,CACzD,EACD,CACF,CAAC,EACDP,EAAE,CACA,WAAW,EACX;IACEE,WAAW,EAAE;MAAE,YAAY,EAAE;IAAO,CAAC;IACrCE,KAAK,EAAE;MAAES,IAAI,EAAE,SAAS;MAAEC,OAAO,EAAEf,GAAG,CAACgB;IAAU,CAAC;IAClDC,EAAE,EAAE;MAAEC,KAAK,EAAElB,GAAG,CAACmB;IAAa;EAChC,CAAC,EACD,CAACnB,GAAG,CAACoB,EAAE,CAAC,MAAM,CAAC,CACjB,CAAC,EACDpB,GAAG,CAACS,iBAAiB,KAAK,MAAM,GAC5BR,EAAE,CACA,KAAK,EACL;IAAEE,WAAW,EAAE;MAAE,YAAY,EAAE;IAAO;EAAE,CAAC,EACzC,CACEF,EAAE,CAAC,UAAU,EAAE;IACbE,WAAW,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAE,cAAc,EAAE;IAAO,CAAC;IACvDC,KAAK,EAAE;MAAEC,WAAW,EAAE;IAAe,CAAC;IACtCC,KAAK,EAAE;MACLC,KAAK,EAAER,GAAG,CAACqB,SAAS,CAACC,YAAY;MACjCZ,QAAQ,EAAE,SAAAA,CAAUC,GAAG,EAAE;QACvBX,GAAG,CAACuB,IAAI,CAACvB,GAAG,CAACqB,SAAS,EAAE,cAAc,EAAEV,GAAG,CAAC;MAC9C,CAAC;MACDC,UAAU,EAAE;IACd;EACF,CAAC,CAAC,CACH,EACD,CACF,CAAC,GACDZ,GAAG,CAACwB,EAAE,CAAC,CAAC,EACZxB,GAAG,CAACS,iBAAiB,KAAK,MAAM,IAAIT,GAAG,CAACS,iBAAiB,KAAK,IAAI,GAC9DR,EAAE,CACA,KAAK,EACL;IAAEE,WAAW,EAAE;MAAE,YAAY,EAAE;IAAO;EAAE,CAAC,EACzC,CACEF,EAAE,CAAC,UAAU,EAAE;IACbE,WAAW,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAE,cAAc,EAAE;IAAO,CAAC;IACvDC,KAAK,EAAE;MAAEC,WAAW,EAAE;IAAe,CAAC;IACtCC,KAAK,EAAE;MACLC,KAAK,EAAER,GAAG,CAACqB,SAAS,CAACI,MAAM;MAC3Bf,QAAQ,EAAE,SAAAA,CAAUC,GAAG,EAAE;QACvBX,GAAG,CAACuB,IAAI,CAACvB,GAAG,CAACqB,SAAS,EAAE,QAAQ,EAAEV,GAAG,CAAC;MACxC,CAAC;MACDC,UAAU,EAAE;IACd;EACF,CAAC,CAAC,CACH,EACD,CACF,CAAC,GACDZ,GAAG,CAACwB,EAAE,CAAC,CAAC,EACZxB,GAAG,CAAC0B,eAAe,GACfzB,EAAE,CACA,KAAK,EACL;IAAEE,WAAW,EAAE;MAAE,YAAY,EAAE;IAAO;EAAE,CAAC,EACzC,CACEF,EAAE,CAAC,aAAa,EAAE;IAChBI,KAAK,EAAE;MACLsB,UAAU,EAAE3B,GAAG,CAAC4B,kBAAkB;MAClCC,MAAM,EAAE7B,GAAG,CAAC8B;IACd;EACF,CAAC,CAAC,EACF7B,EAAE,CAAC,GAAG,EAAE;IAAEE,WAAW,EAAE;MAAE,YAAY,EAAE;IAAO;EAAE,CAAC,EAAE,CACjDH,GAAG,CAACoB,EAAE,CAAC,OAAO,GAAGpB,GAAG,CAAC+B,EAAE,CAAC/B,GAAG,CAAC4B,kBAAkB,CAAC,GAAG,GAAG,CAAC,CACvD,CAAC,CACH,EACD,CACF,CAAC,GACD5B,GAAG,CAACwB,EAAE,CAAC,CAAC,EACZxB,GAAG,CAACgC,MAAM,GACN/B,EAAE,CAAC,KAAK,EAAE;IAAEE,WAAW,EAAE;MAAE,YAAY,EAAE;IAAO;EAAE,CAAC,EAAE,CACnDF,EAAE,CAAC,IAAI,EAAE,CAACD,GAAG,CAACoB,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAC3BnB,EAAE,CAAC,KAAK,EAAE,CAACD,GAAG,CAACoB,EAAE,CAACpB,GAAG,CAAC+B,EAAE,CAAC/B,GAAG,CAACgC,MAAM,CAAC,CAAC,CAAC,CAAC,CACxC,CAAC,GACFhC,GAAG,CAACwB,EAAE,CAAC,CAAC,CACb,EACD,CACF,CAAC;AACH,CAAC;AACD,IAAIS,eAAe,GAAG,EAAE;AACxBlC,MAAM,CAACmC,aAAa,GAAG,IAAI;AAE3B,SAASnC,MAAM,EAAEkC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}