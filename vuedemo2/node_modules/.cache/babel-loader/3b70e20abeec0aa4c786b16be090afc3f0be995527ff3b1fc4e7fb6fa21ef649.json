{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { BoundingRect } from '../../util/graphic.js';\n/**\n * [CAVEAT] `updateViewOnPan` and `updateViewOnZoom` modifies the group transform directly,\n *  but the 'center' and 'zoom' in echarts option and 'View' coordinate system are not updated yet,\n *  which must be performed later in 'xxxRoam' action by calling `updateCenterAndZoom`.\n * @see {updateCenterAndZoomInAction}\n */\nexport function updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  target.x += dx;\n  target.y += dy;\n  target.dirty();\n}\nexport function updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n  newZoom = clampByZoomLimit(newZoom, zoomLimit);\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom;\n  zoomTransformableByOrigin(target, zoomX, zoomY, zoomScale);\n  target.dirty();\n}\n/**\n * A abstraction for some similar impl in roaming.\n */\nexport function updateController(seriesModel, api, pointerCheckerEl, controller, controllerHost, clipRect) {\n  var tmpRect = new BoundingRect(0, 0, 0, 0);\n  controller.enable(seriesModel.get('roam'), {\n    api: api,\n    zInfo: {\n      component: seriesModel\n    },\n    triggerInfo: {\n      roamTrigger: seriesModel.get('roamTrigger'),\n      isInSelf: function (e, x, y) {\n        tmpRect.copy(pointerCheckerEl.getBoundingRect());\n        tmpRect.applyTransform(pointerCheckerEl.getComputedTransform());\n        return tmpRect.contain(x, y);\n      },\n      isInClip: function (e, x, y) {\n        return !clipRect || clipRect.contain(x, y);\n      }\n    }\n  });\n  controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n  var coordinate = seriesModel.coordinateSystem;\n  controllerHost.zoom = coordinate ? coordinate.getZoom() : 1;\n  var type = seriesModel.subType + 'Roam';\n  controller.off('pan').off('zoom').on('pan', function (e) {\n    updateViewOnPan(controllerHost, e.dx, e.dy);\n    api.dispatchAction({\n      seriesId: seriesModel.id,\n      type: type,\n      dx: e.dx,\n      dy: e.dy\n    });\n  }).on('zoom', function (e) {\n    /**\n     * FIXME: should do nothing except `api.dispatchAction` here, the other logic\n     *  should be performed in the action handler and `updateTransform`; otherwise,\n     *  they are inconsistent if user triggers this action explicitly.\n     */\n    updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n    api.dispatchAction({\n      seriesId: seriesModel.id,\n      type: type,\n      zoom: e.scale,\n      originX: e.originX,\n      originY: e.originY\n    });\n    // Only update label layout on zoom\n    api.updateLabelLayout();\n  });\n}\nfunction getCenterCoord(view, point) {\n  // Use projected coord as center because it's linear.\n  return view.pointToProjected ? view.pointToProjected(point) : view.pointToData(point);\n}\n/**\n * Should be called only in action handler.\n * @see {updateViewOnPan|updateViewOnZoom}\n */\nexport function updateCenterAndZoomInAction(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var deltaZoom = payload.zoom;\n  var point = view.projectedToPoint ? view.projectedToPoint(center) : view.dataToPoint(center);\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    view.setCenter(getCenterCoord(view, point));\n  }\n  if (deltaZoom != null) {\n    deltaZoom = clampByZoomLimit(previousZoom * deltaZoom, zoomLimit) / previousZoom;\n    zoomTransformableByOrigin(view, payload.originX, payload.originY, deltaZoom);\n    view.updateTransform();\n    // [NOTICE] Tricky: `getCetnerCoord` uses `this.invTransform` modified by the `updateTransform` above.\n    view.setCenter(getCenterCoord(view, point));\n    view.setZoom(deltaZoom * previousZoom);\n  }\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\nfunction zoomTransformableByOrigin(target, originX, originY, deltaZoom) {\n  // Keep the mouse center when scaling.\n  target.x -= (originX - target.x) * (deltaZoom - 1);\n  target.y -= (originY - target.y) * (deltaZoom - 1);\n  target.scaleX *= deltaZoom;\n  target.scaleY *= deltaZoom;\n}\nexport function clampByZoomLimit(zoom, zoomLimit) {\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    zoom = Math.max(Math.min(zoomMax, zoom), zoomMin);\n  }\n  return zoom;\n}","map":{"version":3,"names":["BoundingRect","updateViewOnPan","controllerHost","dx","dy","target","x","y","dirty","updateViewOnZoom","zoomDelta","zoomX","zoomY","zoomLimit","newZoom","zoom","clampByZoomLimit","zoomScale","zoomTransformableByOrigin","updateController","seriesModel","api","pointerCheckerEl","controller","clipRect","tmpRect","enable","get","zInfo","component","triggerInfo","roamTrigger","isInSelf","e","copy","getBoundingRect","applyTransform","getComputedTransform","contain","isInClip","coordinate","coordinateSystem","getZoom","type","subType","off","on","dispatchAction","seriesId","id","scale","originX","originY","updateLabelLayout","getCenterCoord","view","point","pointToProjected","pointToData","updateCenterAndZoomInAction","payload","previousZoom","center","getCenter","deltaZoom","projectedToPoint","dataToPoint","setCenter","updateTransform","setZoom","scaleX","scaleY","zoomMin","min","zoomMax","max","Infinity","Math"],"sources":["D:/Program Files/JetBrains/IDEAProject/springboot-vue-wms_test/vuedemo2/node_modules/echarts/lib/component/helper/roamHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { BoundingRect } from '../../util/graphic.js';\n/**\n * [CAVEAT] `updateViewOnPan` and `updateViewOnZoom` modifies the group transform directly,\n *  but the 'center' and 'zoom' in echarts option and 'View' coordinate system are not updated yet,\n *  which must be performed later in 'xxxRoam' action by calling `updateCenterAndZoom`.\n * @see {updateCenterAndZoomInAction}\n */\nexport function updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  target.x += dx;\n  target.y += dy;\n  target.dirty();\n}\nexport function updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n  newZoom = clampByZoomLimit(newZoom, zoomLimit);\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom;\n  zoomTransformableByOrigin(target, zoomX, zoomY, zoomScale);\n  target.dirty();\n}\n/**\n * A abstraction for some similar impl in roaming.\n */\nexport function updateController(seriesModel, api, pointerCheckerEl, controller, controllerHost, clipRect) {\n  var tmpRect = new BoundingRect(0, 0, 0, 0);\n  controller.enable(seriesModel.get('roam'), {\n    api: api,\n    zInfo: {\n      component: seriesModel\n    },\n    triggerInfo: {\n      roamTrigger: seriesModel.get('roamTrigger'),\n      isInSelf: function (e, x, y) {\n        tmpRect.copy(pointerCheckerEl.getBoundingRect());\n        tmpRect.applyTransform(pointerCheckerEl.getComputedTransform());\n        return tmpRect.contain(x, y);\n      },\n      isInClip: function (e, x, y) {\n        return !clipRect || clipRect.contain(x, y);\n      }\n    }\n  });\n  controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n  var coordinate = seriesModel.coordinateSystem;\n  controllerHost.zoom = coordinate ? coordinate.getZoom() : 1;\n  var type = seriesModel.subType + 'Roam';\n  controller.off('pan').off('zoom').on('pan', function (e) {\n    updateViewOnPan(controllerHost, e.dx, e.dy);\n    api.dispatchAction({\n      seriesId: seriesModel.id,\n      type: type,\n      dx: e.dx,\n      dy: e.dy\n    });\n  }).on('zoom', function (e) {\n    /**\n     * FIXME: should do nothing except `api.dispatchAction` here, the other logic\n     *  should be performed in the action handler and `updateTransform`; otherwise,\n     *  they are inconsistent if user triggers this action explicitly.\n     */\n    updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n    api.dispatchAction({\n      seriesId: seriesModel.id,\n      type: type,\n      zoom: e.scale,\n      originX: e.originX,\n      originY: e.originY\n    });\n    // Only update label layout on zoom\n    api.updateLabelLayout();\n  });\n}\nfunction getCenterCoord(view, point) {\n  // Use projected coord as center because it's linear.\n  return view.pointToProjected ? view.pointToProjected(point) : view.pointToData(point);\n}\n/**\n * Should be called only in action handler.\n * @see {updateViewOnPan|updateViewOnZoom}\n */\nexport function updateCenterAndZoomInAction(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var deltaZoom = payload.zoom;\n  var point = view.projectedToPoint ? view.projectedToPoint(center) : view.dataToPoint(center);\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    view.setCenter(getCenterCoord(view, point));\n  }\n  if (deltaZoom != null) {\n    deltaZoom = clampByZoomLimit(previousZoom * deltaZoom, zoomLimit) / previousZoom;\n    zoomTransformableByOrigin(view, payload.originX, payload.originY, deltaZoom);\n    view.updateTransform();\n    // [NOTICE] Tricky: `getCetnerCoord` uses `this.invTransform` modified by the `updateTransform` above.\n    view.setCenter(getCenterCoord(view, point));\n    view.setZoom(deltaZoom * previousZoom);\n  }\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\nfunction zoomTransformableByOrigin(target, originX, originY, deltaZoom) {\n  // Keep the mouse center when scaling.\n  target.x -= (originX - target.x) * (deltaZoom - 1);\n  target.y -= (originY - target.y) * (deltaZoom - 1);\n  target.scaleX *= deltaZoom;\n  target.scaleY *= deltaZoom;\n}\nexport function clampByZoomLimit(zoom, zoomLimit) {\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    zoom = Math.max(Math.min(zoomMax, zoom), zoomMin);\n  }\n  return zoom;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}